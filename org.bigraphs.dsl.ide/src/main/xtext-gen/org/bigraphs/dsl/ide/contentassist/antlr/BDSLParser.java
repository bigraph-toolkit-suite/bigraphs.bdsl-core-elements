/*
 * generated by Xtext 2.32.0
 */
package org.bigraphs.dsl.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.Map;
import org.bigraphs.dsl.ide.contentassist.antlr.internal.InternalBDSLParser;
import org.bigraphs.dsl.services.BDSLGrammarAccess;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;

public class BDSLParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(BDSLGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, BDSLGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getBDSLDocumentAccess().getAlternatives_1(), "rule__BDSLDocument__Alternatives_1");
			builder.put(grammarAccess.getAbstractElementAccess().getAlternatives(), "rule__AbstractElement__Alternatives");
			builder.put(grammarAccess.getAbstractNamedSignatureElementAccess().getAlternatives(), "rule__AbstractNamedSignatureElement__Alternatives");
			builder.put(grammarAccess.getIdOrKwAccess().getAlternatives(), "rule__IdOrKw__Alternatives");
			builder.put(grammarAccess.getKEYWORDAccess().getAlternatives(), "rule__KEYWORD__Alternatives");
			builder.put(grammarAccess.getVAR_DECL_KEWORDSAccess().getAlternatives(), "rule__VAR_DECL_KEWORDS__Alternatives");
			builder.put(grammarAccess.getMETHOD_KEYWORDAccess().getAlternatives(), "rule__METHOD_KEYWORD__Alternatives");
			builder.put(grammarAccess.getControlDefAccess().getAlternatives_2(), "rule__ControlDef__Alternatives_2");
			builder.put(grammarAccess.getAbstractBigraphDeclarationAccess().getAlternatives(), "rule__AbstractBigraphDeclaration__Alternatives");
			builder.put(grammarAccess.getElementaryBigraphsAccess().getAlternatives(), "rule__ElementaryBigraphs__Alternatives");
			builder.put(grammarAccess.getBarrenAccess().getAlternatives_0(), "rule__Barren__Alternatives_0");
			builder.put(grammarAccess.getClosureAccess().getAlternatives_0(), "rule__Closure__Alternatives_0");
			builder.put(grammarAccess.getSubstitutionAccess().getAlternatives_0(), "rule__Substitution__Alternatives_0");
			builder.put(grammarAccess.getBigraphVarDeclOrReferenceAccess().getAlternatives(), "rule__BigraphVarDeclOrReference__Alternatives");
			builder.put(grammarAccess.getBigraphRuleDeclOrReferenceAccess().getAlternatives(), "rule__BigraphRuleDeclOrReference__Alternatives");
			builder.put(grammarAccess.getBigraphPredDeclOrReferenceAccess().getAlternatives(), "rule__BigraphPredDeclOrReference__Alternatives");
			builder.put(grammarAccess.getBigraphBdslVarDeclOrReferenceAccess().getAlternatives(), "rule__BigraphBdslVarDeclOrReference__Alternatives");
			builder.put(grammarAccess.getPrimaryExpressionAccess().getAlternatives(), "rule__PrimaryExpression__Alternatives");
			builder.put(grammarAccess.getBDSLReferenceSymbolAccess().getAlternatives(), "rule__BDSLReferenceSymbol__Alternatives");
			builder.put(grammarAccess.getAssignmentOrVariableDeclarationAccess().getAlternatives(), "rule__AssignmentOrVariableDeclaration__Alternatives");
			builder.put(grammarAccess.getBDSLReactDefinitionAccess().getRedexAlternatives_0_0(), "rule__BDSLReactDefinition__RedexAlternatives_0_0");
			builder.put(grammarAccess.getBDSLReactDefinitionAccess().getReactumAlternatives_4_0(), "rule__BDSLReactDefinition__ReactumAlternatives_4_0");
			builder.put(grammarAccess.getBDSLBrsDefinitionAccess().getAlternatives(), "rule__BDSLBrsDefinition__Alternatives");
			builder.put(grammarAccess.getBDSLSelectionExpressionAccess().getAlternatives(), "rule__BDSLSelectionExpression__Alternatives");
			builder.put(grammarAccess.getBDSLSelectionExpressionAccess().getAlternatives_1_1(), "rule__BDSLSelectionExpression__Alternatives_1_1");
			builder.put(grammarAccess.getBDSLTerminalExpressionAccess().getAlternatives(), "rule__BDSLTerminalExpression__Alternatives");
			builder.put(grammarAccess.getAssignableBigraphExpressionAccess().getAlternatives(), "rule__AssignableBigraphExpression__Alternatives");
			builder.put(grammarAccess.getAssignableBigraphExpressionWithExplicitSigAccess().getAlternatives(), "rule__AssignableBigraphExpressionWithExplicitSig__Alternatives");
			builder.put(grammarAccess.getMethodStatementsAccess().getAlternatives(), "rule__MethodStatements__Alternatives");
			builder.put(grammarAccess.getBdslCallbackMethodsAccess().getAlternatives(), "rule__BdslCallbackMethods__Alternatives");
			builder.put(grammarAccess.getPrintableExpressionAccess().getAlternatives(), "rule__PrintableExpression__Alternatives");
			builder.put(grammarAccess.getAbstractMainStatementsAccess().getAlternatives(), "rule__AbstractMainStatements__Alternatives");
			builder.put(grammarAccess.getCallbackStatementsAccess().getAlternatives(), "rule__CallbackStatements__Alternatives");
			builder.put(grammarAccess.getUdfCallExpressionAccess().getAlternatives_2(), "rule__UdfCallExpression__Alternatives_2");
			builder.put(grammarAccess.getUDFArgumentTypesAccess().getAlternatives(), "rule__UDFArgumentTypes__Alternatives");
			builder.put(grammarAccess.getXAssignmentAccess().getAlternatives(), "rule__XAssignment__Alternatives");
			builder.put(grammarAccess.getOpMultiAssignAccess().getAlternatives(), "rule__OpMultiAssign__Alternatives");
			builder.put(grammarAccess.getOpEqualityAccess().getAlternatives(), "rule__OpEquality__Alternatives");
			builder.put(grammarAccess.getXRelationalExpressionAccess().getAlternatives_1(), "rule__XRelationalExpression__Alternatives_1");
			builder.put(grammarAccess.getOpCompareAccess().getAlternatives(), "rule__OpCompare__Alternatives");
			builder.put(grammarAccess.getOpOtherAccess().getAlternatives(), "rule__OpOther__Alternatives");
			builder.put(grammarAccess.getOpOtherAccess().getAlternatives_5_1(), "rule__OpOther__Alternatives_5_1");
			builder.put(grammarAccess.getOpOtherAccess().getAlternatives_6_1(), "rule__OpOther__Alternatives_6_1");
			builder.put(grammarAccess.getOpAddAccess().getAlternatives(), "rule__OpAdd__Alternatives");
			builder.put(grammarAccess.getOpMultiAccess().getAlternatives(), "rule__OpMulti__Alternatives");
			builder.put(grammarAccess.getXUnaryOperationAccess().getAlternatives(), "rule__XUnaryOperation__Alternatives");
			builder.put(grammarAccess.getOpUnaryAccess().getAlternatives(), "rule__OpUnary__Alternatives");
			builder.put(grammarAccess.getOpPostfixAccess().getAlternatives(), "rule__OpPostfix__Alternatives");
			builder.put(grammarAccess.getXMemberFeatureCallAccess().getAlternatives_1(), "rule__XMemberFeatureCall__Alternatives_1");
			builder.put(grammarAccess.getXMemberFeatureCallAccess().getAlternatives_1_0_0_0_1(), "rule__XMemberFeatureCall__Alternatives_1_0_0_0_1");
			builder.put(grammarAccess.getXMemberFeatureCallAccess().getAlternatives_1_1_0_0_1(), "rule__XMemberFeatureCall__Alternatives_1_1_0_0_1");
			builder.put(grammarAccess.getXMemberFeatureCallAccess().getAlternatives_1_1_3_1(), "rule__XMemberFeatureCall__Alternatives_1_1_3_1");
			builder.put(grammarAccess.getXPrimaryExpressionAccess().getAlternatives(), "rule__XPrimaryExpression__Alternatives");
			builder.put(grammarAccess.getXLiteralAccess().getAlternatives(), "rule__XLiteral__Alternatives");
			builder.put(grammarAccess.getXCollectionLiteralAccess().getAlternatives(), "rule__XCollectionLiteral__Alternatives");
			builder.put(grammarAccess.getXSwitchExpressionAccess().getAlternatives_2(), "rule__XSwitchExpression__Alternatives_2");
			builder.put(grammarAccess.getXCasePartAccess().getAlternatives_3(), "rule__XCasePart__Alternatives_3");
			builder.put(grammarAccess.getXExpressionOrVarDeclarationAccess().getAlternatives(), "rule__XExpressionOrVarDeclaration__Alternatives");
			builder.put(grammarAccess.getXVariableDeclarationAccess().getAlternatives_1(), "rule__XVariableDeclaration__Alternatives_1");
			builder.put(grammarAccess.getXVariableDeclarationAccess().getAlternatives_2(), "rule__XVariableDeclaration__Alternatives_2");
			builder.put(grammarAccess.getXFeatureCallAccess().getAlternatives_3_1(), "rule__XFeatureCall__Alternatives_3_1");
			builder.put(grammarAccess.getFeatureCallIDAccess().getAlternatives(), "rule__FeatureCallID__Alternatives");
			builder.put(grammarAccess.getIdOrSuperAccess().getAlternatives(), "rule__IdOrSuper__Alternatives");
			builder.put(grammarAccess.getXConstructorCallAccess().getAlternatives_4_1(), "rule__XConstructorCall__Alternatives_4_1");
			builder.put(grammarAccess.getXBooleanLiteralAccess().getAlternatives_1(), "rule__XBooleanLiteral__Alternatives_1");
			builder.put(grammarAccess.getXTryCatchFinallyExpressionAccess().getAlternatives_3(), "rule__XTryCatchFinallyExpression__Alternatives_3");
			builder.put(grammarAccess.getNumberAccess().getAlternatives(), "rule__Number__Alternatives");
			builder.put(grammarAccess.getNumberAccess().getAlternatives_1_0(), "rule__Number__Alternatives_1_0");
			builder.put(grammarAccess.getNumberAccess().getAlternatives_1_1_1(), "rule__Number__Alternatives_1_1_1");
			builder.put(grammarAccess.getJvmTypeReferenceAccess().getAlternatives(), "rule__JvmTypeReference__Alternatives");
			builder.put(grammarAccess.getJvmArgumentTypeReferenceAccess().getAlternatives(), "rule__JvmArgumentTypeReference__Alternatives");
			builder.put(grammarAccess.getJvmWildcardTypeReferenceAccess().getAlternatives_2(), "rule__JvmWildcardTypeReference__Alternatives_2");
			builder.put(grammarAccess.getXImportDeclarationAccess().getAlternatives_1(), "rule__XImportDeclaration__Alternatives_1");
			builder.put(grammarAccess.getXImportDeclarationAccess().getAlternatives_1_0_3(), "rule__XImportDeclaration__Alternatives_1_0_3");
			builder.put(grammarAccess.getVariableCreationTypeAccess().getAlternatives(), "rule__VariableCreationType__Alternatives");
			builder.put(grammarAccess.getBinaryParallelOperatorAccess().getAlternatives(), "rule__BinaryParallelOperator__Alternatives");
			builder.put(grammarAccess.getBinaryNestingOperatorAccess().getAlternatives(), "rule__BinaryNestingOperator__Alternatives");
			builder.put(grammarAccess.getControlTypeAccess().getAlternatives(), "rule__ControlType__Alternatives");
			builder.put(grammarAccess.getPredicateTypeAccess().getAlternatives(), "rule__PredicateType__Alternatives");
			builder.put(grammarAccess.getExportFormatAccess().getAlternatives(), "rule__ExportFormat__Alternatives");
			builder.put(grammarAccess.getLoadFormatAccess().getAlternatives(), "rule__LoadFormat__Alternatives");
			builder.put(grammarAccess.getDataSinkAccess().getAlternatives(), "rule__DataSink__Alternatives");
			builder.put(grammarAccess.getDataSourceAccess().getAlternatives(), "rule__DataSource__Alternatives");
			builder.put(grammarAccess.getOutputModeModelAccess().getAlternatives(), "rule__OutputModeModel__Alternatives");
			builder.put(grammarAccess.getBDSLDocumentAccess().getGroup(), "rule__BDSLDocument__Group__0");
			builder.put(grammarAccess.getBDSLDocumentAccess().getGroup_0(), "rule__BDSLDocument__Group_0__0");
			builder.put(grammarAccess.getQualifiedNameWithWildcardOptionalAccess().getGroup(), "rule__QualifiedNameWithWildcardOptional__Group__0");
			builder.put(grammarAccess.getQualifiedNameWithWildcardOptionalAccess().getGroup_1(), "rule__QualifiedNameWithWildcardOptional__Group_1__0");
			builder.put(grammarAccess.getFQNAccess().getGroup(), "rule__FQN__Group__0");
			builder.put(grammarAccess.getFQNAccess().getGroup_1(), "rule__FQN__Group_1__0");
			builder.put(grammarAccess.getBDSLDocumentImportAccess().getGroup(), "rule__BDSLDocumentImport__Group__0");
			builder.put(grammarAccess.getBDSLUdfImportAccess().getGroup(), "rule__BDSLUdfImport__Group__0");
			builder.put(grammarAccess.getFLOATAccess().getGroup(), "rule__FLOAT__Group__0");
			builder.put(grammarAccess.getBDSLNameSigDeclFragAccess().getGroup(), "rule__BDSLNameSigDeclFrag__Group__0");
			builder.put(grammarAccess.getBDSLNameSigDeclFragAccess().getGroup_1(), "rule__BDSLNameSigDeclFrag__Group_1__0");
			builder.put(grammarAccess.getBDSLSiteVarsAndControlVarFragAccess().getGroup(), "rule__BDSLSiteVarsAndControlVarFrag__Group__0");
			builder.put(grammarAccess.getBDSLSiteVarsAndControlVarFragAccess().getGroup_0(), "rule__BDSLSiteVarsAndControlVarFrag__Group_0__0");
			builder.put(grammarAccess.getBDSLSiteVarsAndControlVarFragAccess().getGroup_0_2(), "rule__BDSLSiteVarsAndControlVarFrag__Group_0_2__0");
			builder.put(grammarAccess.getMainElementAccess().getGroup(), "rule__MainElement__Group__0");
			builder.put(grammarAccess.getMAIN_KEYWORDAccess().getGroup(), "rule__MAIN_KEYWORD__Group__0");
			builder.put(grammarAccess.getSignatureAccess().getGroup(), "rule__Signature__Group__0");
			builder.put(grammarAccess.getSignatureAccess().getGroup_3(), "rule__Signature__Group_3__0");
			builder.put(grammarAccess.getControlDefAccess().getGroup(), "rule__ControlDef__Group__0");
			builder.put(grammarAccess.getControlDefAccess().getGroup_2_0(), "rule__ControlDef__Group_2_0__0");
			builder.put(grammarAccess.getControlDefAccess().getGroup_2_1(), "rule__ControlDef__Group_2_1__0");
			builder.put(grammarAccess.getLocalVarDeclAccess().getGroup(), "rule__LocalVarDecl__Group__0");
			builder.put(grammarAccess.getLVD2Access().getGroup(), "rule__LVD2__Group__0");
			builder.put(grammarAccess.getNodeExpressionCallAccess().getGroup(), "rule__NodeExpressionCall__Group__0");
			builder.put(grammarAccess.getNodeExpressionCallAccess().getGroup_1(), "rule__NodeExpressionCall__Group_1__0");
			builder.put(grammarAccess.getNodeExpressionCallAccess().getGroup_1_2(), "rule__NodeExpressionCall__Group_1_2__0");
			builder.put(grammarAccess.getNameConstantAccess().getGroup(), "rule__NameConstant__Group__0");
			builder.put(grammarAccess.getLocalRuleDeclAccess().getGroup(), "rule__LocalRuleDecl__Group__0");
			builder.put(grammarAccess.getLocalPredicateDeclarationAccess().getGroup(), "rule__LocalPredicateDeclaration__Group__0");
			builder.put(grammarAccess.getLocalPredicateDeclarationAccess().getGroup_3(), "rule__LocalPredicateDeclaration__Group_3__0");
			builder.put(grammarAccess.getBRSDefinitionAccess().getGroup(), "rule__BRSDefinition__Group__0");
			builder.put(grammarAccess.getBarrenAccess().getGroup(), "rule__Barren__Group__0");
			builder.put(grammarAccess.getMergeAccess().getGroup(), "rule__Merge__Group__0");
			builder.put(grammarAccess.getClosureAccess().getGroup(), "rule__Closure__Group__0");
			builder.put(grammarAccess.getClosureAccess().getGroup_4(), "rule__Closure__Group_4__0");
			builder.put(grammarAccess.getSubstitutionAccess().getGroup(), "rule__Substitution__Group__0");
			builder.put(grammarAccess.getSubstitutionAccess().getGroup_5(), "rule__Substitution__Group_5__0");
			builder.put(grammarAccess.getSubstitutionAccess().getGroup_5_2(), "rule__Substitution__Group_5_2__0");
			builder.put(grammarAccess.getSiteAccess().getGroup(), "rule__Site__Group__0");
			builder.put(grammarAccess.getJoinAccess().getGroup(), "rule__Join__Group__0");
			builder.put(grammarAccess.getAdditionAccess().getGroup(), "rule__Addition__Group__0");
			builder.put(grammarAccess.getAdditionAccess().getGroup_1(), "rule__Addition__Group_1__0");
			builder.put(grammarAccess.getAdditionAccess().getGroup_1_0(), "rule__Addition__Group_1_0__0");
			builder.put(grammarAccess.getMultiplicationAccess().getGroup(), "rule__Multiplication__Group__0");
			builder.put(grammarAccess.getMultiplicationAccess().getGroup_1(), "rule__Multiplication__Group_1__0");
			builder.put(grammarAccess.getMultiplicationAccess().getGroup_1_0(), "rule__Multiplication__Group_1_0__0");
			builder.put(grammarAccess.getPrimaryExpressionAccess().getGroup_0(), "rule__PrimaryExpression__Group_0__0");
			builder.put(grammarAccess.getBDSLVariableDeclaration2Access().getGroup(), "rule__BDSLVariableDeclaration2__Group__0");
			builder.put(grammarAccess.getBDSLVariableDeclaration2Access().getGroup_2(), "rule__BDSLVariableDeclaration2__Group_2__0");
			builder.put(grammarAccess.getBDSLReferenceDeclarationAccess().getGroup(), "rule__BDSLReferenceDeclaration__Group__0");
			builder.put(grammarAccess.getBDSLReferenceDeclarationAccess().getGroup_2(), "rule__BDSLReferenceDeclaration__Group_2__0");
			builder.put(grammarAccess.getBDSLAssignmentAccess().getGroup(), "rule__BDSLAssignment__Group__0");
			builder.put(grammarAccess.getBDSLAssignmentAccess().getGroup_1(), "rule__BDSLAssignment__Group_1__0");
			builder.put(grammarAccess.getBDSLReactDefinitionAccess().getGroup(), "rule__BDSLReactDefinition__Group__0");
			builder.put(grammarAccess.getBDSLBrsDefinitionAccess().getGroup_1(), "rule__BDSLBrsDefinition__Group_1__0");
			builder.put(grammarAccess.getBDSLBrsDefinitionAccess().getGroup_1_0(), "rule__BDSLBrsDefinition__Group_1_0__0");
			builder.put(grammarAccess.getBDSLBrsDefinitionAccess().getGroup_1_0_4(), "rule__BDSLBrsDefinition__Group_1_0_4__0");
			builder.put(grammarAccess.getBDSLBrsDefinitionAccess().getGroup_1_1(), "rule__BDSLBrsDefinition__Group_1_1__0");
			builder.put(grammarAccess.getBDSLBrsDefinitionAccess().getGroup_1_1_5(), "rule__BDSLBrsDefinition__Group_1_1_5__0");
			builder.put(grammarAccess.getBDSLBrsDefinitionAccess().getGroup_1_2(), "rule__BDSLBrsDefinition__Group_1_2__0");
			builder.put(grammarAccess.getBDSLBrsDefinitionAccess().getGroup_1_2_5(), "rule__BDSLBrsDefinition__Group_1_2_5__0");
			builder.put(grammarAccess.getBDSLSelectionExpressionAccess().getGroup_1(), "rule__BDSLSelectionExpression__Group_1__0");
			builder.put(grammarAccess.getBDSLTerminalExpressionAccess().getGroup_1(), "rule__BDSLTerminalExpression__Group_1__0");
			builder.put(grammarAccess.getBRSStartedCallbackAccess().getGroup(), "rule__BRSStartedCallback__Group__0");
			builder.put(grammarAccess.getBRSFinishedCallbackAccess().getGroup(), "rule__BRSFinishedCallback__Group__0");
			builder.put(grammarAccess.getPredicateMatchCallbackAccess().getGroup(), "rule__PredicateMatchCallback__Group__0");
			builder.put(grammarAccess.getPredicateMatchCallbackAccess().getGroup_7(), "rule__PredicateMatchCallback__Group_7__0");
			builder.put(grammarAccess.getRuleMatchCallbackAccess().getGroup(), "rule__RuleMatchCallback__Group__0");
			builder.put(grammarAccess.getRuleMatchCallbackAccess().getGroup_7(), "rule__RuleMatchCallback__Group_7__0");
			builder.put(grammarAccess.getPrintLnAccess().getGroup(), "rule__PrintLn__Group__0");
			builder.put(grammarAccess.getPrintLnAccess().getGroup_4(), "rule__PrintLn__Group_4__0");
			builder.put(grammarAccess.getPrintableExpressionAccess().getGroup_0(), "rule__PrintableExpression__Group_0__0");
			builder.put(grammarAccess.getExportMethodAccess().getGroup(), "rule__ExportMethod__Group__0");
			builder.put(grammarAccess.getExportMethodAccess().getGroup_4(), "rule__ExportMethod__Group_4__0");
			builder.put(grammarAccess.getExportMethodAccess().getGroup_5(), "rule__ExportMethod__Group_5__0");
			builder.put(grammarAccess.getExecuteBRSMethodAccess().getGroup(), "rule__ExecuteBRSMethod__Group__0");
			builder.put(grammarAccess.getLoadMethodAccess().getGroup(), "rule__LoadMethod__Group__0");
			builder.put(grammarAccess.getLoadMethodAccess().getGroup_3(), "rule__LoadMethod__Group_3__0");
			builder.put(grammarAccess.getLoadMethodAccess().getGroup_4(), "rule__LoadMethod__Group_4__0");
			builder.put(grammarAccess.getLoadMethodAccess().getGroup_5(), "rule__LoadMethod__Group_5__0");
			builder.put(grammarAccess.getCreateRandomBigraphMethodAccess().getGroup(), "rule__CreateRandomBigraphMethod__Group__0");
			builder.put(grammarAccess.getCreateRandomBigraphMethodAccess().getGroup_3(), "rule__CreateRandomBigraphMethod__Group_3__0");
			builder.put(grammarAccess.getCreateRandomBigraphMethodAccess().getGroup_4(), "rule__CreateRandomBigraphMethod__Group_4__0");
			builder.put(grammarAccess.getCreateRandomBigraphMethodAccess().getGroup_5(), "rule__CreateRandomBigraphMethod__Group_5__0");
			builder.put(grammarAccess.getCreateRandomBigraphMethodAccess().getGroup_6(), "rule__CreateRandomBigraphMethod__Group_6__0");
			builder.put(grammarAccess.getUDFOperationAccess().getGroup(), "rule__UDFOperation__Group__0");
			builder.put(grammarAccess.getUdfCallExpressionAccess().getGroup(), "rule__UdfCallExpression__Group__0");
			builder.put(grammarAccess.getUdfCallExpressionAccess().getGroup_2_1(), "rule__UdfCallExpression__Group_2_1__0");
			builder.put(grammarAccess.getUdfCallExpressionAccess().getGroup_2_1_2(), "rule__UdfCallExpression__Group_2_1_2__0");
			builder.put(grammarAccess.getBDSLBlockAccess().getGroup(), "rule__BDSLBlock__Group__0");
			builder.put(grammarAccess.getXAssignmentAccess().getGroup_0(), "rule__XAssignment__Group_0__0");
			builder.put(grammarAccess.getXAssignmentAccess().getGroup_1(), "rule__XAssignment__Group_1__0");
			builder.put(grammarAccess.getXAssignmentAccess().getGroup_1_1(), "rule__XAssignment__Group_1_1__0");
			builder.put(grammarAccess.getXAssignmentAccess().getGroup_1_1_0(), "rule__XAssignment__Group_1_1_0__0");
			builder.put(grammarAccess.getXAssignmentAccess().getGroup_1_1_0_0(), "rule__XAssignment__Group_1_1_0_0__0");
			builder.put(grammarAccess.getOpMultiAssignAccess().getGroup_5(), "rule__OpMultiAssign__Group_5__0");
			builder.put(grammarAccess.getOpMultiAssignAccess().getGroup_6(), "rule__OpMultiAssign__Group_6__0");
			builder.put(grammarAccess.getXOrExpressionAccess().getGroup(), "rule__XOrExpression__Group__0");
			builder.put(grammarAccess.getXOrExpressionAccess().getGroup_1(), "rule__XOrExpression__Group_1__0");
			builder.put(grammarAccess.getXOrExpressionAccess().getGroup_1_0(), "rule__XOrExpression__Group_1_0__0");
			builder.put(grammarAccess.getXOrExpressionAccess().getGroup_1_0_0(), "rule__XOrExpression__Group_1_0_0__0");
			builder.put(grammarAccess.getXAndExpressionAccess().getGroup(), "rule__XAndExpression__Group__0");
			builder.put(grammarAccess.getXAndExpressionAccess().getGroup_1(), "rule__XAndExpression__Group_1__0");
			builder.put(grammarAccess.getXAndExpressionAccess().getGroup_1_0(), "rule__XAndExpression__Group_1_0__0");
			builder.put(grammarAccess.getXAndExpressionAccess().getGroup_1_0_0(), "rule__XAndExpression__Group_1_0_0__0");
			builder.put(grammarAccess.getXEqualityExpressionAccess().getGroup(), "rule__XEqualityExpression__Group__0");
			builder.put(grammarAccess.getXEqualityExpressionAccess().getGroup_1(), "rule__XEqualityExpression__Group_1__0");
			builder.put(grammarAccess.getXEqualityExpressionAccess().getGroup_1_0(), "rule__XEqualityExpression__Group_1_0__0");
			builder.put(grammarAccess.getXEqualityExpressionAccess().getGroup_1_0_0(), "rule__XEqualityExpression__Group_1_0_0__0");
			builder.put(grammarAccess.getXRelationalExpressionAccess().getGroup(), "rule__XRelationalExpression__Group__0");
			builder.put(grammarAccess.getXRelationalExpressionAccess().getGroup_1_0(), "rule__XRelationalExpression__Group_1_0__0");
			builder.put(grammarAccess.getXRelationalExpressionAccess().getGroup_1_0_0(), "rule__XRelationalExpression__Group_1_0_0__0");
			builder.put(grammarAccess.getXRelationalExpressionAccess().getGroup_1_0_0_0(), "rule__XRelationalExpression__Group_1_0_0_0__0");
			builder.put(grammarAccess.getXRelationalExpressionAccess().getGroup_1_1(), "rule__XRelationalExpression__Group_1_1__0");
			builder.put(grammarAccess.getXRelationalExpressionAccess().getGroup_1_1_0(), "rule__XRelationalExpression__Group_1_1_0__0");
			builder.put(grammarAccess.getXRelationalExpressionAccess().getGroup_1_1_0_0(), "rule__XRelationalExpression__Group_1_1_0_0__0");
			builder.put(grammarAccess.getOpCompareAccess().getGroup_1(), "rule__OpCompare__Group_1__0");
			builder.put(grammarAccess.getXOtherOperatorExpressionAccess().getGroup(), "rule__XOtherOperatorExpression__Group__0");
			builder.put(grammarAccess.getXOtherOperatorExpressionAccess().getGroup_1(), "rule__XOtherOperatorExpression__Group_1__0");
			builder.put(grammarAccess.getXOtherOperatorExpressionAccess().getGroup_1_0(), "rule__XOtherOperatorExpression__Group_1_0__0");
			builder.put(grammarAccess.getXOtherOperatorExpressionAccess().getGroup_1_0_0(), "rule__XOtherOperatorExpression__Group_1_0_0__0");
			builder.put(grammarAccess.getOpOtherAccess().getGroup_2(), "rule__OpOther__Group_2__0");
			builder.put(grammarAccess.getOpOtherAccess().getGroup_5(), "rule__OpOther__Group_5__0");
			builder.put(grammarAccess.getOpOtherAccess().getGroup_5_1_0(), "rule__OpOther__Group_5_1_0__0");
			builder.put(grammarAccess.getOpOtherAccess().getGroup_5_1_0_0(), "rule__OpOther__Group_5_1_0_0__0");
			builder.put(grammarAccess.getOpOtherAccess().getGroup_6(), "rule__OpOther__Group_6__0");
			builder.put(grammarAccess.getOpOtherAccess().getGroup_6_1_0(), "rule__OpOther__Group_6_1_0__0");
			builder.put(grammarAccess.getOpOtherAccess().getGroup_6_1_0_0(), "rule__OpOther__Group_6_1_0_0__0");
			builder.put(grammarAccess.getXAdditiveExpressionAccess().getGroup(), "rule__XAdditiveExpression__Group__0");
			builder.put(grammarAccess.getXAdditiveExpressionAccess().getGroup_1(), "rule__XAdditiveExpression__Group_1__0");
			builder.put(grammarAccess.getXAdditiveExpressionAccess().getGroup_1_0(), "rule__XAdditiveExpression__Group_1_0__0");
			builder.put(grammarAccess.getXAdditiveExpressionAccess().getGroup_1_0_0(), "rule__XAdditiveExpression__Group_1_0_0__0");
			builder.put(grammarAccess.getXMultiplicativeExpressionAccess().getGroup(), "rule__XMultiplicativeExpression__Group__0");
			builder.put(grammarAccess.getXMultiplicativeExpressionAccess().getGroup_1(), "rule__XMultiplicativeExpression__Group_1__0");
			builder.put(grammarAccess.getXMultiplicativeExpressionAccess().getGroup_1_0(), "rule__XMultiplicativeExpression__Group_1_0__0");
			builder.put(grammarAccess.getXMultiplicativeExpressionAccess().getGroup_1_0_0(), "rule__XMultiplicativeExpression__Group_1_0_0__0");
			builder.put(grammarAccess.getXUnaryOperationAccess().getGroup_0(), "rule__XUnaryOperation__Group_0__0");
			builder.put(grammarAccess.getXCastedExpressionAccess().getGroup(), "rule__XCastedExpression__Group__0");
			builder.put(grammarAccess.getXCastedExpressionAccess().getGroup_1(), "rule__XCastedExpression__Group_1__0");
			builder.put(grammarAccess.getXCastedExpressionAccess().getGroup_1_0(), "rule__XCastedExpression__Group_1_0__0");
			builder.put(grammarAccess.getXCastedExpressionAccess().getGroup_1_0_0(), "rule__XCastedExpression__Group_1_0_0__0");
			builder.put(grammarAccess.getXPostfixOperationAccess().getGroup(), "rule__XPostfixOperation__Group__0");
			builder.put(grammarAccess.getXPostfixOperationAccess().getGroup_1(), "rule__XPostfixOperation__Group_1__0");
			builder.put(grammarAccess.getXPostfixOperationAccess().getGroup_1_0(), "rule__XPostfixOperation__Group_1_0__0");
			builder.put(grammarAccess.getXMemberFeatureCallAccess().getGroup(), "rule__XMemberFeatureCall__Group__0");
			builder.put(grammarAccess.getXMemberFeatureCallAccess().getGroup_1_0(), "rule__XMemberFeatureCall__Group_1_0__0");
			builder.put(grammarAccess.getXMemberFeatureCallAccess().getGroup_1_0_0(), "rule__XMemberFeatureCall__Group_1_0_0__0");
			builder.put(grammarAccess.getXMemberFeatureCallAccess().getGroup_1_0_0_0(), "rule__XMemberFeatureCall__Group_1_0_0_0__0");
			builder.put(grammarAccess.getXMemberFeatureCallAccess().getGroup_1_1(), "rule__XMemberFeatureCall__Group_1_1__0");
			builder.put(grammarAccess.getXMemberFeatureCallAccess().getGroup_1_1_0(), "rule__XMemberFeatureCall__Group_1_1_0__0");
			builder.put(grammarAccess.getXMemberFeatureCallAccess().getGroup_1_1_0_0(), "rule__XMemberFeatureCall__Group_1_1_0_0__0");
			builder.put(grammarAccess.getXMemberFeatureCallAccess().getGroup_1_1_1(), "rule__XMemberFeatureCall__Group_1_1_1__0");
			builder.put(grammarAccess.getXMemberFeatureCallAccess().getGroup_1_1_1_2(), "rule__XMemberFeatureCall__Group_1_1_1_2__0");
			builder.put(grammarAccess.getXMemberFeatureCallAccess().getGroup_1_1_3(), "rule__XMemberFeatureCall__Group_1_1_3__0");
			builder.put(grammarAccess.getXMemberFeatureCallAccess().getGroup_1_1_3_1_1(), "rule__XMemberFeatureCall__Group_1_1_3_1_1__0");
			builder.put(grammarAccess.getXMemberFeatureCallAccess().getGroup_1_1_3_1_1_1(), "rule__XMemberFeatureCall__Group_1_1_3_1_1_1__0");
			builder.put(grammarAccess.getXSetLiteralAccess().getGroup(), "rule__XSetLiteral__Group__0");
			builder.put(grammarAccess.getXSetLiteralAccess().getGroup_3(), "rule__XSetLiteral__Group_3__0");
			builder.put(grammarAccess.getXSetLiteralAccess().getGroup_3_1(), "rule__XSetLiteral__Group_3_1__0");
			builder.put(grammarAccess.getXListLiteralAccess().getGroup(), "rule__XListLiteral__Group__0");
			builder.put(grammarAccess.getXListLiteralAccess().getGroup_3(), "rule__XListLiteral__Group_3__0");
			builder.put(grammarAccess.getXListLiteralAccess().getGroup_3_1(), "rule__XListLiteral__Group_3_1__0");
			builder.put(grammarAccess.getXClosureAccess().getGroup(), "rule__XClosure__Group__0");
			builder.put(grammarAccess.getXClosureAccess().getGroup_0(), "rule__XClosure__Group_0__0");
			builder.put(grammarAccess.getXClosureAccess().getGroup_0_0(), "rule__XClosure__Group_0_0__0");
			builder.put(grammarAccess.getXClosureAccess().getGroup_1(), "rule__XClosure__Group_1__0");
			builder.put(grammarAccess.getXClosureAccess().getGroup_1_0(), "rule__XClosure__Group_1_0__0");
			builder.put(grammarAccess.getXClosureAccess().getGroup_1_0_0(), "rule__XClosure__Group_1_0_0__0");
			builder.put(grammarAccess.getXClosureAccess().getGroup_1_0_0_1(), "rule__XClosure__Group_1_0_0_1__0");
			builder.put(grammarAccess.getXExpressionInClosureAccess().getGroup(), "rule__XExpressionInClosure__Group__0");
			builder.put(grammarAccess.getXExpressionInClosureAccess().getGroup_1(), "rule__XExpressionInClosure__Group_1__0");
			builder.put(grammarAccess.getXShortClosureAccess().getGroup(), "rule__XShortClosure__Group__0");
			builder.put(grammarAccess.getXShortClosureAccess().getGroup_0(), "rule__XShortClosure__Group_0__0");
			builder.put(grammarAccess.getXShortClosureAccess().getGroup_0_0(), "rule__XShortClosure__Group_0_0__0");
			builder.put(grammarAccess.getXShortClosureAccess().getGroup_0_0_1(), "rule__XShortClosure__Group_0_0_1__0");
			builder.put(grammarAccess.getXShortClosureAccess().getGroup_0_0_1_1(), "rule__XShortClosure__Group_0_0_1_1__0");
			builder.put(grammarAccess.getXParenthesizedExpressionAccess().getGroup(), "rule__XParenthesizedExpression__Group__0");
			builder.put(grammarAccess.getXIfExpressionAccess().getGroup(), "rule__XIfExpression__Group__0");
			builder.put(grammarAccess.getXIfExpressionAccess().getGroup_6(), "rule__XIfExpression__Group_6__0");
			builder.put(grammarAccess.getXSwitchExpressionAccess().getGroup(), "rule__XSwitchExpression__Group__0");
			builder.put(grammarAccess.getXSwitchExpressionAccess().getGroup_2_0(), "rule__XSwitchExpression__Group_2_0__0");
			builder.put(grammarAccess.getXSwitchExpressionAccess().getGroup_2_0_0(), "rule__XSwitchExpression__Group_2_0_0__0");
			builder.put(grammarAccess.getXSwitchExpressionAccess().getGroup_2_0_0_0(), "rule__XSwitchExpression__Group_2_0_0_0__0");
			builder.put(grammarAccess.getXSwitchExpressionAccess().getGroup_2_1(), "rule__XSwitchExpression__Group_2_1__0");
			builder.put(grammarAccess.getXSwitchExpressionAccess().getGroup_2_1_0(), "rule__XSwitchExpression__Group_2_1_0__0");
			builder.put(grammarAccess.getXSwitchExpressionAccess().getGroup_2_1_0_0(), "rule__XSwitchExpression__Group_2_1_0_0__0");
			builder.put(grammarAccess.getXSwitchExpressionAccess().getGroup_5(), "rule__XSwitchExpression__Group_5__0");
			builder.put(grammarAccess.getXCasePartAccess().getGroup(), "rule__XCasePart__Group__0");
			builder.put(grammarAccess.getXCasePartAccess().getGroup_2(), "rule__XCasePart__Group_2__0");
			builder.put(grammarAccess.getXCasePartAccess().getGroup_3_0(), "rule__XCasePart__Group_3_0__0");
			builder.put(grammarAccess.getXForLoopExpressionAccess().getGroup(), "rule__XForLoopExpression__Group__0");
			builder.put(grammarAccess.getXForLoopExpressionAccess().getGroup_0(), "rule__XForLoopExpression__Group_0__0");
			builder.put(grammarAccess.getXForLoopExpressionAccess().getGroup_0_0(), "rule__XForLoopExpression__Group_0_0__0");
			builder.put(grammarAccess.getXBasicForLoopExpressionAccess().getGroup(), "rule__XBasicForLoopExpression__Group__0");
			builder.put(grammarAccess.getXBasicForLoopExpressionAccess().getGroup_3(), "rule__XBasicForLoopExpression__Group_3__0");
			builder.put(grammarAccess.getXBasicForLoopExpressionAccess().getGroup_3_1(), "rule__XBasicForLoopExpression__Group_3_1__0");
			builder.put(grammarAccess.getXBasicForLoopExpressionAccess().getGroup_7(), "rule__XBasicForLoopExpression__Group_7__0");
			builder.put(grammarAccess.getXBasicForLoopExpressionAccess().getGroup_7_1(), "rule__XBasicForLoopExpression__Group_7_1__0");
			builder.put(grammarAccess.getXWhileExpressionAccess().getGroup(), "rule__XWhileExpression__Group__0");
			builder.put(grammarAccess.getXDoWhileExpressionAccess().getGroup(), "rule__XDoWhileExpression__Group__0");
			builder.put(grammarAccess.getXBlockExpressionAccess().getGroup(), "rule__XBlockExpression__Group__0");
			builder.put(grammarAccess.getXBlockExpressionAccess().getGroup_2(), "rule__XBlockExpression__Group_2__0");
			builder.put(grammarAccess.getXVariableDeclarationAccess().getGroup(), "rule__XVariableDeclaration__Group__0");
			builder.put(grammarAccess.getXVariableDeclarationAccess().getGroup_2_0(), "rule__XVariableDeclaration__Group_2_0__0");
			builder.put(grammarAccess.getXVariableDeclarationAccess().getGroup_2_0_0(), "rule__XVariableDeclaration__Group_2_0_0__0");
			builder.put(grammarAccess.getXVariableDeclarationAccess().getGroup_3(), "rule__XVariableDeclaration__Group_3__0");
			builder.put(grammarAccess.getJvmFormalParameterAccess().getGroup(), "rule__JvmFormalParameter__Group__0");
			builder.put(grammarAccess.getFullJvmFormalParameterAccess().getGroup(), "rule__FullJvmFormalParameter__Group__0");
			builder.put(grammarAccess.getXFeatureCallAccess().getGroup(), "rule__XFeatureCall__Group__0");
			builder.put(grammarAccess.getXFeatureCallAccess().getGroup_1(), "rule__XFeatureCall__Group_1__0");
			builder.put(grammarAccess.getXFeatureCallAccess().getGroup_1_2(), "rule__XFeatureCall__Group_1_2__0");
			builder.put(grammarAccess.getXFeatureCallAccess().getGroup_3(), "rule__XFeatureCall__Group_3__0");
			builder.put(grammarAccess.getXFeatureCallAccess().getGroup_3_1_1(), "rule__XFeatureCall__Group_3_1_1__0");
			builder.put(grammarAccess.getXFeatureCallAccess().getGroup_3_1_1_1(), "rule__XFeatureCall__Group_3_1_1_1__0");
			builder.put(grammarAccess.getXConstructorCallAccess().getGroup(), "rule__XConstructorCall__Group__0");
			builder.put(grammarAccess.getXConstructorCallAccess().getGroup_3(), "rule__XConstructorCall__Group_3__0");
			builder.put(grammarAccess.getXConstructorCallAccess().getGroup_3_2(), "rule__XConstructorCall__Group_3_2__0");
			builder.put(grammarAccess.getXConstructorCallAccess().getGroup_4(), "rule__XConstructorCall__Group_4__0");
			builder.put(grammarAccess.getXConstructorCallAccess().getGroup_4_1_1(), "rule__XConstructorCall__Group_4_1_1__0");
			builder.put(grammarAccess.getXConstructorCallAccess().getGroup_4_1_1_1(), "rule__XConstructorCall__Group_4_1_1_1__0");
			builder.put(grammarAccess.getXBooleanLiteralAccess().getGroup(), "rule__XBooleanLiteral__Group__0");
			builder.put(grammarAccess.getXNullLiteralAccess().getGroup(), "rule__XNullLiteral__Group__0");
			builder.put(grammarAccess.getXNumberLiteralAccess().getGroup(), "rule__XNumberLiteral__Group__0");
			builder.put(grammarAccess.getXStringLiteralAccess().getGroup(), "rule__XStringLiteral__Group__0");
			builder.put(grammarAccess.getXTypeLiteralAccess().getGroup(), "rule__XTypeLiteral__Group__0");
			builder.put(grammarAccess.getXThrowExpressionAccess().getGroup(), "rule__XThrowExpression__Group__0");
			builder.put(grammarAccess.getXReturnExpressionAccess().getGroup(), "rule__XReturnExpression__Group__0");
			builder.put(grammarAccess.getXTryCatchFinallyExpressionAccess().getGroup(), "rule__XTryCatchFinallyExpression__Group__0");
			builder.put(grammarAccess.getXTryCatchFinallyExpressionAccess().getGroup_3_0(), "rule__XTryCatchFinallyExpression__Group_3_0__0");
			builder.put(grammarAccess.getXTryCatchFinallyExpressionAccess().getGroup_3_0_1(), "rule__XTryCatchFinallyExpression__Group_3_0_1__0");
			builder.put(grammarAccess.getXTryCatchFinallyExpressionAccess().getGroup_3_1(), "rule__XTryCatchFinallyExpression__Group_3_1__0");
			builder.put(grammarAccess.getXSynchronizedExpressionAccess().getGroup(), "rule__XSynchronizedExpression__Group__0");
			builder.put(grammarAccess.getXSynchronizedExpressionAccess().getGroup_0(), "rule__XSynchronizedExpression__Group_0__0");
			builder.put(grammarAccess.getXSynchronizedExpressionAccess().getGroup_0_0(), "rule__XSynchronizedExpression__Group_0_0__0");
			builder.put(grammarAccess.getXCatchClauseAccess().getGroup(), "rule__XCatchClause__Group__0");
			builder.put(grammarAccess.getQualifiedNameAccess().getGroup(), "rule__QualifiedName__Group__0");
			builder.put(grammarAccess.getQualifiedNameAccess().getGroup_1(), "rule__QualifiedName__Group_1__0");
			builder.put(grammarAccess.getNumberAccess().getGroup_1(), "rule__Number__Group_1__0");
			builder.put(grammarAccess.getNumberAccess().getGroup_1_1(), "rule__Number__Group_1_1__0");
			builder.put(grammarAccess.getStaticQualifierAccess().getGroup(), "rule__StaticQualifier__Group__0");
			builder.put(grammarAccess.getJvmTypeReferenceAccess().getGroup_0(), "rule__JvmTypeReference__Group_0__0");
			builder.put(grammarAccess.getJvmTypeReferenceAccess().getGroup_0_1(), "rule__JvmTypeReference__Group_0_1__0");
			builder.put(grammarAccess.getJvmTypeReferenceAccess().getGroup_0_1_0(), "rule__JvmTypeReference__Group_0_1_0__0");
			builder.put(grammarAccess.getArrayBracketsAccess().getGroup(), "rule__ArrayBrackets__Group__0");
			builder.put(grammarAccess.getXFunctionTypeRefAccess().getGroup(), "rule__XFunctionTypeRef__Group__0");
			builder.put(grammarAccess.getXFunctionTypeRefAccess().getGroup_0(), "rule__XFunctionTypeRef__Group_0__0");
			builder.put(grammarAccess.getXFunctionTypeRefAccess().getGroup_0_1(), "rule__XFunctionTypeRef__Group_0_1__0");
			builder.put(grammarAccess.getXFunctionTypeRefAccess().getGroup_0_1_1(), "rule__XFunctionTypeRef__Group_0_1_1__0");
			builder.put(grammarAccess.getJvmParameterizedTypeReferenceAccess().getGroup(), "rule__JvmParameterizedTypeReference__Group__0");
			builder.put(grammarAccess.getJvmParameterizedTypeReferenceAccess().getGroup_1(), "rule__JvmParameterizedTypeReference__Group_1__0");
			builder.put(grammarAccess.getJvmParameterizedTypeReferenceAccess().getGroup_1_2(), "rule__JvmParameterizedTypeReference__Group_1_2__0");
			builder.put(grammarAccess.getJvmParameterizedTypeReferenceAccess().getGroup_1_4(), "rule__JvmParameterizedTypeReference__Group_1_4__0");
			builder.put(grammarAccess.getJvmParameterizedTypeReferenceAccess().getGroup_1_4_0(), "rule__JvmParameterizedTypeReference__Group_1_4_0__0");
			builder.put(grammarAccess.getJvmParameterizedTypeReferenceAccess().getGroup_1_4_0_0(), "rule__JvmParameterizedTypeReference__Group_1_4_0_0__0");
			builder.put(grammarAccess.getJvmParameterizedTypeReferenceAccess().getGroup_1_4_2(), "rule__JvmParameterizedTypeReference__Group_1_4_2__0");
			builder.put(grammarAccess.getJvmParameterizedTypeReferenceAccess().getGroup_1_4_2_2(), "rule__JvmParameterizedTypeReference__Group_1_4_2_2__0");
			builder.put(grammarAccess.getJvmWildcardTypeReferenceAccess().getGroup(), "rule__JvmWildcardTypeReference__Group__0");
			builder.put(grammarAccess.getJvmWildcardTypeReferenceAccess().getGroup_2_0(), "rule__JvmWildcardTypeReference__Group_2_0__0");
			builder.put(grammarAccess.getJvmWildcardTypeReferenceAccess().getGroup_2_1(), "rule__JvmWildcardTypeReference__Group_2_1__0");
			builder.put(grammarAccess.getJvmUpperBoundAccess().getGroup(), "rule__JvmUpperBound__Group__0");
			builder.put(grammarAccess.getJvmUpperBoundAndedAccess().getGroup(), "rule__JvmUpperBoundAnded__Group__0");
			builder.put(grammarAccess.getJvmLowerBoundAccess().getGroup(), "rule__JvmLowerBound__Group__0");
			builder.put(grammarAccess.getJvmLowerBoundAndedAccess().getGroup(), "rule__JvmLowerBoundAnded__Group__0");
			builder.put(grammarAccess.getJvmTypeParameterAccess().getGroup(), "rule__JvmTypeParameter__Group__0");
			builder.put(grammarAccess.getJvmTypeParameterAccess().getGroup_1(), "rule__JvmTypeParameter__Group_1__0");
			builder.put(grammarAccess.getQualifiedNameWithWildcardAccess().getGroup(), "rule__QualifiedNameWithWildcard__Group__0");
			builder.put(grammarAccess.getXImportDeclarationAccess().getGroup(), "rule__XImportDeclaration__Group__0");
			builder.put(grammarAccess.getXImportDeclarationAccess().getGroup_1_0(), "rule__XImportDeclaration__Group_1_0__0");
			builder.put(grammarAccess.getQualifiedNameInStaticImportAccess().getGroup(), "rule__QualifiedNameInStaticImport__Group__0");
			builder.put(grammarAccess.getBDSLDocumentAccess().getNameAssignment_0_1(), "rule__BDSLDocument__NameAssignment_0_1");
			builder.put(grammarAccess.getBDSLDocumentAccess().getImportDeclarationsBdslAssignment_1_0(), "rule__BDSLDocument__ImportDeclarationsBdslAssignment_1_0");
			builder.put(grammarAccess.getBDSLDocumentAccess().getImportDeclarationsUdfAssignment_1_1(), "rule__BDSLDocument__ImportDeclarationsUdfAssignment_1_1");
			builder.put(grammarAccess.getBDSLDocumentAccess().getSignatureAssignment_2(), "rule__BDSLDocument__SignatureAssignment_2");
			builder.put(grammarAccess.getBDSLDocumentAccess().getStatementsAssignment_3_0(), "rule__BDSLDocument__StatementsAssignment_3_0");
			builder.put(grammarAccess.getBDSLDocumentAccess().getMainAssignment_3_1(), "rule__BDSLDocument__MainAssignment_3_1");
			builder.put(grammarAccess.getBDSLDocumentImportAccess().getImportedNamespaceAssignment_2(), "rule__BDSLDocumentImport__ImportedNamespaceAssignment_2");
			builder.put(grammarAccess.getBDSLUdfImportAccess().getImportedNamespaceAssignment_2(), "rule__BDSLUdfImport__ImportedNamespaceAssignment_2");
			builder.put(grammarAccess.getBDSLNameSigDeclFragAccess().getNameAssignment_0(), "rule__BDSLNameSigDeclFrag__NameAssignment_0");
			builder.put(grammarAccess.getBDSLNameSigDeclFragAccess().getSigAssignment_1_1(), "rule__BDSLNameSigDeclFrag__SigAssignment_1_1");
			builder.put(grammarAccess.getBDSLSiteVarsAndControlVarFragAccess().getSiteArgsAssignment_0_1(), "rule__BDSLSiteVarsAndControlVarFrag__SiteArgsAssignment_0_1");
			builder.put(grammarAccess.getBDSLSiteVarsAndControlVarFragAccess().getSiteArgsAssignment_0_2_1(), "rule__BDSLSiteVarsAndControlVarFrag__SiteArgsAssignment_0_2_1");
			builder.put(grammarAccess.getBDSLSiteVarsAndControlVarFragAccess().getControlTypeAssignment_2(), "rule__BDSLSiteVarsAndControlVarFrag__ControlTypeAssignment_2");
			builder.put(grammarAccess.getMainElementAccess().getBodyAssignment_2(), "rule__MainElement__BodyAssignment_2");
			builder.put(grammarAccess.getSignatureAccess().getNameAssignment_2(), "rule__Signature__NameAssignment_2");
			builder.put(grammarAccess.getSignatureAccess().getControlsAssignment_3_1(), "rule__Signature__ControlsAssignment_3_1");
			builder.put(grammarAccess.getControlDefAccess().getTypeAssignment_1(), "rule__ControlDef__TypeAssignment_1");
			builder.put(grammarAccess.getControlDefAccess().getNameAssignment_2_0_1(), "rule__ControlDef__NameAssignment_2_0_1");
			builder.put(grammarAccess.getControlDefAccess().getArityAssignment_2_0_3(), "rule__ControlDef__ArityAssignment_2_0_3");
			builder.put(grammarAccess.getControlDefAccess().getNameAssignment_2_1_0(), "rule__ControlDef__NameAssignment_2_1_0");
			builder.put(grammarAccess.getControlDefAccess().getArityAssignment_2_1_2(), "rule__ControlDef__ArityAssignment_2_1_2");
			builder.put(grammarAccess.getLVD2Access().getNameAssignment_2(), "rule__LVD2__NameAssignment_2");
			builder.put(grammarAccess.getNodeExpressionCallAccess().getValueAssignment_0(), "rule__NodeExpressionCall__ValueAssignment_0");
			builder.put(grammarAccess.getNodeExpressionCallAccess().getLinksAssignment_1_1(), "rule__NodeExpressionCall__LinksAssignment_1_1");
			builder.put(grammarAccess.getNodeExpressionCallAccess().getLinksAssignment_1_2_1(), "rule__NodeExpressionCall__LinksAssignment_1_2_1");
			builder.put(grammarAccess.getNameConstantAccess().getValueAssignment_1(), "rule__NameConstant__ValueAssignment_1");
			builder.put(grammarAccess.getSiteVarsAccess().getNameAssignment(), "rule__SiteVars__NameAssignment");
			builder.put(grammarAccess.getLocalPredicateDeclarationAccess().getTypeAssignment_3_1(), "rule__LocalPredicateDeclaration__TypeAssignment_3_1");
			builder.put(grammarAccess.getMergeAccess().getSitesAssignment_3(), "rule__Merge__SitesAssignment_3");
			builder.put(grammarAccess.getClosureAccess().getValueAssignment_3(), "rule__Closure__ValueAssignment_3");
			builder.put(grammarAccess.getClosureAccess().getValueAssignment_4_1(), "rule__Closure__ValueAssignment_4_1");
			builder.put(grammarAccess.getSubstitutionAccess().getFromAssignment_3(), "rule__Substitution__FromAssignment_3");
			builder.put(grammarAccess.getSubstitutionAccess().getToAssignment_5_1(), "rule__Substitution__ToAssignment_5_1");
			builder.put(grammarAccess.getSubstitutionAccess().getToAssignment_5_2_1(), "rule__Substitution__ToAssignment_5_2_1");
			builder.put(grammarAccess.getSiteAccess().getIndexAssignment_2(), "rule__Site__IndexAssignment_2");
			builder.put(grammarAccess.getBigraphVarReferenceAccess().getValueAssignment(), "rule__BigraphVarReference__ValueAssignment");
			builder.put(grammarAccess.getRuleVarReferenceAccess().getValueAssignment(), "rule__RuleVarReference__ValueAssignment");
			builder.put(grammarAccess.getPredicateVarReferenceAccess().getValueAssignment(), "rule__PredicateVarReference__ValueAssignment");
			builder.put(grammarAccess.getBRSVarReferenceAccess().getValueAssignment(), "rule__BRSVarReference__ValueAssignment");
			builder.put(grammarAccess.getBDSLDocumentReferenceAccess().getValueAssignment(), "rule__BDSLDocumentReference__ValueAssignment");
			builder.put(grammarAccess.getAdditionAccess().getOperatorAssignment_1_0_1(), "rule__Addition__OperatorAssignment_1_0_1");
			builder.put(grammarAccess.getAdditionAccess().getRightAssignment_1_1(), "rule__Addition__RightAssignment_1_1");
			builder.put(grammarAccess.getMultiplicationAccess().getOperatorAssignment_1_0_1(), "rule__Multiplication__OperatorAssignment_1_0_1");
			builder.put(grammarAccess.getMultiplicationAccess().getRightAssignment_1_1(), "rule__Multiplication__RightAssignment_1_1");
			builder.put(grammarAccess.getBDSLVariableDeclaration2Access().getVariableAssignment_1(), "rule__BDSLVariableDeclaration2__VariableAssignment_1");
			builder.put(grammarAccess.getBDSLVariableDeclaration2Access().getValueAssignment_2_1(), "rule__BDSLVariableDeclaration2__ValueAssignment_2_1");
			builder.put(grammarAccess.getBDSLReferenceDeclarationAccess().getTargetAssignment_1(), "rule__BDSLReferenceDeclaration__TargetAssignment_1");
			builder.put(grammarAccess.getBDSLReferenceDeclarationAccess().getValueAssignment_2_1(), "rule__BDSLReferenceDeclaration__ValueAssignment_2_1");
			builder.put(grammarAccess.getBDSLAssignmentAccess().getRightAssignment_1_2(), "rule__BDSLAssignment__RightAssignment_1_2");
			builder.put(grammarAccess.getBDSLReactDefinitionAccess().getRedexAssignment_0(), "rule__BDSLReactDefinition__RedexAssignment_0");
			builder.put(grammarAccess.getBDSLReactDefinitionAccess().getReactumAssignment_4(), "rule__BDSLReactDefinition__ReactumAssignment_4");
			builder.put(grammarAccess.getBDSLBrsDefinitionAccess().getBrsAssignment_0(), "rule__BDSLBrsDefinition__BrsAssignment_0");
			builder.put(grammarAccess.getBDSLBrsDefinitionAccess().getAgentsAssignment_1_0_3(), "rule__BDSLBrsDefinition__AgentsAssignment_1_0_3");
			builder.put(grammarAccess.getBDSLBrsDefinitionAccess().getAgentsAssignment_1_0_4_1(), "rule__BDSLBrsDefinition__AgentsAssignment_1_0_4_1");
			builder.put(grammarAccess.getBDSLBrsDefinitionAccess().getRulesAssignment_1_1_4(), "rule__BDSLBrsDefinition__RulesAssignment_1_1_4");
			builder.put(grammarAccess.getBDSLBrsDefinitionAccess().getRulesAssignment_1_1_5_1(), "rule__BDSLBrsDefinition__RulesAssignment_1_1_5_1");
			builder.put(grammarAccess.getBDSLBrsDefinitionAccess().getPredicatesAssignment_1_2_4(), "rule__BDSLBrsDefinition__PredicatesAssignment_1_2_4");
			builder.put(grammarAccess.getBDSLBrsDefinitionAccess().getPredicatesAssignment_1_2_5_1(), "rule__BDSLBrsDefinition__PredicatesAssignment_1_2_5_1");
			builder.put(grammarAccess.getBDSLBigraphDefinitionAccess().getDefinitionAssignment(), "rule__BDSLBigraphDefinition__DefinitionAssignment");
			builder.put(grammarAccess.getReferenceClassSymbolAccess().getTypeAssignment(), "rule__ReferenceClassSymbol__TypeAssignment");
			builder.put(grammarAccess.getBDSLCallbackCodeBlockFragmentAccess().getStatementsAssignment(), "rule__BDSLCallbackCodeBlockFragment__StatementsAssignment");
			builder.put(grammarAccess.getBRSStartedCallbackAccess().getBrsAssignment_3(), "rule__BRSStartedCallback__BrsAssignment_3");
			builder.put(grammarAccess.getBRSFinishedCallbackAccess().getBrsAssignment_3(), "rule__BRSFinishedCallback__BrsAssignment_3");
			builder.put(grammarAccess.getPredicateMatchCallbackAccess().getBrsAssignment_3(), "rule__PredicateMatchCallback__BrsAssignment_3");
			builder.put(grammarAccess.getPredicateMatchCallbackAccess().getParamsAssignment_6(), "rule__PredicateMatchCallback__ParamsAssignment_6");
			builder.put(grammarAccess.getPredicateMatchCallbackAccess().getParamsAssignment_7_1(), "rule__PredicateMatchCallback__ParamsAssignment_7_1");
			builder.put(grammarAccess.getRuleMatchCallbackAccess().getBrsAssignment_3(), "rule__RuleMatchCallback__BrsAssignment_3");
			builder.put(grammarAccess.getRuleMatchCallbackAccess().getParamsAssignment_6(), "rule__RuleMatchCallback__ParamsAssignment_6");
			builder.put(grammarAccess.getRuleMatchCallbackAccess().getParamsAssignment_7_1(), "rule__RuleMatchCallback__ParamsAssignment_7_1");
			builder.put(grammarAccess.getPrintLnAccess().getTextAssignment_3(), "rule__PrintLn__TextAssignment_3");
			builder.put(grammarAccess.getPrintLnAccess().getModeAssignment_4_1(), "rule__PrintLn__ModeAssignment_4_1");
			builder.put(grammarAccess.getPrintableExpressionAccess().getValueAssignment_0_1(), "rule__PrintableExpression__ValueAssignment_0_1");
			builder.put(grammarAccess.getExportMethodAccess().getVariableAssignment_3(), "rule__ExportMethod__VariableAssignment_3");
			builder.put(grammarAccess.getExportMethodAccess().getFormatAssignment_4_3(), "rule__ExportMethod__FormatAssignment_4_3");
			builder.put(grammarAccess.getExportMethodAccess().getResourcePathAssignment_5_3(), "rule__ExportMethod__ResourcePathAssignment_5_3");
			builder.put(grammarAccess.getExecuteBRSMethodAccess().getBrsAssignment_3(), "rule__ExecuteBRSMethod__BrsAssignment_3");
			builder.put(grammarAccess.getLoadMethodAccess().getSigAssignment_3_2(), "rule__LoadMethod__SigAssignment_3_2");
			builder.put(grammarAccess.getLoadMethodAccess().getFormatAssignment_4_3(), "rule__LoadMethod__FormatAssignment_4_3");
			builder.put(grammarAccess.getLoadMethodAccess().getResourcePathAssignment_5_3(), "rule__LoadMethod__ResourcePathAssignment_5_3");
			builder.put(grammarAccess.getCreateRandomBigraphMethodAccess().getSigAssignment_3_2(), "rule__CreateRandomBigraphMethod__SigAssignment_3_2");
			builder.put(grammarAccess.getCreateRandomBigraphMethodAccess().getNAssignment_4_3(), "rule__CreateRandomBigraphMethod__NAssignment_4_3");
			builder.put(grammarAccess.getCreateRandomBigraphMethodAccess().getTAssignment_5_3(), "rule__CreateRandomBigraphMethod__TAssignment_5_3");
			builder.put(grammarAccess.getCreateRandomBigraphMethodAccess().getPAssignment_6_3(), "rule__CreateRandomBigraphMethod__PAssignment_6_3");
			builder.put(grammarAccess.getUDFOperationAccess().getExpressionAssignment_3(), "rule__UDFOperation__ExpressionAssignment_3");
			builder.put(grammarAccess.getUdfCallExpressionAccess().getTypeAssignment_1(), "rule__UdfCallExpression__TypeAssignment_1");
			builder.put(grammarAccess.getUdfCallExpressionAccess().getParamsAssignment_2_1_1(), "rule__UdfCallExpression__ParamsAssignment_2_1_1");
			builder.put(grammarAccess.getUdfCallExpressionAccess().getParamsAssignment_2_1_2_1(), "rule__UdfCallExpression__ParamsAssignment_2_1_2_1");
			builder.put(grammarAccess.getBDSLBlockAccess().getStatementsAssignment_2(), "rule__BDSLBlock__StatementsAssignment_2");
			builder.put(grammarAccess.getXAssignmentAccess().getFeatureAssignment_0_1(), "rule__XAssignment__FeatureAssignment_0_1");
			builder.put(grammarAccess.getXAssignmentAccess().getValueAssignment_0_3(), "rule__XAssignment__ValueAssignment_0_3");
			builder.put(grammarAccess.getXAssignmentAccess().getFeatureAssignment_1_1_0_0_1(), "rule__XAssignment__FeatureAssignment_1_1_0_0_1");
			builder.put(grammarAccess.getXAssignmentAccess().getRightOperandAssignment_1_1_1(), "rule__XAssignment__RightOperandAssignment_1_1_1");
			builder.put(grammarAccess.getXOrExpressionAccess().getFeatureAssignment_1_0_0_1(), "rule__XOrExpression__FeatureAssignment_1_0_0_1");
			builder.put(grammarAccess.getXOrExpressionAccess().getRightOperandAssignment_1_1(), "rule__XOrExpression__RightOperandAssignment_1_1");
			builder.put(grammarAccess.getXAndExpressionAccess().getFeatureAssignment_1_0_0_1(), "rule__XAndExpression__FeatureAssignment_1_0_0_1");
			builder.put(grammarAccess.getXAndExpressionAccess().getRightOperandAssignment_1_1(), "rule__XAndExpression__RightOperandAssignment_1_1");
			builder.put(grammarAccess.getXEqualityExpressionAccess().getFeatureAssignment_1_0_0_1(), "rule__XEqualityExpression__FeatureAssignment_1_0_0_1");
			builder.put(grammarAccess.getXEqualityExpressionAccess().getRightOperandAssignment_1_1(), "rule__XEqualityExpression__RightOperandAssignment_1_1");
			builder.put(grammarAccess.getXRelationalExpressionAccess().getTypeAssignment_1_0_1(), "rule__XRelationalExpression__TypeAssignment_1_0_1");
			builder.put(grammarAccess.getXRelationalExpressionAccess().getFeatureAssignment_1_1_0_0_1(), "rule__XRelationalExpression__FeatureAssignment_1_1_0_0_1");
			builder.put(grammarAccess.getXRelationalExpressionAccess().getRightOperandAssignment_1_1_1(), "rule__XRelationalExpression__RightOperandAssignment_1_1_1");
			builder.put(grammarAccess.getXOtherOperatorExpressionAccess().getFeatureAssignment_1_0_0_1(), "rule__XOtherOperatorExpression__FeatureAssignment_1_0_0_1");
			builder.put(grammarAccess.getXOtherOperatorExpressionAccess().getRightOperandAssignment_1_1(), "rule__XOtherOperatorExpression__RightOperandAssignment_1_1");
			builder.put(grammarAccess.getXAdditiveExpressionAccess().getFeatureAssignment_1_0_0_1(), "rule__XAdditiveExpression__FeatureAssignment_1_0_0_1");
			builder.put(grammarAccess.getXAdditiveExpressionAccess().getRightOperandAssignment_1_1(), "rule__XAdditiveExpression__RightOperandAssignment_1_1");
			builder.put(grammarAccess.getXMultiplicativeExpressionAccess().getFeatureAssignment_1_0_0_1(), "rule__XMultiplicativeExpression__FeatureAssignment_1_0_0_1");
			builder.put(grammarAccess.getXMultiplicativeExpressionAccess().getRightOperandAssignment_1_1(), "rule__XMultiplicativeExpression__RightOperandAssignment_1_1");
			builder.put(grammarAccess.getXUnaryOperationAccess().getFeatureAssignment_0_1(), "rule__XUnaryOperation__FeatureAssignment_0_1");
			builder.put(grammarAccess.getXUnaryOperationAccess().getOperandAssignment_0_2(), "rule__XUnaryOperation__OperandAssignment_0_2");
			builder.put(grammarAccess.getXCastedExpressionAccess().getTypeAssignment_1_1(), "rule__XCastedExpression__TypeAssignment_1_1");
			builder.put(grammarAccess.getXPostfixOperationAccess().getFeatureAssignment_1_0_1(), "rule__XPostfixOperation__FeatureAssignment_1_0_1");
			builder.put(grammarAccess.getXMemberFeatureCallAccess().getExplicitStaticAssignment_1_0_0_0_1_1(), "rule__XMemberFeatureCall__ExplicitStaticAssignment_1_0_0_0_1_1");
			builder.put(grammarAccess.getXMemberFeatureCallAccess().getFeatureAssignment_1_0_0_0_2(), "rule__XMemberFeatureCall__FeatureAssignment_1_0_0_0_2");
			builder.put(grammarAccess.getXMemberFeatureCallAccess().getValueAssignment_1_0_1(), "rule__XMemberFeatureCall__ValueAssignment_1_0_1");
			builder.put(grammarAccess.getXMemberFeatureCallAccess().getNullSafeAssignment_1_1_0_0_1_1(), "rule__XMemberFeatureCall__NullSafeAssignment_1_1_0_0_1_1");
			builder.put(grammarAccess.getXMemberFeatureCallAccess().getExplicitStaticAssignment_1_1_0_0_1_2(), "rule__XMemberFeatureCall__ExplicitStaticAssignment_1_1_0_0_1_2");
			builder.put(grammarAccess.getXMemberFeatureCallAccess().getTypeArgumentsAssignment_1_1_1_1(), "rule__XMemberFeatureCall__TypeArgumentsAssignment_1_1_1_1");
			builder.put(grammarAccess.getXMemberFeatureCallAccess().getTypeArgumentsAssignment_1_1_1_2_1(), "rule__XMemberFeatureCall__TypeArgumentsAssignment_1_1_1_2_1");
			builder.put(grammarAccess.getXMemberFeatureCallAccess().getFeatureAssignment_1_1_2(), "rule__XMemberFeatureCall__FeatureAssignment_1_1_2");
			builder.put(grammarAccess.getXMemberFeatureCallAccess().getExplicitOperationCallAssignment_1_1_3_0(), "rule__XMemberFeatureCall__ExplicitOperationCallAssignment_1_1_3_0");
			builder.put(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsAssignment_1_1_3_1_0(), "rule__XMemberFeatureCall__MemberCallArgumentsAssignment_1_1_3_1_0");
			builder.put(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsAssignment_1_1_3_1_1_0(), "rule__XMemberFeatureCall__MemberCallArgumentsAssignment_1_1_3_1_1_0");
			builder.put(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsAssignment_1_1_3_1_1_1_1(), "rule__XMemberFeatureCall__MemberCallArgumentsAssignment_1_1_3_1_1_1_1");
			builder.put(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsAssignment_1_1_4(), "rule__XMemberFeatureCall__MemberCallArgumentsAssignment_1_1_4");
			builder.put(grammarAccess.getXSetLiteralAccess().getElementsAssignment_3_0(), "rule__XSetLiteral__ElementsAssignment_3_0");
			builder.put(grammarAccess.getXSetLiteralAccess().getElementsAssignment_3_1_1(), "rule__XSetLiteral__ElementsAssignment_3_1_1");
			builder.put(grammarAccess.getXListLiteralAccess().getElementsAssignment_3_0(), "rule__XListLiteral__ElementsAssignment_3_0");
			builder.put(grammarAccess.getXListLiteralAccess().getElementsAssignment_3_1_1(), "rule__XListLiteral__ElementsAssignment_3_1_1");
			builder.put(grammarAccess.getXClosureAccess().getDeclaredFormalParametersAssignment_1_0_0_0(), "rule__XClosure__DeclaredFormalParametersAssignment_1_0_0_0");
			builder.put(grammarAccess.getXClosureAccess().getDeclaredFormalParametersAssignment_1_0_0_1_1(), "rule__XClosure__DeclaredFormalParametersAssignment_1_0_0_1_1");
			builder.put(grammarAccess.getXClosureAccess().getExplicitSyntaxAssignment_1_0_1(), "rule__XClosure__ExplicitSyntaxAssignment_1_0_1");
			builder.put(grammarAccess.getXClosureAccess().getExpressionAssignment_2(), "rule__XClosure__ExpressionAssignment_2");
			builder.put(grammarAccess.getXExpressionInClosureAccess().getExpressionsAssignment_1_0(), "rule__XExpressionInClosure__ExpressionsAssignment_1_0");
			builder.put(grammarAccess.getXShortClosureAccess().getDeclaredFormalParametersAssignment_0_0_1_0(), "rule__XShortClosure__DeclaredFormalParametersAssignment_0_0_1_0");
			builder.put(grammarAccess.getXShortClosureAccess().getDeclaredFormalParametersAssignment_0_0_1_1_1(), "rule__XShortClosure__DeclaredFormalParametersAssignment_0_0_1_1_1");
			builder.put(grammarAccess.getXShortClosureAccess().getExplicitSyntaxAssignment_0_0_2(), "rule__XShortClosure__ExplicitSyntaxAssignment_0_0_2");
			builder.put(grammarAccess.getXShortClosureAccess().getExpressionAssignment_1(), "rule__XShortClosure__ExpressionAssignment_1");
			builder.put(grammarAccess.getXIfExpressionAccess().getIfAssignment_3(), "rule__XIfExpression__IfAssignment_3");
			builder.put(grammarAccess.getXIfExpressionAccess().getThenAssignment_5(), "rule__XIfExpression__ThenAssignment_5");
			builder.put(grammarAccess.getXIfExpressionAccess().getElseAssignment_6_1(), "rule__XIfExpression__ElseAssignment_6_1");
			builder.put(grammarAccess.getXSwitchExpressionAccess().getDeclaredParamAssignment_2_0_0_0_1(), "rule__XSwitchExpression__DeclaredParamAssignment_2_0_0_0_1");
			builder.put(grammarAccess.getXSwitchExpressionAccess().getSwitchAssignment_2_0_1(), "rule__XSwitchExpression__SwitchAssignment_2_0_1");
			builder.put(grammarAccess.getXSwitchExpressionAccess().getDeclaredParamAssignment_2_1_0_0_0(), "rule__XSwitchExpression__DeclaredParamAssignment_2_1_0_0_0");
			builder.put(grammarAccess.getXSwitchExpressionAccess().getSwitchAssignment_2_1_1(), "rule__XSwitchExpression__SwitchAssignment_2_1_1");
			builder.put(grammarAccess.getXSwitchExpressionAccess().getCasesAssignment_4(), "rule__XSwitchExpression__CasesAssignment_4");
			builder.put(grammarAccess.getXSwitchExpressionAccess().getDefaultAssignment_5_2(), "rule__XSwitchExpression__DefaultAssignment_5_2");
			builder.put(grammarAccess.getXCasePartAccess().getTypeGuardAssignment_1(), "rule__XCasePart__TypeGuardAssignment_1");
			builder.put(grammarAccess.getXCasePartAccess().getCaseAssignment_2_1(), "rule__XCasePart__CaseAssignment_2_1");
			builder.put(grammarAccess.getXCasePartAccess().getThenAssignment_3_0_1(), "rule__XCasePart__ThenAssignment_3_0_1");
			builder.put(grammarAccess.getXCasePartAccess().getFallThroughAssignment_3_1(), "rule__XCasePart__FallThroughAssignment_3_1");
			builder.put(grammarAccess.getXForLoopExpressionAccess().getDeclaredParamAssignment_0_0_3(), "rule__XForLoopExpression__DeclaredParamAssignment_0_0_3");
			builder.put(grammarAccess.getXForLoopExpressionAccess().getForExpressionAssignment_1(), "rule__XForLoopExpression__ForExpressionAssignment_1");
			builder.put(grammarAccess.getXForLoopExpressionAccess().getEachExpressionAssignment_3(), "rule__XForLoopExpression__EachExpressionAssignment_3");
			builder.put(grammarAccess.getXBasicForLoopExpressionAccess().getInitExpressionsAssignment_3_0(), "rule__XBasicForLoopExpression__InitExpressionsAssignment_3_0");
			builder.put(grammarAccess.getXBasicForLoopExpressionAccess().getInitExpressionsAssignment_3_1_1(), "rule__XBasicForLoopExpression__InitExpressionsAssignment_3_1_1");
			builder.put(grammarAccess.getXBasicForLoopExpressionAccess().getExpressionAssignment_5(), "rule__XBasicForLoopExpression__ExpressionAssignment_5");
			builder.put(grammarAccess.getXBasicForLoopExpressionAccess().getUpdateExpressionsAssignment_7_0(), "rule__XBasicForLoopExpression__UpdateExpressionsAssignment_7_0");
			builder.put(grammarAccess.getXBasicForLoopExpressionAccess().getUpdateExpressionsAssignment_7_1_1(), "rule__XBasicForLoopExpression__UpdateExpressionsAssignment_7_1_1");
			builder.put(grammarAccess.getXBasicForLoopExpressionAccess().getEachExpressionAssignment_9(), "rule__XBasicForLoopExpression__EachExpressionAssignment_9");
			builder.put(grammarAccess.getXWhileExpressionAccess().getPredicateAssignment_3(), "rule__XWhileExpression__PredicateAssignment_3");
			builder.put(grammarAccess.getXWhileExpressionAccess().getBodyAssignment_5(), "rule__XWhileExpression__BodyAssignment_5");
			builder.put(grammarAccess.getXDoWhileExpressionAccess().getBodyAssignment_2(), "rule__XDoWhileExpression__BodyAssignment_2");
			builder.put(grammarAccess.getXDoWhileExpressionAccess().getPredicateAssignment_5(), "rule__XDoWhileExpression__PredicateAssignment_5");
			builder.put(grammarAccess.getXBlockExpressionAccess().getExpressionsAssignment_2_0(), "rule__XBlockExpression__ExpressionsAssignment_2_0");
			builder.put(grammarAccess.getXVariableDeclarationAccess().getWriteableAssignment_1_0(), "rule__XVariableDeclaration__WriteableAssignment_1_0");
			builder.put(grammarAccess.getXVariableDeclarationAccess().getTypeAssignment_2_0_0_0(), "rule__XVariableDeclaration__TypeAssignment_2_0_0_0");
			builder.put(grammarAccess.getXVariableDeclarationAccess().getNameAssignment_2_0_0_1(), "rule__XVariableDeclaration__NameAssignment_2_0_0_1");
			builder.put(grammarAccess.getXVariableDeclarationAccess().getNameAssignment_2_1(), "rule__XVariableDeclaration__NameAssignment_2_1");
			builder.put(grammarAccess.getXVariableDeclarationAccess().getRightAssignment_3_1(), "rule__XVariableDeclaration__RightAssignment_3_1");
			builder.put(grammarAccess.getJvmFormalParameterAccess().getParameterTypeAssignment_0(), "rule__JvmFormalParameter__ParameterTypeAssignment_0");
			builder.put(grammarAccess.getJvmFormalParameterAccess().getNameAssignment_1(), "rule__JvmFormalParameter__NameAssignment_1");
			builder.put(grammarAccess.getFullJvmFormalParameterAccess().getParameterTypeAssignment_0(), "rule__FullJvmFormalParameter__ParameterTypeAssignment_0");
			builder.put(grammarAccess.getFullJvmFormalParameterAccess().getNameAssignment_1(), "rule__FullJvmFormalParameter__NameAssignment_1");
			builder.put(grammarAccess.getXFeatureCallAccess().getTypeArgumentsAssignment_1_1(), "rule__XFeatureCall__TypeArgumentsAssignment_1_1");
			builder.put(grammarAccess.getXFeatureCallAccess().getTypeArgumentsAssignment_1_2_1(), "rule__XFeatureCall__TypeArgumentsAssignment_1_2_1");
			builder.put(grammarAccess.getXFeatureCallAccess().getFeatureAssignment_2(), "rule__XFeatureCall__FeatureAssignment_2");
			builder.put(grammarAccess.getXFeatureCallAccess().getExplicitOperationCallAssignment_3_0(), "rule__XFeatureCall__ExplicitOperationCallAssignment_3_0");
			builder.put(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsAssignment_3_1_0(), "rule__XFeatureCall__FeatureCallArgumentsAssignment_3_1_0");
			builder.put(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsAssignment_3_1_1_0(), "rule__XFeatureCall__FeatureCallArgumentsAssignment_3_1_1_0");
			builder.put(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsAssignment_3_1_1_1_1(), "rule__XFeatureCall__FeatureCallArgumentsAssignment_3_1_1_1_1");
			builder.put(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsAssignment_4(), "rule__XFeatureCall__FeatureCallArgumentsAssignment_4");
			builder.put(grammarAccess.getXConstructorCallAccess().getConstructorAssignment_2(), "rule__XConstructorCall__ConstructorAssignment_2");
			builder.put(grammarAccess.getXConstructorCallAccess().getTypeArgumentsAssignment_3_1(), "rule__XConstructorCall__TypeArgumentsAssignment_3_1");
			builder.put(grammarAccess.getXConstructorCallAccess().getTypeArgumentsAssignment_3_2_1(), "rule__XConstructorCall__TypeArgumentsAssignment_3_2_1");
			builder.put(grammarAccess.getXConstructorCallAccess().getExplicitConstructorCallAssignment_4_0(), "rule__XConstructorCall__ExplicitConstructorCallAssignment_4_0");
			builder.put(grammarAccess.getXConstructorCallAccess().getArgumentsAssignment_4_1_0(), "rule__XConstructorCall__ArgumentsAssignment_4_1_0");
			builder.put(grammarAccess.getXConstructorCallAccess().getArgumentsAssignment_4_1_1_0(), "rule__XConstructorCall__ArgumentsAssignment_4_1_1_0");
			builder.put(grammarAccess.getXConstructorCallAccess().getArgumentsAssignment_4_1_1_1_1(), "rule__XConstructorCall__ArgumentsAssignment_4_1_1_1_1");
			builder.put(grammarAccess.getXConstructorCallAccess().getArgumentsAssignment_5(), "rule__XConstructorCall__ArgumentsAssignment_5");
			builder.put(grammarAccess.getXBooleanLiteralAccess().getIsTrueAssignment_1_1(), "rule__XBooleanLiteral__IsTrueAssignment_1_1");
			builder.put(grammarAccess.getXNumberLiteralAccess().getValueAssignment_1(), "rule__XNumberLiteral__ValueAssignment_1");
			builder.put(grammarAccess.getXStringLiteralAccess().getValueAssignment_1(), "rule__XStringLiteral__ValueAssignment_1");
			builder.put(grammarAccess.getXTypeLiteralAccess().getTypeAssignment_3(), "rule__XTypeLiteral__TypeAssignment_3");
			builder.put(grammarAccess.getXTypeLiteralAccess().getArrayDimensionsAssignment_4(), "rule__XTypeLiteral__ArrayDimensionsAssignment_4");
			builder.put(grammarAccess.getXThrowExpressionAccess().getExpressionAssignment_2(), "rule__XThrowExpression__ExpressionAssignment_2");
			builder.put(grammarAccess.getXReturnExpressionAccess().getExpressionAssignment_2(), "rule__XReturnExpression__ExpressionAssignment_2");
			builder.put(grammarAccess.getXTryCatchFinallyExpressionAccess().getExpressionAssignment_2(), "rule__XTryCatchFinallyExpression__ExpressionAssignment_2");
			builder.put(grammarAccess.getXTryCatchFinallyExpressionAccess().getCatchClausesAssignment_3_0_0(), "rule__XTryCatchFinallyExpression__CatchClausesAssignment_3_0_0");
			builder.put(grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyExpressionAssignment_3_0_1_1(), "rule__XTryCatchFinallyExpression__FinallyExpressionAssignment_3_0_1_1");
			builder.put(grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyExpressionAssignment_3_1_1(), "rule__XTryCatchFinallyExpression__FinallyExpressionAssignment_3_1_1");
			builder.put(grammarAccess.getXSynchronizedExpressionAccess().getParamAssignment_1(), "rule__XSynchronizedExpression__ParamAssignment_1");
			builder.put(grammarAccess.getXSynchronizedExpressionAccess().getExpressionAssignment_3(), "rule__XSynchronizedExpression__ExpressionAssignment_3");
			builder.put(grammarAccess.getXCatchClauseAccess().getDeclaredParamAssignment_2(), "rule__XCatchClause__DeclaredParamAssignment_2");
			builder.put(grammarAccess.getXCatchClauseAccess().getExpressionAssignment_4(), "rule__XCatchClause__ExpressionAssignment_4");
			builder.put(grammarAccess.getXFunctionTypeRefAccess().getParamTypesAssignment_0_1_0(), "rule__XFunctionTypeRef__ParamTypesAssignment_0_1_0");
			builder.put(grammarAccess.getXFunctionTypeRefAccess().getParamTypesAssignment_0_1_1_1(), "rule__XFunctionTypeRef__ParamTypesAssignment_0_1_1_1");
			builder.put(grammarAccess.getXFunctionTypeRefAccess().getReturnTypeAssignment_2(), "rule__XFunctionTypeRef__ReturnTypeAssignment_2");
			builder.put(grammarAccess.getJvmParameterizedTypeReferenceAccess().getTypeAssignment_0(), "rule__JvmParameterizedTypeReference__TypeAssignment_0");
			builder.put(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsAssignment_1_1(), "rule__JvmParameterizedTypeReference__ArgumentsAssignment_1_1");
			builder.put(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsAssignment_1_2_1(), "rule__JvmParameterizedTypeReference__ArgumentsAssignment_1_2_1");
			builder.put(grammarAccess.getJvmParameterizedTypeReferenceAccess().getTypeAssignment_1_4_1(), "rule__JvmParameterizedTypeReference__TypeAssignment_1_4_1");
			builder.put(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsAssignment_1_4_2_1(), "rule__JvmParameterizedTypeReference__ArgumentsAssignment_1_4_2_1");
			builder.put(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsAssignment_1_4_2_2_1(), "rule__JvmParameterizedTypeReference__ArgumentsAssignment_1_4_2_2_1");
			builder.put(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsAssignment_2_0_0(), "rule__JvmWildcardTypeReference__ConstraintsAssignment_2_0_0");
			builder.put(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsAssignment_2_0_1(), "rule__JvmWildcardTypeReference__ConstraintsAssignment_2_0_1");
			builder.put(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsAssignment_2_1_0(), "rule__JvmWildcardTypeReference__ConstraintsAssignment_2_1_0");
			builder.put(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsAssignment_2_1_1(), "rule__JvmWildcardTypeReference__ConstraintsAssignment_2_1_1");
			builder.put(grammarAccess.getJvmUpperBoundAccess().getTypeReferenceAssignment_1(), "rule__JvmUpperBound__TypeReferenceAssignment_1");
			builder.put(grammarAccess.getJvmUpperBoundAndedAccess().getTypeReferenceAssignment_1(), "rule__JvmUpperBoundAnded__TypeReferenceAssignment_1");
			builder.put(grammarAccess.getJvmLowerBoundAccess().getTypeReferenceAssignment_1(), "rule__JvmLowerBound__TypeReferenceAssignment_1");
			builder.put(grammarAccess.getJvmLowerBoundAndedAccess().getTypeReferenceAssignment_1(), "rule__JvmLowerBoundAnded__TypeReferenceAssignment_1");
			builder.put(grammarAccess.getJvmTypeParameterAccess().getNameAssignment_0(), "rule__JvmTypeParameter__NameAssignment_0");
			builder.put(grammarAccess.getJvmTypeParameterAccess().getConstraintsAssignment_1_0(), "rule__JvmTypeParameter__ConstraintsAssignment_1_0");
			builder.put(grammarAccess.getJvmTypeParameterAccess().getConstraintsAssignment_1_1(), "rule__JvmTypeParameter__ConstraintsAssignment_1_1");
			builder.put(grammarAccess.getXImportSectionAccess().getImportDeclarationsAssignment(), "rule__XImportSection__ImportDeclarationsAssignment");
			builder.put(grammarAccess.getXImportDeclarationAccess().getStaticAssignment_1_0_0(), "rule__XImportDeclaration__StaticAssignment_1_0_0");
			builder.put(grammarAccess.getXImportDeclarationAccess().getExtensionAssignment_1_0_1(), "rule__XImportDeclaration__ExtensionAssignment_1_0_1");
			builder.put(grammarAccess.getXImportDeclarationAccess().getImportedTypeAssignment_1_0_2(), "rule__XImportDeclaration__ImportedTypeAssignment_1_0_2");
			builder.put(grammarAccess.getXImportDeclarationAccess().getWildcardAssignment_1_0_3_0(), "rule__XImportDeclaration__WildcardAssignment_1_0_3_0");
			builder.put(grammarAccess.getXImportDeclarationAccess().getMemberNameAssignment_1_0_3_1(), "rule__XImportDeclaration__MemberNameAssignment_1_0_3_1");
			builder.put(grammarAccess.getXImportDeclarationAccess().getImportedTypeAssignment_1_1(), "rule__XImportDeclaration__ImportedTypeAssignment_1_1");
			builder.put(grammarAccess.getXImportDeclarationAccess().getImportedNamespaceAssignment_1_2(), "rule__XImportDeclaration__ImportedNamespaceAssignment_1_2");
			builder.put(grammarAccess.getBDSLDocumentAccess().getUnorderedGroup_3(), "rule__BDSLDocument__UnorderedGroup_3");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private BDSLGrammarAccess grammarAccess;

	@Override
	protected InternalBDSLParser createParser() {
		InternalBDSLParser result = new InternalBDSLParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public BDSLGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(BDSLGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
