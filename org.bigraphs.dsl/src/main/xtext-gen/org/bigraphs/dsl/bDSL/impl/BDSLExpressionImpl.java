/**
 * generated by Xtext 2.32.0
 */
package org.bigraphs.dsl.bDSL.impl;

import java.util.Collection;

import org.bigraphs.dsl.bDSL.AssignableBigraphExpressionWithExplicitSig;
import org.bigraphs.dsl.bDSL.BDSLBigraphDefinition;
import org.bigraphs.dsl.bDSL.BDSLBrsDefinition;
import org.bigraphs.dsl.bDSL.BDSLExpression;
import org.bigraphs.dsl.bDSL.BDSLPackage;
import org.bigraphs.dsl.bDSL.BigraphExpression;
import org.bigraphs.dsl.bDSL.BigraphVarReference;
import org.bigraphs.dsl.bDSL.PredicateVarReference;
import org.bigraphs.dsl.bDSL.RuleVarReference;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Expression</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.bigraphs.dsl.bDSL.impl.BDSLExpressionImpl#getDefinition <em>Definition</em>}</li>
 *   <li>{@link org.bigraphs.dsl.bDSL.impl.BDSLExpressionImpl#getBrs <em>Brs</em>}</li>
 *   <li>{@link org.bigraphs.dsl.bDSL.impl.BDSLExpressionImpl#getAgents <em>Agents</em>}</li>
 *   <li>{@link org.bigraphs.dsl.bDSL.impl.BDSLExpressionImpl#getRules <em>Rules</em>}</li>
 *   <li>{@link org.bigraphs.dsl.bDSL.impl.BDSLExpressionImpl#getPredicates <em>Predicates</em>}</li>
 * </ul>
 *
 * @generated
 */
public class BDSLExpressionImpl extends BDSLReactDefinitionImpl implements BDSLExpression
{
  /**
   * The cached value of the '{@link #getDefinition() <em>Definition</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDefinition()
   * @generated
   * @ordered
   */
  protected EList<BigraphExpression> definition;

  /**
   * The cached value of the '{@link #getBrs() <em>Brs</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBrs()
   * @generated
   * @ordered
   */
  protected AssignableBigraphExpressionWithExplicitSig brs;

  /**
   * The cached value of the '{@link #getAgents() <em>Agents</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAgents()
   * @generated
   * @ordered
   */
  protected EList<BigraphVarReference> agents;

  /**
   * The cached value of the '{@link #getRules() <em>Rules</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRules()
   * @generated
   * @ordered
   */
  protected EList<RuleVarReference> rules;

  /**
   * The cached value of the '{@link #getPredicates() <em>Predicates</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPredicates()
   * @generated
   * @ordered
   */
  protected EList<PredicateVarReference> predicates;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected BDSLExpressionImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return BDSLPackage.Literals.BDSL_EXPRESSION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<BigraphExpression> getDefinition()
  {
    if (definition == null)
    {
      definition = new EObjectContainmentEList<BigraphExpression>(BigraphExpression.class, this, BDSLPackage.BDSL_EXPRESSION__DEFINITION);
    }
    return definition;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public AssignableBigraphExpressionWithExplicitSig getBrs()
  {
    return brs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetBrs(AssignableBigraphExpressionWithExplicitSig newBrs, NotificationChain msgs)
  {
    AssignableBigraphExpressionWithExplicitSig oldBrs = brs;
    brs = newBrs;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, BDSLPackage.BDSL_EXPRESSION__BRS, oldBrs, newBrs);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setBrs(AssignableBigraphExpressionWithExplicitSig newBrs)
  {
    if (newBrs != brs)
    {
      NotificationChain msgs = null;
      if (brs != null)
        msgs = ((InternalEObject)brs).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - BDSLPackage.BDSL_EXPRESSION__BRS, null, msgs);
      if (newBrs != null)
        msgs = ((InternalEObject)newBrs).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - BDSLPackage.BDSL_EXPRESSION__BRS, null, msgs);
      msgs = basicSetBrs(newBrs, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, BDSLPackage.BDSL_EXPRESSION__BRS, newBrs, newBrs));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<BigraphVarReference> getAgents()
  {
    if (agents == null)
    {
      agents = new EObjectContainmentEList<BigraphVarReference>(BigraphVarReference.class, this, BDSLPackage.BDSL_EXPRESSION__AGENTS);
    }
    return agents;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<RuleVarReference> getRules()
  {
    if (rules == null)
    {
      rules = new EObjectContainmentEList<RuleVarReference>(RuleVarReference.class, this, BDSLPackage.BDSL_EXPRESSION__RULES);
    }
    return rules;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<PredicateVarReference> getPredicates()
  {
    if (predicates == null)
    {
      predicates = new EObjectContainmentEList<PredicateVarReference>(PredicateVarReference.class, this, BDSLPackage.BDSL_EXPRESSION__PREDICATES);
    }
    return predicates;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case BDSLPackage.BDSL_EXPRESSION__DEFINITION:
        return ((InternalEList<?>)getDefinition()).basicRemove(otherEnd, msgs);
      case BDSLPackage.BDSL_EXPRESSION__BRS:
        return basicSetBrs(null, msgs);
      case BDSLPackage.BDSL_EXPRESSION__AGENTS:
        return ((InternalEList<?>)getAgents()).basicRemove(otherEnd, msgs);
      case BDSLPackage.BDSL_EXPRESSION__RULES:
        return ((InternalEList<?>)getRules()).basicRemove(otherEnd, msgs);
      case BDSLPackage.BDSL_EXPRESSION__PREDICATES:
        return ((InternalEList<?>)getPredicates()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case BDSLPackage.BDSL_EXPRESSION__DEFINITION:
        return getDefinition();
      case BDSLPackage.BDSL_EXPRESSION__BRS:
        return getBrs();
      case BDSLPackage.BDSL_EXPRESSION__AGENTS:
        return getAgents();
      case BDSLPackage.BDSL_EXPRESSION__RULES:
        return getRules();
      case BDSLPackage.BDSL_EXPRESSION__PREDICATES:
        return getPredicates();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case BDSLPackage.BDSL_EXPRESSION__DEFINITION:
        getDefinition().clear();
        getDefinition().addAll((Collection<? extends BigraphExpression>)newValue);
        return;
      case BDSLPackage.BDSL_EXPRESSION__BRS:
        setBrs((AssignableBigraphExpressionWithExplicitSig)newValue);
        return;
      case BDSLPackage.BDSL_EXPRESSION__AGENTS:
        getAgents().clear();
        getAgents().addAll((Collection<? extends BigraphVarReference>)newValue);
        return;
      case BDSLPackage.BDSL_EXPRESSION__RULES:
        getRules().clear();
        getRules().addAll((Collection<? extends RuleVarReference>)newValue);
        return;
      case BDSLPackage.BDSL_EXPRESSION__PREDICATES:
        getPredicates().clear();
        getPredicates().addAll((Collection<? extends PredicateVarReference>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case BDSLPackage.BDSL_EXPRESSION__DEFINITION:
        getDefinition().clear();
        return;
      case BDSLPackage.BDSL_EXPRESSION__BRS:
        setBrs((AssignableBigraphExpressionWithExplicitSig)null);
        return;
      case BDSLPackage.BDSL_EXPRESSION__AGENTS:
        getAgents().clear();
        return;
      case BDSLPackage.BDSL_EXPRESSION__RULES:
        getRules().clear();
        return;
      case BDSLPackage.BDSL_EXPRESSION__PREDICATES:
        getPredicates().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case BDSLPackage.BDSL_EXPRESSION__DEFINITION:
        return definition != null && !definition.isEmpty();
      case BDSLPackage.BDSL_EXPRESSION__BRS:
        return brs != null;
      case BDSLPackage.BDSL_EXPRESSION__AGENTS:
        return agents != null && !agents.isEmpty();
      case BDSLPackage.BDSL_EXPRESSION__RULES:
        return rules != null && !rules.isEmpty();
      case BDSLPackage.BDSL_EXPRESSION__PREDICATES:
        return predicates != null && !predicates.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int eBaseStructuralFeatureID(int derivedFeatureID, Class<?> baseClass)
  {
    if (baseClass == BDSLBigraphDefinition.class)
    {
      switch (derivedFeatureID)
      {
        case BDSLPackage.BDSL_EXPRESSION__DEFINITION: return BDSLPackage.BDSL_BIGRAPH_DEFINITION__DEFINITION;
        default: return -1;
      }
    }
    if (baseClass == BDSLBrsDefinition.class)
    {
      switch (derivedFeatureID)
      {
        case BDSLPackage.BDSL_EXPRESSION__BRS: return BDSLPackage.BDSL_BRS_DEFINITION__BRS;
        case BDSLPackage.BDSL_EXPRESSION__AGENTS: return BDSLPackage.BDSL_BRS_DEFINITION__AGENTS;
        case BDSLPackage.BDSL_EXPRESSION__RULES: return BDSLPackage.BDSL_BRS_DEFINITION__RULES;
        case BDSLPackage.BDSL_EXPRESSION__PREDICATES: return BDSLPackage.BDSL_BRS_DEFINITION__PREDICATES;
        default: return -1;
      }
    }
    return super.eBaseStructuralFeatureID(derivedFeatureID, baseClass);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int eDerivedStructuralFeatureID(int baseFeatureID, Class<?> baseClass)
  {
    if (baseClass == BDSLBigraphDefinition.class)
    {
      switch (baseFeatureID)
      {
        case BDSLPackage.BDSL_BIGRAPH_DEFINITION__DEFINITION: return BDSLPackage.BDSL_EXPRESSION__DEFINITION;
        default: return -1;
      }
    }
    if (baseClass == BDSLBrsDefinition.class)
    {
      switch (baseFeatureID)
      {
        case BDSLPackage.BDSL_BRS_DEFINITION__BRS: return BDSLPackage.BDSL_EXPRESSION__BRS;
        case BDSLPackage.BDSL_BRS_DEFINITION__AGENTS: return BDSLPackage.BDSL_EXPRESSION__AGENTS;
        case BDSLPackage.BDSL_BRS_DEFINITION__RULES: return BDSLPackage.BDSL_EXPRESSION__RULES;
        case BDSLPackage.BDSL_BRS_DEFINITION__PREDICATES: return BDSLPackage.BDSL_EXPRESSION__PREDICATES;
        default: return -1;
      }
    }
    return super.eDerivedStructuralFeatureID(baseFeatureID, baseClass);
  }

} //BDSLExpressionImpl
