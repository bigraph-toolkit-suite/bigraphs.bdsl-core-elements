/**
 * generated by Xtext 2.32.0
 */
package org.bigraphs.dsl.bDSL.impl;

import org.bigraphs.dsl.bDSL.AbstractBigraphDeclaration;
import org.bigraphs.dsl.bDSL.AbstractElement;
import org.bigraphs.dsl.bDSL.AbstractMainStatements;
import org.bigraphs.dsl.bDSL.AbstractNamedSignatureElement;
import org.bigraphs.dsl.bDSL.AssignableBigraphExpression;
import org.bigraphs.dsl.bDSL.AssignableBigraphExpressionWithExplicitSig;
import org.bigraphs.dsl.bDSL.AssignmentOrVariableDeclaration;
import org.bigraphs.dsl.bDSL.BDSLAssignment;
import org.bigraphs.dsl.bDSL.BDSLBigraphDefinition;
import org.bigraphs.dsl.bDSL.BDSLBlock;
import org.bigraphs.dsl.bDSL.BDSLBrsDefinition;
import org.bigraphs.dsl.bDSL.BDSLDocument;
import org.bigraphs.dsl.bDSL.BDSLDocumentImport;
import org.bigraphs.dsl.bDSL.BDSLDocumentReference;
import org.bigraphs.dsl.bDSL.BDSLExpression;
import org.bigraphs.dsl.bDSL.BDSLFactory;
import org.bigraphs.dsl.bDSL.BDSLPackage;
import org.bigraphs.dsl.bDSL.BDSLReactDefinition;
import org.bigraphs.dsl.bDSL.BDSLReferenceDeclaration;
import org.bigraphs.dsl.bDSL.BDSLReferenceSymbol;
import org.bigraphs.dsl.bDSL.BDSLUdfImport;
import org.bigraphs.dsl.bDSL.BDSLVariableDeclaration2;
import org.bigraphs.dsl.bDSL.BRSDefinition;
import org.bigraphs.dsl.bDSL.BRSFinishedCallback;
import org.bigraphs.dsl.bDSL.BRSStartedCallback;
import org.bigraphs.dsl.bDSL.BRSVarReference;
import org.bigraphs.dsl.bDSL.Barren;
import org.bigraphs.dsl.bDSL.BdslCallbackMethods;
import org.bigraphs.dsl.bDSL.BigraphBdslVarDeclOrReference;
import org.bigraphs.dsl.bDSL.BigraphExpression;
import org.bigraphs.dsl.bDSL.BigraphPredDeclOrReference;
import org.bigraphs.dsl.bDSL.BigraphRuleDeclOrReference;
import org.bigraphs.dsl.bDSL.BigraphVarDeclOrReference;
import org.bigraphs.dsl.bDSL.BigraphVarReference;
import org.bigraphs.dsl.bDSL.BinaryNestingOperator;
import org.bigraphs.dsl.bDSL.BinaryParallelOperator;
import org.bigraphs.dsl.bDSL.CallbackStatements;
import org.bigraphs.dsl.bDSL.Closure;
import org.bigraphs.dsl.bDSL.ControlType;
import org.bigraphs.dsl.bDSL.ControlVariable;
import org.bigraphs.dsl.bDSL.CreateRandomBigraphMethod;
import org.bigraphs.dsl.bDSL.DataSink;
import org.bigraphs.dsl.bDSL.DataSource;
import org.bigraphs.dsl.bDSL.ElementaryBigraphs;
import org.bigraphs.dsl.bDSL.ExecuteBRSMethod;
import org.bigraphs.dsl.bDSL.ExportFormat;
import org.bigraphs.dsl.bDSL.ExportMethod;
import org.bigraphs.dsl.bDSL.Join;
import org.bigraphs.dsl.bDSL.LoadFormat;
import org.bigraphs.dsl.bDSL.LoadMethod;
import org.bigraphs.dsl.bDSL.LocalPredicateDeclaration;
import org.bigraphs.dsl.bDSL.LocalRuleDecl;
import org.bigraphs.dsl.bDSL.LocalVarDecl;
import org.bigraphs.dsl.bDSL.MainElement;
import org.bigraphs.dsl.bDSL.Merge;
import org.bigraphs.dsl.bDSL.MethodStatements;
import org.bigraphs.dsl.bDSL.Multi;
import org.bigraphs.dsl.bDSL.NameConstant;
import org.bigraphs.dsl.bDSL.NodeExpressionCall;
import org.bigraphs.dsl.bDSL.OutputModeModel;
import org.bigraphs.dsl.bDSL.Plus;
import org.bigraphs.dsl.bDSL.PredicateMatchCallback;
import org.bigraphs.dsl.bDSL.PredicateType;
import org.bigraphs.dsl.bDSL.PredicateVarReference;
import org.bigraphs.dsl.bDSL.PrintLn;
import org.bigraphs.dsl.bDSL.PrintableExpression;
import org.bigraphs.dsl.bDSL.ReferenceClassSymbol;
import org.bigraphs.dsl.bDSL.RuleMatchCallback;
import org.bigraphs.dsl.bDSL.RuleVarReference;
import org.bigraphs.dsl.bDSL.Signature;
import org.bigraphs.dsl.bDSL.Site;
import org.bigraphs.dsl.bDSL.SiteVars;
import org.bigraphs.dsl.bDSL.StringLiteral;
import org.bigraphs.dsl.bDSL.Substitution;
import org.bigraphs.dsl.bDSL.UDFArgumentTypes;
import org.bigraphs.dsl.bDSL.UDFOperation;
import org.bigraphs.dsl.bDSL.UdfCallExpression;
import org.bigraphs.dsl.bDSL.VariableCreationType;
import org.bigraphs.dsl.bDSL.XExpression;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EEnum;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

import org.eclipse.emf.ecore.impl.EPackageImpl;

import org.eclipse.xtext.common.types.TypesPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Package</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class BDSLPackageImpl extends EPackageImpl implements BDSLPackage
{
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass bdslDocumentEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass bdslDocumentImportEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass bdslUdfImportEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass abstractElementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass abstractNamedSignatureElementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass mainElementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass signatureEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass controlVariableEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass localVarDeclEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass abstractBigraphDeclarationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass nodeExpressionCallEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass nameConstantEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass siteVarsEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass localRuleDeclEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass localPredicateDeclarationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass brsDefinitionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass elementaryBigraphsEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass barrenEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass mergeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass closureEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass substitutionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass siteEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass joinEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass bigraphVarReferenceEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass ruleVarReferenceEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass predicateVarReferenceEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass brsVarReferenceEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass bdslDocumentReferenceEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass bigraphVarDeclOrReferenceEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass bigraphRuleDeclOrReferenceEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass bigraphPredDeclOrReferenceEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass bigraphBdslVarDeclOrReferenceEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass bigraphExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass bdslReferenceSymbolEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass assignmentOrVariableDeclarationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass bdslVariableDeclaration2EClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass bdslReferenceDeclarationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass bdslExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass bdslReactDefinitionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass bdslBrsDefinitionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass bdslBigraphDefinitionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass referenceClassSymbolEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass assignableBigraphExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass assignableBigraphExpressionWithExplicitSigEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass methodStatementsEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass bdslCallbackMethodsEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass brsStartedCallbackEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass brsFinishedCallbackEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass predicateMatchCallbackEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass ruleMatchCallbackEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass printLnEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass printableExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass exportMethodEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass executeBRSMethodEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass abstractMainStatementsEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass callbackStatementsEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass udfOperationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass xExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass udfArgumentTypesEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass bdslBlockEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass lvd2EClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass plusEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass multiEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass bdslAssignmentEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass stringLiteralEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass loadMethodEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass createRandomBigraphMethodEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass udfCallExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum variableCreationTypeEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum binaryParallelOperatorEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum binaryNestingOperatorEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum controlTypeEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum predicateTypeEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum exportFormatEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum loadFormatEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum dataSinkEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum dataSourceEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum outputModeModelEEnum = null;

  /**
   * Creates an instance of the model <b>Package</b>, registered with
   * {@link org.eclipse.emf.ecore.EPackage.Registry EPackage.Registry} by the package
   * package URI value.
   * <p>Note: the correct way to create the package is via the static
   * factory method {@link #init init()}, which also performs
   * initialization of the package, or returns the registered package,
   * if one already exists.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.eclipse.emf.ecore.EPackage.Registry
   * @see org.bigraphs.dsl.bDSL.BDSLPackage#eNS_URI
   * @see #init()
   * @generated
   */
  private BDSLPackageImpl()
  {
    super(eNS_URI, BDSLFactory.eINSTANCE);
  }
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static boolean isInited = false;

  /**
   * Creates, registers, and initializes the <b>Package</b> for this model, and for any others upon which it depends.
   *
   * <p>This method is used to initialize {@link BDSLPackage#eINSTANCE} when that field is accessed.
   * Clients should not invoke it directly. Instead, they should simply access that field to obtain the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #eNS_URI
   * @see #createPackageContents()
   * @see #initializePackageContents()
   * @generated
   */
  public static BDSLPackage init()
  {
    if (isInited) return (BDSLPackage)EPackage.Registry.INSTANCE.getEPackage(BDSLPackage.eNS_URI);

    // Obtain or create and register package
    Object registeredBDSLPackage = EPackage.Registry.INSTANCE.get(eNS_URI);
    BDSLPackageImpl theBDSLPackage = registeredBDSLPackage instanceof BDSLPackageImpl ? (BDSLPackageImpl)registeredBDSLPackage : new BDSLPackageImpl();

    isInited = true;

    // Initialize simple dependencies
    TypesPackage.eINSTANCE.eClass();

    // Create package meta-data objects
    theBDSLPackage.createPackageContents();

    // Initialize created meta-data
    theBDSLPackage.initializePackageContents();

    // Mark meta-data to indicate it can't be changed
    theBDSLPackage.freeze();

    // Update the registry and return the package
    EPackage.Registry.INSTANCE.put(BDSLPackage.eNS_URI, theBDSLPackage);
    return theBDSLPackage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getBDSLDocument()
  {
    return bdslDocumentEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getBDSLDocument_ImportDeclarationsBdsl()
  {
    return (EReference)bdslDocumentEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getBDSLDocument_ImportDeclarationsUdf()
  {
    return (EReference)bdslDocumentEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getBDSLDocument_Signature()
  {
    return (EReference)bdslDocumentEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getBDSLDocument_Statements()
  {
    return (EReference)bdslDocumentEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getBDSLDocument_Main()
  {
    return (EReference)bdslDocumentEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getBDSLDocumentImport()
  {
    return bdslDocumentImportEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getBDSLDocumentImport_ImportedNamespace()
  {
    return (EAttribute)bdslDocumentImportEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getBDSLUdfImport()
  {
    return bdslUdfImportEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getBDSLUdfImport_ImportedNamespace()
  {
    return (EAttribute)bdslUdfImportEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getAbstractElement()
  {
    return abstractElementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getAbstractNamedSignatureElement()
  {
    return abstractNamedSignatureElementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getAbstractNamedSignatureElement_Sig()
  {
    return (EReference)abstractNamedSignatureElementEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getMainElement()
  {
    return mainElementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getMainElement_Body()
  {
    return (EReference)mainElementEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getSignature()
  {
    return signatureEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getSignature_Name()
  {
    return (EAttribute)signatureEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSignature_Controls()
  {
    return (EReference)signatureEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getControlVariable()
  {
    return controlVariableEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getControlVariable_Type()
  {
    return (EAttribute)controlVariableEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getControlVariable_Name()
  {
    return (EAttribute)controlVariableEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getControlVariable_Arity()
  {
    return (EAttribute)controlVariableEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getLocalVarDecl()
  {
    return localVarDeclEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getLocalVarDecl_SiteArgs()
  {
    return (EReference)localVarDeclEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getLocalVarDecl_ControlType()
  {
    return (EReference)localVarDeclEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getAbstractBigraphDeclaration()
  {
    return abstractBigraphDeclarationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getNodeExpressionCall()
  {
    return nodeExpressionCallEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getNodeExpressionCall_Value()
  {
    return (EReference)nodeExpressionCallEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getNodeExpressionCall_Links()
  {
    return (EReference)nodeExpressionCallEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getNameConstant()
  {
    return nameConstantEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getNameConstant_Value()
  {
    return (EAttribute)nameConstantEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getSiteVars()
  {
    return siteVarsEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getSiteVars_Name()
  {
    return (EAttribute)siteVarsEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getLocalRuleDecl()
  {
    return localRuleDeclEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getLocalPredicateDeclaration()
  {
    return localPredicateDeclarationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getLocalPredicateDeclaration_Type()
  {
    return (EAttribute)localPredicateDeclarationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getBRSDefinition()
  {
    return brsDefinitionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getElementaryBigraphs()
  {
    return elementaryBigraphsEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getBarren()
  {
    return barrenEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getMerge()
  {
    return mergeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getMerge_Sites()
  {
    return (EAttribute)mergeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getClosure()
  {
    return closureEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getClosure_Value()
  {
    return (EAttribute)closureEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getSubstitution()
  {
    return substitutionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getSubstitution_From()
  {
    return (EAttribute)substitutionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getSubstitution_To()
  {
    return (EAttribute)substitutionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getSite()
  {
    return siteEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getSite_Index()
  {
    return (EAttribute)siteEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getJoin()
  {
    return joinEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getBigraphVarReference()
  {
    return bigraphVarReferenceEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getBigraphVarReference_Value()
  {
    return (EReference)bigraphVarReferenceEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getRuleVarReference()
  {
    return ruleVarReferenceEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getRuleVarReference_Value()
  {
    return (EReference)ruleVarReferenceEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPredicateVarReference()
  {
    return predicateVarReferenceEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getPredicateVarReference_Value()
  {
    return (EReference)predicateVarReferenceEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getBRSVarReference()
  {
    return brsVarReferenceEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getBRSVarReference_Value()
  {
    return (EReference)brsVarReferenceEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getBDSLDocumentReference()
  {
    return bdslDocumentReferenceEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getBDSLDocumentReference_Value()
  {
    return (EReference)bdslDocumentReferenceEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getBigraphVarDeclOrReference()
  {
    return bigraphVarDeclOrReferenceEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getBigraphRuleDeclOrReference()
  {
    return bigraphRuleDeclOrReferenceEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getBigraphPredDeclOrReference()
  {
    return bigraphPredDeclOrReferenceEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getBigraphBdslVarDeclOrReference()
  {
    return bigraphBdslVarDeclOrReferenceEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getBigraphExpression()
  {
    return bigraphExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getBDSLReferenceSymbol()
  {
    return bdslReferenceSymbolEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getAssignmentOrVariableDeclaration()
  {
    return assignmentOrVariableDeclarationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getAssignmentOrVariableDeclaration_Value()
  {
    return (EReference)assignmentOrVariableDeclarationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getBDSLVariableDeclaration2()
  {
    return bdslVariableDeclaration2EClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getBDSLVariableDeclaration2_Variable()
  {
    return (EReference)bdslVariableDeclaration2EClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getBDSLReferenceDeclaration()
  {
    return bdslReferenceDeclarationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getBDSLReferenceDeclaration_Target()
  {
    return (EReference)bdslReferenceDeclarationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getBDSLExpression()
  {
    return bdslExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getBDSLReactDefinition()
  {
    return bdslReactDefinitionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getBDSLReactDefinition_Redex()
  {
    return (EReference)bdslReactDefinitionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getBDSLReactDefinition_Reactum()
  {
    return (EReference)bdslReactDefinitionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getBDSLBrsDefinition()
  {
    return bdslBrsDefinitionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getBDSLBrsDefinition_Brs()
  {
    return (EReference)bdslBrsDefinitionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getBDSLBrsDefinition_Agents()
  {
    return (EReference)bdslBrsDefinitionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getBDSLBrsDefinition_Rules()
  {
    return (EReference)bdslBrsDefinitionEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getBDSLBrsDefinition_Predicates()
  {
    return (EReference)bdslBrsDefinitionEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getBDSLBigraphDefinition()
  {
    return bdslBigraphDefinitionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getBDSLBigraphDefinition_Definition()
  {
    return (EReference)bdslBigraphDefinitionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getReferenceClassSymbol()
  {
    return referenceClassSymbolEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getReferenceClassSymbol_Type()
  {
    return (EReference)referenceClassSymbolEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getAssignableBigraphExpression()
  {
    return assignableBigraphExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getAssignableBigraphExpressionWithExplicitSig()
  {
    return assignableBigraphExpressionWithExplicitSigEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getAssignableBigraphExpressionWithExplicitSig_Sig()
  {
    return (EReference)assignableBigraphExpressionWithExplicitSigEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getMethodStatements()
  {
    return methodStatementsEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getBdslCallbackMethods()
  {
    return bdslCallbackMethodsEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getBdslCallbackMethods_Brs()
  {
    return (EReference)bdslCallbackMethodsEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getBdslCallbackMethods_Statements()
  {
    return (EReference)bdslCallbackMethodsEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getBRSStartedCallback()
  {
    return brsStartedCallbackEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getBRSFinishedCallback()
  {
    return brsFinishedCallbackEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPredicateMatchCallback()
  {
    return predicateMatchCallbackEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getPredicateMatchCallback_Params()
  {
    return (EReference)predicateMatchCallbackEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getRuleMatchCallback()
  {
    return ruleMatchCallbackEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getRuleMatchCallback_Params()
  {
    return (EReference)ruleMatchCallbackEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPrintLn()
  {
    return printLnEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getPrintLn_Text()
  {
    return (EReference)printLnEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getPrintLn_Mode()
  {
    return (EAttribute)printLnEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPrintableExpression()
  {
    return printableExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getExportMethod()
  {
    return exportMethodEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getExportMethod_Variable()
  {
    return (EReference)exportMethodEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getExportMethod_Format()
  {
    return (EAttribute)exportMethodEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getExportMethod_ResourcePath()
  {
    return (EAttribute)exportMethodEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getExecuteBRSMethod()
  {
    return executeBRSMethodEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getExecuteBRSMethod_Brs()
  {
    return (EReference)executeBRSMethodEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getAbstractMainStatements()
  {
    return abstractMainStatementsEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getCallbackStatements()
  {
    return callbackStatementsEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getUDFOperation()
  {
    return udfOperationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getUDFOperation_Expression()
  {
    return (EReference)udfOperationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getXExpression()
  {
    return xExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getUDFArgumentTypes()
  {
    return udfArgumentTypesEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getUDFArgumentTypes_Name()
  {
    return (EAttribute)udfArgumentTypesEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getBDSLBlock()
  {
    return bdslBlockEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getBDSLBlock_Statements()
  {
    return (EReference)bdslBlockEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getLVD2()
  {
    return lvd2EClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPlus()
  {
    return plusEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getPlus_Left()
  {
    return (EReference)plusEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getPlus_Operator()
  {
    return (EAttribute)plusEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getPlus_Right()
  {
    return (EReference)plusEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getMulti()
  {
    return multiEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getMulti_Left()
  {
    return (EReference)multiEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getMulti_Operator()
  {
    return (EAttribute)multiEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getMulti_Right()
  {
    return (EReference)multiEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getBDSLAssignment()
  {
    return bdslAssignmentEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getBDSLAssignment_Left()
  {
    return (EReference)bdslAssignmentEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getBDSLAssignment_Right()
  {
    return (EReference)bdslAssignmentEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getStringLiteral()
  {
    return stringLiteralEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getStringLiteral_Value()
  {
    return (EAttribute)stringLiteralEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getLoadMethod()
  {
    return loadMethodEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getLoadMethod_Format()
  {
    return (EAttribute)loadMethodEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getLoadMethod_ResourcePath()
  {
    return (EAttribute)loadMethodEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getCreateRandomBigraphMethod()
  {
    return createRandomBigraphMethodEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getCreateRandomBigraphMethod_N()
  {
    return (EAttribute)createRandomBigraphMethodEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getCreateRandomBigraphMethod_T()
  {
    return (EAttribute)createRandomBigraphMethodEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getCreateRandomBigraphMethod_P()
  {
    return (EAttribute)createRandomBigraphMethodEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getUdfCallExpression()
  {
    return udfCallExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getUdfCallExpression_Type()
  {
    return (EReference)udfCallExpressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getUdfCallExpression_Params()
  {
    return (EReference)udfCallExpressionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getVariableCreationType()
  {
    return variableCreationTypeEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getBinaryParallelOperator()
  {
    return binaryParallelOperatorEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getBinaryNestingOperator()
  {
    return binaryNestingOperatorEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getControlType()
  {
    return controlTypeEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getPredicateType()
  {
    return predicateTypeEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getExportFormat()
  {
    return exportFormatEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getLoadFormat()
  {
    return loadFormatEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getDataSink()
  {
    return dataSinkEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getDataSource()
  {
    return dataSourceEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getOutputModeModel()
  {
    return outputModeModelEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public BDSLFactory getBDSLFactory()
  {
    return (BDSLFactory)getEFactoryInstance();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isCreated = false;

  /**
   * Creates the meta-model objects for the package.  This method is
   * guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void createPackageContents()
  {
    if (isCreated) return;
    isCreated = true;

    // Create classes and their features
    bdslDocumentEClass = createEClass(BDSL_DOCUMENT);
    createEReference(bdslDocumentEClass, BDSL_DOCUMENT__IMPORT_DECLARATIONS_BDSL);
    createEReference(bdslDocumentEClass, BDSL_DOCUMENT__IMPORT_DECLARATIONS_UDF);
    createEReference(bdslDocumentEClass, BDSL_DOCUMENT__SIGNATURE);
    createEReference(bdslDocumentEClass, BDSL_DOCUMENT__STATEMENTS);
    createEReference(bdslDocumentEClass, BDSL_DOCUMENT__MAIN);

    bdslDocumentImportEClass = createEClass(BDSL_DOCUMENT_IMPORT);
    createEAttribute(bdslDocumentImportEClass, BDSL_DOCUMENT_IMPORT__IMPORTED_NAMESPACE);

    bdslUdfImportEClass = createEClass(BDSL_UDF_IMPORT);
    createEAttribute(bdslUdfImportEClass, BDSL_UDF_IMPORT__IMPORTED_NAMESPACE);

    abstractElementEClass = createEClass(ABSTRACT_ELEMENT);

    abstractNamedSignatureElementEClass = createEClass(ABSTRACT_NAMED_SIGNATURE_ELEMENT);
    createEReference(abstractNamedSignatureElementEClass, ABSTRACT_NAMED_SIGNATURE_ELEMENT__SIG);

    mainElementEClass = createEClass(MAIN_ELEMENT);
    createEReference(mainElementEClass, MAIN_ELEMENT__BODY);

    signatureEClass = createEClass(SIGNATURE);
    createEAttribute(signatureEClass, SIGNATURE__NAME);
    createEReference(signatureEClass, SIGNATURE__CONTROLS);

    controlVariableEClass = createEClass(CONTROL_VARIABLE);
    createEAttribute(controlVariableEClass, CONTROL_VARIABLE__TYPE);
    createEAttribute(controlVariableEClass, CONTROL_VARIABLE__NAME);
    createEAttribute(controlVariableEClass, CONTROL_VARIABLE__ARITY);

    localVarDeclEClass = createEClass(LOCAL_VAR_DECL);
    createEReference(localVarDeclEClass, LOCAL_VAR_DECL__SITE_ARGS);
    createEReference(localVarDeclEClass, LOCAL_VAR_DECL__CONTROL_TYPE);

    abstractBigraphDeclarationEClass = createEClass(ABSTRACT_BIGRAPH_DECLARATION);

    nodeExpressionCallEClass = createEClass(NODE_EXPRESSION_CALL);
    createEReference(nodeExpressionCallEClass, NODE_EXPRESSION_CALL__VALUE);
    createEReference(nodeExpressionCallEClass, NODE_EXPRESSION_CALL__LINKS);

    nameConstantEClass = createEClass(NAME_CONSTANT);
    createEAttribute(nameConstantEClass, NAME_CONSTANT__VALUE);

    siteVarsEClass = createEClass(SITE_VARS);
    createEAttribute(siteVarsEClass, SITE_VARS__NAME);

    localRuleDeclEClass = createEClass(LOCAL_RULE_DECL);

    localPredicateDeclarationEClass = createEClass(LOCAL_PREDICATE_DECLARATION);
    createEAttribute(localPredicateDeclarationEClass, LOCAL_PREDICATE_DECLARATION__TYPE);

    brsDefinitionEClass = createEClass(BRS_DEFINITION);

    elementaryBigraphsEClass = createEClass(ELEMENTARY_BIGRAPHS);

    barrenEClass = createEClass(BARREN);

    mergeEClass = createEClass(MERGE);
    createEAttribute(mergeEClass, MERGE__SITES);

    closureEClass = createEClass(CLOSURE);
    createEAttribute(closureEClass, CLOSURE__VALUE);

    substitutionEClass = createEClass(SUBSTITUTION);
    createEAttribute(substitutionEClass, SUBSTITUTION__FROM);
    createEAttribute(substitutionEClass, SUBSTITUTION__TO);

    siteEClass = createEClass(SITE);
    createEAttribute(siteEClass, SITE__INDEX);

    joinEClass = createEClass(JOIN);

    bigraphVarReferenceEClass = createEClass(BIGRAPH_VAR_REFERENCE);
    createEReference(bigraphVarReferenceEClass, BIGRAPH_VAR_REFERENCE__VALUE);

    ruleVarReferenceEClass = createEClass(RULE_VAR_REFERENCE);
    createEReference(ruleVarReferenceEClass, RULE_VAR_REFERENCE__VALUE);

    predicateVarReferenceEClass = createEClass(PREDICATE_VAR_REFERENCE);
    createEReference(predicateVarReferenceEClass, PREDICATE_VAR_REFERENCE__VALUE);

    brsVarReferenceEClass = createEClass(BRS_VAR_REFERENCE);
    createEReference(brsVarReferenceEClass, BRS_VAR_REFERENCE__VALUE);

    bdslDocumentReferenceEClass = createEClass(BDSL_DOCUMENT_REFERENCE);
    createEReference(bdslDocumentReferenceEClass, BDSL_DOCUMENT_REFERENCE__VALUE);

    bigraphVarDeclOrReferenceEClass = createEClass(BIGRAPH_VAR_DECL_OR_REFERENCE);

    bigraphRuleDeclOrReferenceEClass = createEClass(BIGRAPH_RULE_DECL_OR_REFERENCE);

    bigraphPredDeclOrReferenceEClass = createEClass(BIGRAPH_PRED_DECL_OR_REFERENCE);

    bigraphBdslVarDeclOrReferenceEClass = createEClass(BIGRAPH_BDSL_VAR_DECL_OR_REFERENCE);

    bigraphExpressionEClass = createEClass(BIGRAPH_EXPRESSION);

    bdslReferenceSymbolEClass = createEClass(BDSL_REFERENCE_SYMBOL);

    assignmentOrVariableDeclarationEClass = createEClass(ASSIGNMENT_OR_VARIABLE_DECLARATION);
    createEReference(assignmentOrVariableDeclarationEClass, ASSIGNMENT_OR_VARIABLE_DECLARATION__VALUE);

    bdslVariableDeclaration2EClass = createEClass(BDSL_VARIABLE_DECLARATION2);
    createEReference(bdslVariableDeclaration2EClass, BDSL_VARIABLE_DECLARATION2__VARIABLE);

    bdslReferenceDeclarationEClass = createEClass(BDSL_REFERENCE_DECLARATION);
    createEReference(bdslReferenceDeclarationEClass, BDSL_REFERENCE_DECLARATION__TARGET);

    bdslExpressionEClass = createEClass(BDSL_EXPRESSION);

    bdslReactDefinitionEClass = createEClass(BDSL_REACT_DEFINITION);
    createEReference(bdslReactDefinitionEClass, BDSL_REACT_DEFINITION__REDEX);
    createEReference(bdslReactDefinitionEClass, BDSL_REACT_DEFINITION__REACTUM);

    bdslBrsDefinitionEClass = createEClass(BDSL_BRS_DEFINITION);
    createEReference(bdslBrsDefinitionEClass, BDSL_BRS_DEFINITION__BRS);
    createEReference(bdslBrsDefinitionEClass, BDSL_BRS_DEFINITION__AGENTS);
    createEReference(bdslBrsDefinitionEClass, BDSL_BRS_DEFINITION__RULES);
    createEReference(bdslBrsDefinitionEClass, BDSL_BRS_DEFINITION__PREDICATES);

    bdslBigraphDefinitionEClass = createEClass(BDSL_BIGRAPH_DEFINITION);
    createEReference(bdslBigraphDefinitionEClass, BDSL_BIGRAPH_DEFINITION__DEFINITION);

    referenceClassSymbolEClass = createEClass(REFERENCE_CLASS_SYMBOL);
    createEReference(referenceClassSymbolEClass, REFERENCE_CLASS_SYMBOL__TYPE);

    assignableBigraphExpressionEClass = createEClass(ASSIGNABLE_BIGRAPH_EXPRESSION);

    assignableBigraphExpressionWithExplicitSigEClass = createEClass(ASSIGNABLE_BIGRAPH_EXPRESSION_WITH_EXPLICIT_SIG);
    createEReference(assignableBigraphExpressionWithExplicitSigEClass, ASSIGNABLE_BIGRAPH_EXPRESSION_WITH_EXPLICIT_SIG__SIG);

    methodStatementsEClass = createEClass(METHOD_STATEMENTS);

    bdslCallbackMethodsEClass = createEClass(BDSL_CALLBACK_METHODS);
    createEReference(bdslCallbackMethodsEClass, BDSL_CALLBACK_METHODS__BRS);
    createEReference(bdslCallbackMethodsEClass, BDSL_CALLBACK_METHODS__STATEMENTS);

    brsStartedCallbackEClass = createEClass(BRS_STARTED_CALLBACK);

    brsFinishedCallbackEClass = createEClass(BRS_FINISHED_CALLBACK);

    predicateMatchCallbackEClass = createEClass(PREDICATE_MATCH_CALLBACK);
    createEReference(predicateMatchCallbackEClass, PREDICATE_MATCH_CALLBACK__PARAMS);

    ruleMatchCallbackEClass = createEClass(RULE_MATCH_CALLBACK);
    createEReference(ruleMatchCallbackEClass, RULE_MATCH_CALLBACK__PARAMS);

    printLnEClass = createEClass(PRINT_LN);
    createEReference(printLnEClass, PRINT_LN__TEXT);
    createEAttribute(printLnEClass, PRINT_LN__MODE);

    printableExpressionEClass = createEClass(PRINTABLE_EXPRESSION);

    exportMethodEClass = createEClass(EXPORT_METHOD);
    createEReference(exportMethodEClass, EXPORT_METHOD__VARIABLE);
    createEAttribute(exportMethodEClass, EXPORT_METHOD__FORMAT);
    createEAttribute(exportMethodEClass, EXPORT_METHOD__RESOURCE_PATH);

    executeBRSMethodEClass = createEClass(EXECUTE_BRS_METHOD);
    createEReference(executeBRSMethodEClass, EXECUTE_BRS_METHOD__BRS);

    abstractMainStatementsEClass = createEClass(ABSTRACT_MAIN_STATEMENTS);

    callbackStatementsEClass = createEClass(CALLBACK_STATEMENTS);

    udfOperationEClass = createEClass(UDF_OPERATION);
    createEReference(udfOperationEClass, UDF_OPERATION__EXPRESSION);

    xExpressionEClass = createEClass(XEXPRESSION);

    udfArgumentTypesEClass = createEClass(UDF_ARGUMENT_TYPES);
    createEAttribute(udfArgumentTypesEClass, UDF_ARGUMENT_TYPES__NAME);

    bdslBlockEClass = createEClass(BDSL_BLOCK);
    createEReference(bdslBlockEClass, BDSL_BLOCK__STATEMENTS);

    lvd2EClass = createEClass(LVD2);

    plusEClass = createEClass(PLUS);
    createEReference(plusEClass, PLUS__LEFT);
    createEAttribute(plusEClass, PLUS__OPERATOR);
    createEReference(plusEClass, PLUS__RIGHT);

    multiEClass = createEClass(MULTI);
    createEReference(multiEClass, MULTI__LEFT);
    createEAttribute(multiEClass, MULTI__OPERATOR);
    createEReference(multiEClass, MULTI__RIGHT);

    bdslAssignmentEClass = createEClass(BDSL_ASSIGNMENT);
    createEReference(bdslAssignmentEClass, BDSL_ASSIGNMENT__LEFT);
    createEReference(bdslAssignmentEClass, BDSL_ASSIGNMENT__RIGHT);

    stringLiteralEClass = createEClass(STRING_LITERAL);
    createEAttribute(stringLiteralEClass, STRING_LITERAL__VALUE);

    loadMethodEClass = createEClass(LOAD_METHOD);
    createEAttribute(loadMethodEClass, LOAD_METHOD__FORMAT);
    createEAttribute(loadMethodEClass, LOAD_METHOD__RESOURCE_PATH);

    createRandomBigraphMethodEClass = createEClass(CREATE_RANDOM_BIGRAPH_METHOD);
    createEAttribute(createRandomBigraphMethodEClass, CREATE_RANDOM_BIGRAPH_METHOD__N);
    createEAttribute(createRandomBigraphMethodEClass, CREATE_RANDOM_BIGRAPH_METHOD__T);
    createEAttribute(createRandomBigraphMethodEClass, CREATE_RANDOM_BIGRAPH_METHOD__P);

    udfCallExpressionEClass = createEClass(UDF_CALL_EXPRESSION);
    createEReference(udfCallExpressionEClass, UDF_CALL_EXPRESSION__TYPE);
    createEReference(udfCallExpressionEClass, UDF_CALL_EXPRESSION__PARAMS);

    // Create enums
    variableCreationTypeEEnum = createEEnum(VARIABLE_CREATION_TYPE);
    binaryParallelOperatorEEnum = createEEnum(BINARY_PARALLEL_OPERATOR);
    binaryNestingOperatorEEnum = createEEnum(BINARY_NESTING_OPERATOR);
    controlTypeEEnum = createEEnum(CONTROL_TYPE);
    predicateTypeEEnum = createEEnum(PREDICATE_TYPE);
    exportFormatEEnum = createEEnum(EXPORT_FORMAT);
    loadFormatEEnum = createEEnum(LOAD_FORMAT);
    dataSinkEEnum = createEEnum(DATA_SINK);
    dataSourceEEnum = createEEnum(DATA_SOURCE);
    outputModeModelEEnum = createEEnum(OUTPUT_MODE_MODEL);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isInitialized = false;

  /**
   * Complete the initialization of the package and its meta-model.  This
   * method is guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void initializePackageContents()
  {
    if (isInitialized) return;
    isInitialized = true;

    // Initialize package
    setName(eNAME);
    setNsPrefix(eNS_PREFIX);
    setNsURI(eNS_URI);

    // Obtain other dependent packages
    TypesPackage theTypesPackage = (TypesPackage)EPackage.Registry.INSTANCE.getEPackage(TypesPackage.eNS_URI);

    // Create type parameters

    // Set bounds for type parameters

    // Add supertypes to classes
    bdslDocumentEClass.getESuperTypes().add(this.getUDFArgumentTypes());
    abstractNamedSignatureElementEClass.getESuperTypes().add(this.getUDFArgumentTypes());
    localVarDeclEClass.getESuperTypes().add(this.getAbstractNamedSignatureElement());
    localVarDeclEClass.getESuperTypes().add(this.getBDSLBigraphDefinition());
    localVarDeclEClass.getESuperTypes().add(this.getAbstractBigraphDeclaration());
    localVarDeclEClass.getESuperTypes().add(this.getBigraphVarDeclOrReference());
    abstractBigraphDeclarationEClass.getESuperTypes().add(this.getBigraphExpression());
    nodeExpressionCallEClass.getESuperTypes().add(this.getAbstractBigraphDeclaration());
    localRuleDeclEClass.getESuperTypes().add(this.getAbstractNamedSignatureElement());
    localRuleDeclEClass.getESuperTypes().add(this.getBigraphRuleDeclOrReference());
    localPredicateDeclarationEClass.getESuperTypes().add(this.getAbstractNamedSignatureElement());
    localPredicateDeclarationEClass.getESuperTypes().add(this.getBigraphPredDeclOrReference());
    brsDefinitionEClass.getESuperTypes().add(this.getAbstractNamedSignatureElement());
    brsDefinitionEClass.getESuperTypes().add(this.getBigraphBdslVarDeclOrReference());
    elementaryBigraphsEClass.getESuperTypes().add(this.getAbstractBigraphDeclaration());
    barrenEClass.getESuperTypes().add(this.getElementaryBigraphs());
    mergeEClass.getESuperTypes().add(this.getElementaryBigraphs());
    closureEClass.getESuperTypes().add(this.getElementaryBigraphs());
    substitutionEClass.getESuperTypes().add(this.getElementaryBigraphs());
    siteEClass.getESuperTypes().add(this.getElementaryBigraphs());
    joinEClass.getESuperTypes().add(this.getElementaryBigraphs());
    bigraphVarReferenceEClass.getESuperTypes().add(this.getAbstractBigraphDeclaration());
    bigraphVarReferenceEClass.getESuperTypes().add(this.getBigraphVarDeclOrReference());
    bigraphVarReferenceEClass.getESuperTypes().add(this.getBDSLReferenceSymbol());
    bigraphVarReferenceEClass.getESuperTypes().add(this.getPrintableExpression());
    ruleVarReferenceEClass.getESuperTypes().add(this.getBigraphRuleDeclOrReference());
    ruleVarReferenceEClass.getESuperTypes().add(this.getBDSLReferenceSymbol());
    predicateVarReferenceEClass.getESuperTypes().add(this.getBigraphPredDeclOrReference());
    predicateVarReferenceEClass.getESuperTypes().add(this.getBDSLReferenceSymbol());
    brsVarReferenceEClass.getESuperTypes().add(this.getBigraphBdslVarDeclOrReference());
    brsVarReferenceEClass.getESuperTypes().add(this.getBDSLReferenceSymbol());
    assignmentOrVariableDeclarationEClass.getESuperTypes().add(this.getAbstractElement());
    assignmentOrVariableDeclarationEClass.getESuperTypes().add(this.getAbstractMainStatements());
    bdslVariableDeclaration2EClass.getESuperTypes().add(this.getAssignmentOrVariableDeclaration());
    bdslReferenceDeclarationEClass.getESuperTypes().add(this.getAssignmentOrVariableDeclaration());
    bdslExpressionEClass.getESuperTypes().add(this.getBDSLReactDefinition());
    bdslExpressionEClass.getESuperTypes().add(this.getBDSLBigraphDefinition());
    bdslExpressionEClass.getESuperTypes().add(this.getBDSLBrsDefinition());
    referenceClassSymbolEClass.getESuperTypes().add(this.getAssignableBigraphExpression());
    assignableBigraphExpressionEClass.getESuperTypes().add(this.getBDSLExpression());
    assignableBigraphExpressionWithExplicitSigEClass.getESuperTypes().add(this.getAssignableBigraphExpression());
    assignableBigraphExpressionWithExplicitSigEClass.getESuperTypes().add(this.getMethodStatements());
    methodStatementsEClass.getESuperTypes().add(this.getAbstractMainStatements());
    methodStatementsEClass.getESuperTypes().add(this.getCallbackStatements());
    bdslCallbackMethodsEClass.getESuperTypes().add(this.getAbstractElement());
    bdslCallbackMethodsEClass.getESuperTypes().add(this.getMethodStatements());
    brsStartedCallbackEClass.getESuperTypes().add(this.getBdslCallbackMethods());
    brsFinishedCallbackEClass.getESuperTypes().add(this.getBdslCallbackMethods());
    predicateMatchCallbackEClass.getESuperTypes().add(this.getBdslCallbackMethods());
    ruleMatchCallbackEClass.getESuperTypes().add(this.getBdslCallbackMethods());
    printLnEClass.getESuperTypes().add(this.getMethodStatements());
    exportMethodEClass.getESuperTypes().add(this.getMethodStatements());
    executeBRSMethodEClass.getESuperTypes().add(this.getMethodStatements());
    udfOperationEClass.getESuperTypes().add(this.getAbstractMainStatements());
    udfOperationEClass.getESuperTypes().add(this.getCallbackStatements());
    lvd2EClass.getESuperTypes().add(this.getLocalVarDecl());
    plusEClass.getESuperTypes().add(this.getBigraphExpression());
    multiEClass.getESuperTypes().add(this.getBigraphExpression());
    bdslAssignmentEClass.getESuperTypes().add(this.getBDSLExpression());
    stringLiteralEClass.getESuperTypes().add(this.getPrintableExpression());
    loadMethodEClass.getESuperTypes().add(this.getAssignableBigraphExpressionWithExplicitSig());
    createRandomBigraphMethodEClass.getESuperTypes().add(this.getAssignableBigraphExpressionWithExplicitSig());
    udfCallExpressionEClass.getESuperTypes().add(this.getXExpression());

    // Initialize classes and features; add operations and parameters
    initEClass(bdslDocumentEClass, BDSLDocument.class, "BDSLDocument", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getBDSLDocument_ImportDeclarationsBdsl(), this.getBDSLDocumentImport(), null, "importDeclarationsBdsl", null, 0, -1, BDSLDocument.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getBDSLDocument_ImportDeclarationsUdf(), this.getBDSLUdfImport(), null, "importDeclarationsUdf", null, 0, -1, BDSLDocument.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getBDSLDocument_Signature(), this.getSignature(), null, "signature", null, 0, -1, BDSLDocument.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getBDSLDocument_Statements(), this.getAbstractElement(), null, "statements", null, 0, -1, BDSLDocument.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getBDSLDocument_Main(), this.getMainElement(), null, "main", null, 0, 1, BDSLDocument.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(bdslDocumentImportEClass, BDSLDocumentImport.class, "BDSLDocumentImport", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getBDSLDocumentImport_ImportedNamespace(), ecorePackage.getEString(), "importedNamespace", null, 0, 1, BDSLDocumentImport.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(bdslUdfImportEClass, BDSLUdfImport.class, "BDSLUdfImport", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getBDSLUdfImport_ImportedNamespace(), ecorePackage.getEString(), "importedNamespace", null, 0, 1, BDSLUdfImport.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(abstractElementEClass, AbstractElement.class, "AbstractElement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(abstractNamedSignatureElementEClass, AbstractNamedSignatureElement.class, "AbstractNamedSignatureElement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getAbstractNamedSignatureElement_Sig(), this.getSignature(), null, "sig", null, 0, 1, AbstractNamedSignatureElement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(mainElementEClass, MainElement.class, "MainElement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getMainElement_Body(), this.getBDSLBlock(), null, "body", null, 0, 1, MainElement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(signatureEClass, Signature.class, "Signature", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getSignature_Name(), ecorePackage.getEString(), "name", null, 0, 1, Signature.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getSignature_Controls(), this.getControlVariable(), null, "controls", null, 0, -1, Signature.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(controlVariableEClass, ControlVariable.class, "ControlVariable", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getControlVariable_Type(), this.getControlType(), "type", null, 0, 1, ControlVariable.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getControlVariable_Name(), ecorePackage.getEString(), "name", null, 0, 1, ControlVariable.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getControlVariable_Arity(), ecorePackage.getEInt(), "arity", null, 0, 1, ControlVariable.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(localVarDeclEClass, LocalVarDecl.class, "LocalVarDecl", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getLocalVarDecl_SiteArgs(), this.getSiteVars(), null, "siteArgs", null, 0, -1, LocalVarDecl.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getLocalVarDecl_ControlType(), this.getControlVariable(), null, "controlType", null, 0, 1, LocalVarDecl.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(abstractBigraphDeclarationEClass, AbstractBigraphDeclaration.class, "AbstractBigraphDeclaration", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(nodeExpressionCallEClass, NodeExpressionCall.class, "NodeExpressionCall", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getNodeExpressionCall_Value(), this.getControlVariable(), null, "value", null, 0, 1, NodeExpressionCall.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getNodeExpressionCall_Links(), this.getNameConstant(), null, "links", null, 0, -1, NodeExpressionCall.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(nameConstantEClass, NameConstant.class, "NameConstant", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getNameConstant_Value(), ecorePackage.getEString(), "value", null, 0, 1, NameConstant.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(siteVarsEClass, SiteVars.class, "SiteVars", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getSiteVars_Name(), ecorePackage.getEString(), "name", null, 0, 1, SiteVars.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(localRuleDeclEClass, LocalRuleDecl.class, "LocalRuleDecl", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(localPredicateDeclarationEClass, LocalPredicateDeclaration.class, "LocalPredicateDeclaration", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getLocalPredicateDeclaration_Type(), this.getPredicateType(), "type", null, 0, 1, LocalPredicateDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(brsDefinitionEClass, BRSDefinition.class, "BRSDefinition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(elementaryBigraphsEClass, ElementaryBigraphs.class, "ElementaryBigraphs", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(barrenEClass, Barren.class, "Barren", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(mergeEClass, Merge.class, "Merge", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getMerge_Sites(), ecorePackage.getEInt(), "sites", null, 0, 1, Merge.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(closureEClass, Closure.class, "Closure", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getClosure_Value(), ecorePackage.getEString(), "value", null, 0, -1, Closure.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(substitutionEClass, Substitution.class, "Substitution", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getSubstitution_From(), ecorePackage.getEString(), "from", null, 0, 1, Substitution.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getSubstitution_To(), ecorePackage.getEString(), "to", null, 0, -1, Substitution.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(siteEClass, Site.class, "Site", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getSite_Index(), ecorePackage.getEInt(), "index", null, 0, 1, Site.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(joinEClass, Join.class, "Join", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(bigraphVarReferenceEClass, BigraphVarReference.class, "BigraphVarReference", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getBigraphVarReference_Value(), this.getLocalVarDecl(), null, "value", null, 0, 1, BigraphVarReference.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(ruleVarReferenceEClass, RuleVarReference.class, "RuleVarReference", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getRuleVarReference_Value(), this.getLocalRuleDecl(), null, "value", null, 0, 1, RuleVarReference.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(predicateVarReferenceEClass, PredicateVarReference.class, "PredicateVarReference", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getPredicateVarReference_Value(), this.getLocalPredicateDeclaration(), null, "value", null, 0, 1, PredicateVarReference.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(brsVarReferenceEClass, BRSVarReference.class, "BRSVarReference", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getBRSVarReference_Value(), this.getBRSDefinition(), null, "value", null, 0, 1, BRSVarReference.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(bdslDocumentReferenceEClass, BDSLDocumentReference.class, "BDSLDocumentReference", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getBDSLDocumentReference_Value(), this.getBDSLDocument(), null, "value", null, 0, 1, BDSLDocumentReference.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(bigraphVarDeclOrReferenceEClass, BigraphVarDeclOrReference.class, "BigraphVarDeclOrReference", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(bigraphRuleDeclOrReferenceEClass, BigraphRuleDeclOrReference.class, "BigraphRuleDeclOrReference", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(bigraphPredDeclOrReferenceEClass, BigraphPredDeclOrReference.class, "BigraphPredDeclOrReference", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(bigraphBdslVarDeclOrReferenceEClass, BigraphBdslVarDeclOrReference.class, "BigraphBdslVarDeclOrReference", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(bigraphExpressionEClass, BigraphExpression.class, "BigraphExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(bdslReferenceSymbolEClass, BDSLReferenceSymbol.class, "BDSLReferenceSymbol", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(assignmentOrVariableDeclarationEClass, AssignmentOrVariableDeclaration.class, "AssignmentOrVariableDeclaration", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getAssignmentOrVariableDeclaration_Value(), this.getBDSLExpression(), null, "value", null, 0, 1, AssignmentOrVariableDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(bdslVariableDeclaration2EClass, BDSLVariableDeclaration2.class, "BDSLVariableDeclaration2", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getBDSLVariableDeclaration2_Variable(), this.getAbstractNamedSignatureElement(), null, "variable", null, 0, 1, BDSLVariableDeclaration2.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(bdslReferenceDeclarationEClass, BDSLReferenceDeclaration.class, "BDSLReferenceDeclaration", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getBDSLReferenceDeclaration_Target(), this.getAbstractNamedSignatureElement(), null, "target", null, 0, 1, BDSLReferenceDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(bdslExpressionEClass, BDSLExpression.class, "BDSLExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(bdslReactDefinitionEClass, BDSLReactDefinition.class, "BDSLReactDefinition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getBDSLReactDefinition_Redex(), ecorePackage.getEObject(), null, "redex", null, 0, 1, BDSLReactDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getBDSLReactDefinition_Reactum(), ecorePackage.getEObject(), null, "reactum", null, 0, 1, BDSLReactDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(bdslBrsDefinitionEClass, BDSLBrsDefinition.class, "BDSLBrsDefinition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getBDSLBrsDefinition_Brs(), this.getAssignableBigraphExpressionWithExplicitSig(), null, "brs", null, 0, 1, BDSLBrsDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getBDSLBrsDefinition_Agents(), this.getBigraphVarReference(), null, "agents", null, 0, -1, BDSLBrsDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getBDSLBrsDefinition_Rules(), this.getRuleVarReference(), null, "rules", null, 0, -1, BDSLBrsDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getBDSLBrsDefinition_Predicates(), this.getPredicateVarReference(), null, "predicates", null, 0, -1, BDSLBrsDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(bdslBigraphDefinitionEClass, BDSLBigraphDefinition.class, "BDSLBigraphDefinition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getBDSLBigraphDefinition_Definition(), this.getBigraphExpression(), null, "definition", null, 0, -1, BDSLBigraphDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(referenceClassSymbolEClass, ReferenceClassSymbol.class, "ReferenceClassSymbol", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getReferenceClassSymbol_Type(), this.getAbstractNamedSignatureElement(), null, "type", null, 0, 1, ReferenceClassSymbol.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(assignableBigraphExpressionEClass, AssignableBigraphExpression.class, "AssignableBigraphExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(assignableBigraphExpressionWithExplicitSigEClass, AssignableBigraphExpressionWithExplicitSig.class, "AssignableBigraphExpressionWithExplicitSig", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getAssignableBigraphExpressionWithExplicitSig_Sig(), this.getSignature(), null, "sig", null, 0, 1, AssignableBigraphExpressionWithExplicitSig.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(methodStatementsEClass, MethodStatements.class, "MethodStatements", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(bdslCallbackMethodsEClass, BdslCallbackMethods.class, "BdslCallbackMethods", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getBdslCallbackMethods_Brs(), this.getBRSVarReference(), null, "brs", null, 0, 1, BdslCallbackMethods.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getBdslCallbackMethods_Statements(), this.getCallbackStatements(), null, "statements", null, 0, -1, BdslCallbackMethods.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(brsStartedCallbackEClass, BRSStartedCallback.class, "BRSStartedCallback", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(brsFinishedCallbackEClass, BRSFinishedCallback.class, "BRSFinishedCallback", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(predicateMatchCallbackEClass, PredicateMatchCallback.class, "PredicateMatchCallback", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getPredicateMatchCallback_Params(), this.getPredicateVarReference(), null, "params", null, 0, -1, PredicateMatchCallback.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(ruleMatchCallbackEClass, RuleMatchCallback.class, "RuleMatchCallback", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getRuleMatchCallback_Params(), this.getRuleVarReference(), null, "params", null, 0, -1, RuleMatchCallback.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(printLnEClass, PrintLn.class, "PrintLn", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getPrintLn_Text(), this.getPrintableExpression(), null, "text", null, 0, 1, PrintLn.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getPrintLn_Mode(), this.getOutputModeModel(), "mode", null, 0, 1, PrintLn.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(printableExpressionEClass, PrintableExpression.class, "PrintableExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(exportMethodEClass, ExportMethod.class, "ExportMethod", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getExportMethod_Variable(), this.getReferenceClassSymbol(), null, "variable", null, 0, 1, ExportMethod.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getExportMethod_Format(), this.getExportFormat(), "format", null, 0, 1, ExportMethod.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getExportMethod_ResourcePath(), ecorePackage.getEString(), "resourcePath", null, 0, 1, ExportMethod.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(executeBRSMethodEClass, ExecuteBRSMethod.class, "ExecuteBRSMethod", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getExecuteBRSMethod_Brs(), this.getBRSVarReference(), null, "brs", null, 0, 1, ExecuteBRSMethod.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(abstractMainStatementsEClass, AbstractMainStatements.class, "AbstractMainStatements", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(callbackStatementsEClass, CallbackStatements.class, "CallbackStatements", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(udfOperationEClass, UDFOperation.class, "UDFOperation", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getUDFOperation_Expression(), this.getXExpression(), null, "expression", null, 0, -1, UDFOperation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(xExpressionEClass, XExpression.class, "XExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(udfArgumentTypesEClass, UDFArgumentTypes.class, "UDFArgumentTypes", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getUDFArgumentTypes_Name(), ecorePackage.getEString(), "name", null, 0, 1, UDFArgumentTypes.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(bdslBlockEClass, BDSLBlock.class, "BDSLBlock", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getBDSLBlock_Statements(), this.getAbstractMainStatements(), null, "statements", null, 0, -1, BDSLBlock.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(lvd2EClass, org.bigraphs.dsl.bDSL.LVD2.class, "LVD2", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(plusEClass, Plus.class, "Plus", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getPlus_Left(), this.getBigraphExpression(), null, "left", null, 0, 1, Plus.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getPlus_Operator(), this.getBinaryParallelOperator(), "operator", null, 0, 1, Plus.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getPlus_Right(), this.getBigraphExpression(), null, "right", null, 0, 1, Plus.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(multiEClass, Multi.class, "Multi", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getMulti_Left(), this.getBigraphExpression(), null, "left", null, 0, 1, Multi.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getMulti_Operator(), this.getBinaryNestingOperator(), "operator", null, 0, 1, Multi.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getMulti_Right(), this.getBigraphExpression(), null, "right", null, 0, 1, Multi.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(bdslAssignmentEClass, BDSLAssignment.class, "BDSLAssignment", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getBDSLAssignment_Left(), this.getBDSLExpression(), null, "left", null, 0, 1, BDSLAssignment.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getBDSLAssignment_Right(), this.getBDSLExpression(), null, "right", null, 0, 1, BDSLAssignment.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(stringLiteralEClass, StringLiteral.class, "StringLiteral", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getStringLiteral_Value(), ecorePackage.getEString(), "value", null, 0, 1, StringLiteral.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(loadMethodEClass, LoadMethod.class, "LoadMethod", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getLoadMethod_Format(), this.getLoadFormat(), "format", null, 0, 1, LoadMethod.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getLoadMethod_ResourcePath(), ecorePackage.getEString(), "resourcePath", null, 0, 1, LoadMethod.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(createRandomBigraphMethodEClass, CreateRandomBigraphMethod.class, "CreateRandomBigraphMethod", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getCreateRandomBigraphMethod_N(), ecorePackage.getEInt(), "n", null, 0, 1, CreateRandomBigraphMethod.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getCreateRandomBigraphMethod_T(), ecorePackage.getEInt(), "t", null, 0, 1, CreateRandomBigraphMethod.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getCreateRandomBigraphMethod_P(), ecorePackage.getEFloat(), "p", null, 0, 1, CreateRandomBigraphMethod.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(udfCallExpressionEClass, UdfCallExpression.class, "UdfCallExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getUdfCallExpression_Type(), theTypesPackage.getJvmType(), null, "type", null, 0, 1, UdfCallExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getUdfCallExpression_Params(), this.getUDFArgumentTypes(), null, "params", null, 0, -1, UdfCallExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    // Initialize enums and add enum literals
    initEEnum(variableCreationTypeEEnum, VariableCreationType.class, "VariableCreationType");
    addEEnumLiteral(variableCreationTypeEEnum, VariableCreationType.INSTANTIATED);
    addEEnumLiteral(variableCreationTypeEEnum, VariableCreationType.LOADED);

    initEEnum(binaryParallelOperatorEEnum, BinaryParallelOperator.class, "BinaryParallelOperator");
    addEEnumLiteral(binaryParallelOperatorEEnum, BinaryParallelOperator.UNSET);
    addEEnumLiteral(binaryParallelOperatorEEnum, BinaryParallelOperator.MERGE);
    addEEnumLiteral(binaryParallelOperatorEEnum, BinaryParallelOperator.PARALLEL);

    initEEnum(binaryNestingOperatorEEnum, BinaryNestingOperator.class, "BinaryNestingOperator");
    addEEnumLiteral(binaryNestingOperatorEEnum, BinaryNestingOperator.UNSET2);
    addEEnumLiteral(binaryNestingOperatorEEnum, BinaryNestingOperator.NESTING);
    addEEnumLiteral(binaryNestingOperatorEEnum, BinaryNestingOperator.COMPOSITION);

    initEEnum(controlTypeEEnum, ControlType.class, "ControlType");
    addEEnumLiteral(controlTypeEEnum, ControlType.ACTIVE);
    addEEnumLiteral(controlTypeEEnum, ControlType.ATOMIC);
    addEEnumLiteral(controlTypeEEnum, ControlType.PASSIVE);

    initEEnum(predicateTypeEEnum, PredicateType.class, "PredicateType");
    addEEnumLiteral(predicateTypeEEnum, PredicateType.PARTIAL);
    addEEnumLiteral(predicateTypeEEnum, PredicateType.ISO);

    initEEnum(exportFormatEEnum, ExportFormat.class, "ExportFormat");
    addEEnumLiteral(exportFormatEEnum, ExportFormat.XMI);
    addEEnumLiteral(exportFormatEEnum, ExportFormat.ECORE);
    addEEnumLiteral(exportFormatEEnum, ExportFormat.BIGRAPHER);
    addEEnumLiteral(exportFormatEEnum, ExportFormat.BIGMC);
    addEEnumLiteral(exportFormatEEnum, ExportFormat.PNG);

    initEEnum(loadFormatEEnum, LoadFormat.class, "LoadFormat");
    addEEnumLiteral(loadFormatEEnum, LoadFormat.XMI);
    addEEnumLiteral(loadFormatEEnum, LoadFormat.ECORE);

    initEEnum(dataSinkEEnum, DataSink.class, "DataSink");
    addEEnumLiteral(dataSinkEEnum, DataSink.STDOUT);
    addEEnumLiteral(dataSinkEEnum, DataSink.LOCAL_FILE);
    addEEnumLiteral(dataSinkEEnum, DataSink.DB);

    initEEnum(dataSourceEEnum, DataSource.class, "DataSource");
    addEEnumLiteral(dataSourceEEnum, DataSource.UNSPECIFIED);
    addEEnumLiteral(dataSourceEEnum, DataSource.LOCAL_FILE);
    addEEnumLiteral(dataSourceEEnum, DataSource.DB);
    addEEnumLiteral(dataSourceEEnum, DataSource.CLASSPATH);

    initEEnum(outputModeModelEEnum, OutputModeModel.class, "OutputModeModel");
    addEEnumLiteral(outputModeModelEEnum, OutputModeModel.INSTANCE_MODEL);
    addEEnumLiteral(outputModeModelEEnum, OutputModeModel.META_MODEL);

    // Create resource
    createResource(eNS_URI);
  }

} //BDSLPackageImpl
