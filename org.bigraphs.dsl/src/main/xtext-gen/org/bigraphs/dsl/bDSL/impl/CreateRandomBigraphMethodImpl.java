/**
 * generated by Xtext 2.32.0
 */
package org.bigraphs.dsl.bDSL.impl;

import org.bigraphs.dsl.bDSL.BDSLPackage;
import org.bigraphs.dsl.bDSL.CreateRandomBigraphMethod;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Create Random Bigraph Method</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.bigraphs.dsl.bDSL.impl.CreateRandomBigraphMethodImpl#getN <em>N</em>}</li>
 *   <li>{@link org.bigraphs.dsl.bDSL.impl.CreateRandomBigraphMethodImpl#getT <em>T</em>}</li>
 *   <li>{@link org.bigraphs.dsl.bDSL.impl.CreateRandomBigraphMethodImpl#getP <em>P</em>}</li>
 * </ul>
 *
 * @generated
 */
public class CreateRandomBigraphMethodImpl extends AssignableBigraphExpressionWithExplicitSigImpl implements CreateRandomBigraphMethod
{
  /**
   * The default value of the '{@link #getN() <em>N</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getN()
   * @generated
   * @ordered
   */
  protected static final int N_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getN() <em>N</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getN()
   * @generated
   * @ordered
   */
  protected int n = N_EDEFAULT;

  /**
   * The default value of the '{@link #getT() <em>T</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getT()
   * @generated
   * @ordered
   */
  protected static final int T_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getT() <em>T</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getT()
   * @generated
   * @ordered
   */
  protected int t = T_EDEFAULT;

  /**
   * The default value of the '{@link #getP() <em>P</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getP()
   * @generated
   * @ordered
   */
  protected static final float P_EDEFAULT = 0.0F;

  /**
   * The cached value of the '{@link #getP() <em>P</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getP()
   * @generated
   * @ordered
   */
  protected float p = P_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected CreateRandomBigraphMethodImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return BDSLPackage.Literals.CREATE_RANDOM_BIGRAPH_METHOD;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getN()
  {
    return n;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setN(int newN)
  {
    int oldN = n;
    n = newN;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, BDSLPackage.CREATE_RANDOM_BIGRAPH_METHOD__N, oldN, n));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getT()
  {
    return t;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setT(int newT)
  {
    int oldT = t;
    t = newT;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, BDSLPackage.CREATE_RANDOM_BIGRAPH_METHOD__T, oldT, t));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public float getP()
  {
    return p;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setP(float newP)
  {
    float oldP = p;
    p = newP;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, BDSLPackage.CREATE_RANDOM_BIGRAPH_METHOD__P, oldP, p));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case BDSLPackage.CREATE_RANDOM_BIGRAPH_METHOD__N:
        return getN();
      case BDSLPackage.CREATE_RANDOM_BIGRAPH_METHOD__T:
        return getT();
      case BDSLPackage.CREATE_RANDOM_BIGRAPH_METHOD__P:
        return getP();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case BDSLPackage.CREATE_RANDOM_BIGRAPH_METHOD__N:
        setN((Integer)newValue);
        return;
      case BDSLPackage.CREATE_RANDOM_BIGRAPH_METHOD__T:
        setT((Integer)newValue);
        return;
      case BDSLPackage.CREATE_RANDOM_BIGRAPH_METHOD__P:
        setP((Float)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case BDSLPackage.CREATE_RANDOM_BIGRAPH_METHOD__N:
        setN(N_EDEFAULT);
        return;
      case BDSLPackage.CREATE_RANDOM_BIGRAPH_METHOD__T:
        setT(T_EDEFAULT);
        return;
      case BDSLPackage.CREATE_RANDOM_BIGRAPH_METHOD__P:
        setP(P_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case BDSLPackage.CREATE_RANDOM_BIGRAPH_METHOD__N:
        return n != N_EDEFAULT;
      case BDSLPackage.CREATE_RANDOM_BIGRAPH_METHOD__T:
        return t != T_EDEFAULT;
      case BDSLPackage.CREATE_RANDOM_BIGRAPH_METHOD__P:
        return p != P_EDEFAULT;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (n: ");
    result.append(n);
    result.append(", t: ");
    result.append(t);
    result.append(", p: ");
    result.append(p);
    result.append(')');
    return result.toString();
  }

} //CreateRandomBigraphMethodImpl
