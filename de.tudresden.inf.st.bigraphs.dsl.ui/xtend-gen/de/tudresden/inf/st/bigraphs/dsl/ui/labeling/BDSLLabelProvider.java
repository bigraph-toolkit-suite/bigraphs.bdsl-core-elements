/**
 * generated by Xtext 2.15.0
 */
package de.tudresden.inf.st.bigraphs.dsl.ui.labeling;

import com.google.inject.Inject;
import de.tudresden.inf.st.bigraphs.dsl.bDSL.AbstractBigraphDeclaration;
import de.tudresden.inf.st.bigraphs.dsl.bDSL.BRSModel;
import de.tudresden.inf.st.bigraphs.dsl.bDSL.BigraphExpression;
import de.tudresden.inf.st.bigraphs.dsl.bDSL.BigraphVarReference;
import de.tudresden.inf.st.bigraphs.dsl.bDSL.ControlVariable;
import de.tudresden.inf.st.bigraphs.dsl.bDSL.LVD2;
import de.tudresden.inf.st.bigraphs.dsl.bDSL.LocalVarDecl;
import de.tudresden.inf.st.bigraphs.dsl.bDSL.MainElement;
import de.tudresden.inf.st.bigraphs.dsl.bDSL.NodeExpressionCall;
import de.tudresden.inf.st.bigraphs.dsl.bDSL.Plus;
import de.tudresden.inf.st.bigraphs.dsl.bDSL.PrintLn;
import de.tudresden.inf.st.bigraphs.dsl.bDSL.Signature;
import org.eclipse.emf.edit.ui.provider.AdapterFactoryLabelProvider;
import org.eclipse.xtext.ui.label.DefaultEObjectLabelProvider;

/**
 * Provides labels for EObjects.
 * 
 * See https://www.eclipse.org/Xtext/documentation/304_ide_concepts.html#label-provider
 */
@SuppressWarnings("all")
public class BDSLLabelProvider extends DefaultEObjectLabelProvider {
  @Inject
  public BDSLLabelProvider(final AdapterFactoryLabelProvider delegate) {
    super(delegate);
  }
  
  public String text(final Signature event) {
    String _name = event.getName();
    String _plus = (_name + " (");
    int _size = event.getControls().size();
    String _plus_1 = (_plus + Integer.valueOf(_size));
    return (_plus_1 + ")");
  }
  
  public String text(final ControlVariable event) {
    throw new Error("Unresolved compilation problems:"
      + "\nThe field value is not visible");
  }
  
  public String text(final LocalVarDecl event) {
    String _name = event.getName();
    String _plus = (_name + " (");
    String _name_1 = event.getSig().getName();
    String _plus_1 = (_plus + _name_1);
    String _plus_2 = (_plus_1 + ".");
    String _name_2 = event.getType().getName();
    String _plus_3 = (_plus_2 + _name_2);
    String _plus_4 = (_plus_3 + ")");
    return (_plus_4 + " : Bigraph");
  }
  
  public String text(final LVD2 event) {
    return "LVD2";
  }
  
  public String text(final AbstractBigraphDeclaration event) {
    if ((event instanceof BigraphVarReference)) {
      String _name = ((BigraphVarReference)event).getValue().getName();
      String _plus = (_name + " : ");
      String _simpleName = BigraphVarReference.class.getSimpleName();
      return (_plus + _simpleName);
    }
    if ((event instanceof NodeExpressionCall)) {
      return this.text(((NodeExpressionCall)event).getValue());
    }
    return "AbstractBigraphDeclaration";
  }
  
  public String text(final BigraphExpression event) {
    if ((event instanceof Plus)) {
      String _simpleName = Plus.class.getSimpleName();
      return (_simpleName + " : BigraphExpression");
    }
    return "BigraphExpression";
  }
  
  public String image(final BRSModel ele) {
    return "bigraph-pure-logo.png";
  }
  
  public String text(final MainElement event) {
    return "main";
  }
  
  public String text(final PrintLn event) {
    String _simpleName = event.getClass().getSimpleName();
    return (_simpleName + "(String)");
  }
}
