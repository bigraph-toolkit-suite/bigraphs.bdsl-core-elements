/**
 * generated by Xtext 2.21.0
 */
package de.tudresden.inf.st.bigraphs.dsl.bDSL.impl;

import de.tudresden.inf.st.bigraphs.dsl.bDSL.BDSLPackage;
import de.tudresden.inf.st.bigraphs.dsl.bDSL.BigraphExpression;
import de.tudresden.inf.st.bigraphs.dsl.bDSL.LocalRuleDecl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Local Rule Decl</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link de.tudresden.inf.st.bigraphs.dsl.bDSL.impl.LocalRuleDeclImpl#getRedex <em>Redex</em>}</li>
 *   <li>{@link de.tudresden.inf.st.bigraphs.dsl.bDSL.impl.LocalRuleDeclImpl#getReactum <em>Reactum</em>}</li>
 * </ul>
 *
 * @generated
 */
public class LocalRuleDeclImpl extends AbstractElementImpl implements LocalRuleDecl
{
  /**
   * The cached value of the '{@link #getRedex() <em>Redex</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRedex()
   * @generated
   * @ordered
   */
  protected BigraphExpression redex;

  /**
   * The cached value of the '{@link #getReactum() <em>Reactum</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getReactum()
   * @generated
   * @ordered
   */
  protected BigraphExpression reactum;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected LocalRuleDeclImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return BDSLPackage.Literals.LOCAL_RULE_DECL;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public BigraphExpression getRedex()
  {
    return redex;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetRedex(BigraphExpression newRedex, NotificationChain msgs)
  {
    BigraphExpression oldRedex = redex;
    redex = newRedex;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, BDSLPackage.LOCAL_RULE_DECL__REDEX, oldRedex, newRedex);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setRedex(BigraphExpression newRedex)
  {
    if (newRedex != redex)
    {
      NotificationChain msgs = null;
      if (redex != null)
        msgs = ((InternalEObject)redex).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - BDSLPackage.LOCAL_RULE_DECL__REDEX, null, msgs);
      if (newRedex != null)
        msgs = ((InternalEObject)newRedex).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - BDSLPackage.LOCAL_RULE_DECL__REDEX, null, msgs);
      msgs = basicSetRedex(newRedex, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, BDSLPackage.LOCAL_RULE_DECL__REDEX, newRedex, newRedex));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public BigraphExpression getReactum()
  {
    return reactum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetReactum(BigraphExpression newReactum, NotificationChain msgs)
  {
    BigraphExpression oldReactum = reactum;
    reactum = newReactum;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, BDSLPackage.LOCAL_RULE_DECL__REACTUM, oldReactum, newReactum);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setReactum(BigraphExpression newReactum)
  {
    if (newReactum != reactum)
    {
      NotificationChain msgs = null;
      if (reactum != null)
        msgs = ((InternalEObject)reactum).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - BDSLPackage.LOCAL_RULE_DECL__REACTUM, null, msgs);
      if (newReactum != null)
        msgs = ((InternalEObject)newReactum).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - BDSLPackage.LOCAL_RULE_DECL__REACTUM, null, msgs);
      msgs = basicSetReactum(newReactum, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, BDSLPackage.LOCAL_RULE_DECL__REACTUM, newReactum, newReactum));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case BDSLPackage.LOCAL_RULE_DECL__REDEX:
        return basicSetRedex(null, msgs);
      case BDSLPackage.LOCAL_RULE_DECL__REACTUM:
        return basicSetReactum(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case BDSLPackage.LOCAL_RULE_DECL__REDEX:
        return getRedex();
      case BDSLPackage.LOCAL_RULE_DECL__REACTUM:
        return getReactum();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case BDSLPackage.LOCAL_RULE_DECL__REDEX:
        setRedex((BigraphExpression)newValue);
        return;
      case BDSLPackage.LOCAL_RULE_DECL__REACTUM:
        setReactum((BigraphExpression)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case BDSLPackage.LOCAL_RULE_DECL__REDEX:
        setRedex((BigraphExpression)null);
        return;
      case BDSLPackage.LOCAL_RULE_DECL__REACTUM:
        setReactum((BigraphExpression)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case BDSLPackage.LOCAL_RULE_DECL__REDEX:
        return redex != null;
      case BDSLPackage.LOCAL_RULE_DECL__REACTUM:
        return reactum != null;
    }
    return super.eIsSet(featureID);
  }

} //LocalRuleDeclImpl
