/**
 * generated by Xtext 2.21.0
 */
package de.tudresden.inf.st.bigraphs.dsl.bDSL.impl;

import de.tudresden.inf.st.bigraphs.dsl.bDSL.BDSLPackage;
import de.tudresden.inf.st.bigraphs.dsl.bDSL.BigraphExpression;
import de.tudresden.inf.st.bigraphs.dsl.bDSL.ControlVariable;
import de.tudresden.inf.st.bigraphs.dsl.bDSL.LocalVarDecl;
import de.tudresden.inf.st.bigraphs.dsl.bDSL.Signature;
import de.tudresden.inf.st.bigraphs.dsl.bDSL.SiteVars;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Local Var Decl</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link de.tudresden.inf.st.bigraphs.dsl.bDSL.impl.LocalVarDeclImpl#getName <em>Name</em>}</li>
 *   <li>{@link de.tudresden.inf.st.bigraphs.dsl.bDSL.impl.LocalVarDeclImpl#getType <em>Type</em>}</li>
 *   <li>{@link de.tudresden.inf.st.bigraphs.dsl.bDSL.impl.LocalVarDeclImpl#getDefinition <em>Definition</em>}</li>
 *   <li>{@link de.tudresden.inf.st.bigraphs.dsl.bDSL.impl.LocalVarDeclImpl#getSig <em>Sig</em>}</li>
 *   <li>{@link de.tudresden.inf.st.bigraphs.dsl.bDSL.impl.LocalVarDeclImpl#getSiteArgs <em>Site Args</em>}</li>
 * </ul>
 *
 * @generated
 */
public class LocalVarDeclImpl extends AbstractElementImpl implements LocalVarDecl
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getType() <em>Type</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getType()
   * @generated
   * @ordered
   */
  protected ControlVariable type;

  /**
   * The cached value of the '{@link #getDefinition() <em>Definition</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDefinition()
   * @generated
   * @ordered
   */
  protected EList<BigraphExpression> definition;

  /**
   * The cached value of the '{@link #getSig() <em>Sig</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSig()
   * @generated
   * @ordered
   */
  protected Signature sig;

  /**
   * The cached value of the '{@link #getSiteArgs() <em>Site Args</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSiteArgs()
   * @generated
   * @ordered
   */
  protected EList<SiteVars> siteArgs;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected LocalVarDeclImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return BDSLPackage.Literals.LOCAL_VAR_DECL;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, BDSLPackage.LOCAL_VAR_DECL__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ControlVariable getType()
  {
    if (type != null && type.eIsProxy())
    {
      InternalEObject oldType = (InternalEObject)type;
      type = (ControlVariable)eResolveProxy(oldType);
      if (type != oldType)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, BDSLPackage.LOCAL_VAR_DECL__TYPE, oldType, type));
      }
    }
    return type;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ControlVariable basicGetType()
  {
    return type;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setType(ControlVariable newType)
  {
    ControlVariable oldType = type;
    type = newType;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, BDSLPackage.LOCAL_VAR_DECL__TYPE, oldType, type));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<BigraphExpression> getDefinition()
  {
    if (definition == null)
    {
      definition = new EObjectContainmentEList<BigraphExpression>(BigraphExpression.class, this, BDSLPackage.LOCAL_VAR_DECL__DEFINITION);
    }
    return definition;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Signature getSig()
  {
    if (sig != null && sig.eIsProxy())
    {
      InternalEObject oldSig = (InternalEObject)sig;
      sig = (Signature)eResolveProxy(oldSig);
      if (sig != oldSig)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, BDSLPackage.LOCAL_VAR_DECL__SIG, oldSig, sig));
      }
    }
    return sig;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Signature basicGetSig()
  {
    return sig;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSig(Signature newSig)
  {
    Signature oldSig = sig;
    sig = newSig;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, BDSLPackage.LOCAL_VAR_DECL__SIG, oldSig, sig));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<SiteVars> getSiteArgs()
  {
    if (siteArgs == null)
    {
      siteArgs = new EObjectContainmentEList<SiteVars>(SiteVars.class, this, BDSLPackage.LOCAL_VAR_DECL__SITE_ARGS);
    }
    return siteArgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case BDSLPackage.LOCAL_VAR_DECL__DEFINITION:
        return ((InternalEList<?>)getDefinition()).basicRemove(otherEnd, msgs);
      case BDSLPackage.LOCAL_VAR_DECL__SITE_ARGS:
        return ((InternalEList<?>)getSiteArgs()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case BDSLPackage.LOCAL_VAR_DECL__NAME:
        return getName();
      case BDSLPackage.LOCAL_VAR_DECL__TYPE:
        if (resolve) return getType();
        return basicGetType();
      case BDSLPackage.LOCAL_VAR_DECL__DEFINITION:
        return getDefinition();
      case BDSLPackage.LOCAL_VAR_DECL__SIG:
        if (resolve) return getSig();
        return basicGetSig();
      case BDSLPackage.LOCAL_VAR_DECL__SITE_ARGS:
        return getSiteArgs();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case BDSLPackage.LOCAL_VAR_DECL__NAME:
        setName((String)newValue);
        return;
      case BDSLPackage.LOCAL_VAR_DECL__TYPE:
        setType((ControlVariable)newValue);
        return;
      case BDSLPackage.LOCAL_VAR_DECL__DEFINITION:
        getDefinition().clear();
        getDefinition().addAll((Collection<? extends BigraphExpression>)newValue);
        return;
      case BDSLPackage.LOCAL_VAR_DECL__SIG:
        setSig((Signature)newValue);
        return;
      case BDSLPackage.LOCAL_VAR_DECL__SITE_ARGS:
        getSiteArgs().clear();
        getSiteArgs().addAll((Collection<? extends SiteVars>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case BDSLPackage.LOCAL_VAR_DECL__NAME:
        setName(NAME_EDEFAULT);
        return;
      case BDSLPackage.LOCAL_VAR_DECL__TYPE:
        setType((ControlVariable)null);
        return;
      case BDSLPackage.LOCAL_VAR_DECL__DEFINITION:
        getDefinition().clear();
        return;
      case BDSLPackage.LOCAL_VAR_DECL__SIG:
        setSig((Signature)null);
        return;
      case BDSLPackage.LOCAL_VAR_DECL__SITE_ARGS:
        getSiteArgs().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case BDSLPackage.LOCAL_VAR_DECL__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case BDSLPackage.LOCAL_VAR_DECL__TYPE:
        return type != null;
      case BDSLPackage.LOCAL_VAR_DECL__DEFINITION:
        return definition != null && !definition.isEmpty();
      case BDSLPackage.LOCAL_VAR_DECL__SIG:
        return sig != null;
      case BDSLPackage.LOCAL_VAR_DECL__SITE_ARGS:
        return siteArgs != null && !siteArgs.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(')');
    return result.toString();
  }

} //LocalVarDeclImpl
