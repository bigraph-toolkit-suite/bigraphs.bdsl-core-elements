/*
 * generated by Xtext 2.21.0
 */
grammar InternalBDSL;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package de.tudresden.inf.st.bigraphs.dsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package de.tudresden.inf.st.bigraphs.dsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import de.tudresden.inf.st.bigraphs.dsl.services.BDSLGrammarAccess;

}

@parser::members {

 	private BDSLGrammarAccess grammarAccess;

    public InternalBDSLParser(TokenStream input, BDSLGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "BRSModel";
   	}

   	@Override
   	protected BDSLGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleBRSModel
entryRuleBRSModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBRSModelRule()); }
	iv_ruleBRSModel=ruleBRSModel
	{ $current=$iv_ruleBRSModel.current; }
	EOF;

// Rule BRSModel
ruleBRSModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getBRSModelAccess().getSignatureSignatureParserRuleCall_0_0());
				}
				lv_signature_0_0=ruleSignature
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBRSModelRule());
					}
					add(
						$current,
						"signature",
						lv_signature_0_0,
						"de.tudresden.inf.st.bigraphs.dsl.BDSL.Signature");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{ 
				  getUnorderedGroupHelper().enter(grammarAccess.getBRSModelAccess().getUnorderedGroup_1());
				}
				(
					(
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getBRSModelAccess().getUnorderedGroup_1(), 0)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getBRSModelAccess().getUnorderedGroup_1(), 0);
					}
								({true}?=>((
									{
										newCompositeNode(grammarAccess.getBRSModelAccess().getStatementsAbstractElementParserRuleCall_1_0_0());
									}
									lv_statements_2_0=ruleAbstractElement
									{
										if ($current==null) {
											$current = createModelElementForParent(grammarAccess.getBRSModelRule());
										}
										add(
											$current,
											"statements",
											lv_statements_2_0,
											"de.tudresden.inf.st.bigraphs.dsl.BDSL.AbstractElement");
										afterParserOrEnumRuleCall();
									}
								)
								))+
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getBRSModelAccess().getUnorderedGroup_1());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getBRSModelAccess().getUnorderedGroup_1(), 1)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getBRSModelAccess().getUnorderedGroup_1(), 1);
					}
								({true}?=>((
									{
										newCompositeNode(grammarAccess.getBRSModelAccess().getMainMainElementParserRuleCall_1_1_0());
									}
									lv_main_3_0=ruleMainElement
									{
										if ($current==null) {
											$current = createModelElementForParent(grammarAccess.getBRSModelRule());
										}
										set(
											$current,
											"main",
											lv_main_3_0,
											"de.tudresden.inf.st.bigraphs.dsl.BDSL.MainElement");
										afterParserOrEnumRuleCall();
									}
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getBRSModelAccess().getUnorderedGroup_1());
					}
				)
			)
					)+
					{getUnorderedGroupHelper().canLeave(grammarAccess.getBRSModelAccess().getUnorderedGroup_1())}?
				)
			)
				{ 
				  getUnorderedGroupHelper().leave(grammarAccess.getBRSModelAccess().getUnorderedGroup_1());
				}
		)
	)
;

// Entry rule entryRuleFQN
entryRuleFQN returns [String current=null]:
	{ newCompositeNode(grammarAccess.getFQNRule()); }
	iv_ruleFQN=ruleFQN
	{ $current=$iv_ruleFQN.current.getText(); }
	EOF;

// Rule FQN
ruleFQN returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getFQNAccess().getIDTerminalRuleCall_0());
		}
		(
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getFQNAccess().getFullStopKeyword_1_0());
			}
			this_ID_2=RULE_ID
			{
				$current.merge(this_ID_2);
			}
			{
				newLeafNode(this_ID_2, grammarAccess.getFQNAccess().getIDTerminalRuleCall_1_1());
			}
		)*
	)
;

// Entry rule entryRuleFqnWithWildCard
entryRuleFqnWithWildCard returns [String current=null]:
	{ newCompositeNode(grammarAccess.getFqnWithWildCardRule()); }
	iv_ruleFqnWithWildCard=ruleFqnWithWildCard
	{ $current=$iv_ruleFqnWithWildCard.current.getText(); }
	EOF;

// Rule FqnWithWildCard
ruleFqnWithWildCard returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getFqnWithWildCardAccess().getFQNParserRuleCall_0());
		}
		this_FQN_0=ruleFQN
		{
			$current.merge(this_FQN_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		(
			kw='.*'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getFqnWithWildCardAccess().getFullStopAsteriskKeyword_1());
			}
		)?
	)
;

// Entry rule entryRuleBigraphVarReferenceID
entryRuleBigraphVarReferenceID returns [String current=null]@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}:
	{ newCompositeNode(grammarAccess.getBigraphVarReferenceIDRule()); }
	iv_ruleBigraphVarReferenceID=ruleBigraphVarReferenceID
	{ $current=$iv_ruleBigraphVarReferenceID.current.getText(); }
	EOF;
finally {
	myHiddenTokenState.restore();
}

// Rule BigraphVarReferenceID
ruleBigraphVarReferenceID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
@after {
	leaveRule();
}:
	(
		kw='$'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getBigraphVarReferenceIDAccess().getDollarSignKeyword_0());
		}
		{
			newCompositeNode(grammarAccess.getBigraphVarReferenceIDAccess().getFQNParserRuleCall_1());
		}
		this_FQN_1=ruleFQN
		{
			$current.merge(this_FQN_1);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;
finally {
	myHiddenTokenState.restore();
}

// Entry rule entryRuleEInt
entryRuleEInt returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEIntRule()); }
	iv_ruleEInt=ruleEInt
	{ $current=$iv_ruleEInt.current.getText(); }
	EOF;

// Rule EInt
ruleEInt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='-'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getEIntAccess().getHyphenMinusKeyword_0());
			}
		)?
		this_INT_1=RULE_INT
		{
			$current.merge(this_INT_1);
		}
		{
			newLeafNode(this_INT_1, grammarAccess.getEIntAccess().getINTTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleEString
entryRuleEString returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEStringRule()); }
	iv_ruleEString=ruleEString
	{ $current=$iv_ruleEString.current.getText(); }
	EOF;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_STRING_0=RULE_STRING
		{
			$current.merge(this_STRING_0);
		}
		{
			newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0());
		}
		    |
		this_ID_1=RULE_ID
		{
			$current.merge(this_ID_1);
		}
		{
			newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleAbstractElement
entryRuleAbstractElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAbstractElementRule()); }
	iv_ruleAbstractElement=ruleAbstractElement
	{ $current=$iv_ruleAbstractElement.current; }
	EOF;

// Rule AbstractElement
ruleAbstractElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getAbstractElementAccess().getLocalVarDeclParserRuleCall());
	}
	this_LocalVarDecl_0=ruleLocalVarDecl
	{
		$current = $this_LocalVarDecl_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleMainElement
entryRuleMainElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMainElementRule()); }
	iv_ruleMainElement=ruleMainElement
	{ $current=$iv_ruleMainElement.current; }
	EOF;

// Rule MainElement
ruleMainElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='main'
		{
			newLeafNode(otherlv_0, grammarAccess.getMainElementAccess().getMainKeyword_0());
		}
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getMainElementAccess().getEqualsSignKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getMainElementAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getMainElementAccess().getMainLiteralAction_3(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getMainElementAccess().getValueMainDeclarationParserRuleCall_4_0());
				}
				lv_value_4_0=ruleMainDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMainElementRule());
					}
					add(
						$current,
						"value",
						lv_value_4_0,
						"de.tudresden.inf.st.bigraphs.dsl.BDSL.MainDeclaration");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getMainElementAccess().getRightCurlyBracketKeyword_5());
		}
		otherlv_6=';'
		{
			newLeafNode(otherlv_6, grammarAccess.getMainElementAccess().getSemicolonKeyword_6());
		}
	)
;

// Entry rule entryRuleSignature
entryRuleSignature returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSignatureRule()); }
	iv_ruleSignature=ruleSignature
	{ $current=$iv_ruleSignature.current; }
	EOF;

// Rule Signature
ruleSignature returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getSignatureAccess().getSignatureAction_0(),
					$current);
			}
		)
		otherlv_1='signature'
		{
			newLeafNode(otherlv_1, grammarAccess.getSignatureAccess().getSignatureKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getSignatureAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSignatureRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_3='{'
			{
				newLeafNode(otherlv_3, grammarAccess.getSignatureAccess().getLeftCurlyBracketKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSignatureAccess().getControlsControlDefParserRuleCall_3_1_0());
					}
					lv_controls_4_0=ruleControlDef
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSignatureRule());
						}
						add(
							$current,
							"controls",
							lv_controls_4_0,
							"de.tudresden.inf.st.bigraphs.dsl.BDSL.ControlDef");
						afterParserOrEnumRuleCall();
					}
				)
			)+
			otherlv_5='}'
			{
				newLeafNode(otherlv_5, grammarAccess.getSignatureAccess().getRightCurlyBracketKeyword_3_2());
			}
		)?
	)
;

// Entry rule entryRuleControlDef
entryRuleControlDef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getControlDefRule()); }
	iv_ruleControlDef=ruleControlDef
	{ $current=$iv_ruleControlDef.current; }
	EOF;

// Rule ControlDef
ruleControlDef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getControlDefAccess().getControlVariableAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getControlDefAccess().getTypeControlTypeEnumRuleCall_1_0());
				}
				lv_type_1_0=ruleControlType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getControlDefRule());
					}
					set(
						$current,
						"type",
						lv_type_1_0,
						"de.tudresden.inf.st.bigraphs.dsl.BDSL.ControlType");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_2='ctrl'
		{
			newLeafNode(otherlv_2, grammarAccess.getControlDefAccess().getCtrlKeyword_2());
		}
		(
			(
				lv_name_3_0=RULE_ID
				{
					newLeafNode(lv_name_3_0, grammarAccess.getControlDefAccess().getNameIDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getControlDefRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_3_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_4='arity'
		{
			newLeafNode(otherlv_4, grammarAccess.getControlDefAccess().getArityKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getControlDefAccess().getArityArityValueParserRuleCall_5_0());
				}
				lv_arity_5_0=ruleArityValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getControlDefRule());
					}
					set(
						$current,
						"arity",
						lv_arity_5_0,
						"de.tudresden.inf.st.bigraphs.dsl.BDSL.ArityValue");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6=';'
		{
			newLeafNode(otherlv_6, grammarAccess.getControlDefAccess().getSemicolonKeyword_6());
		}
	)
;

// Entry rule entryRuleArityValue
entryRuleArityValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArityValueRule()); }
	iv_ruleArityValue=ruleArityValue
	{ $current=$iv_ruleArityValue.current; }
	EOF;

// Rule ArityValue
ruleArityValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getArityValueAccess().getValueEIntParserRuleCall_0());
			}
			lv_value_0_0=ruleEInt
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getArityValueRule());
				}
				set(
					$current,
					"value",
					lv_value_0_0,
					"de.tudresden.inf.st.bigraphs.dsl.BDSL.EInt");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleNameConstant
entryRuleNameConstant returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNameConstantRule()); }
	iv_ruleNameConstant=ruleNameConstant
	{ $current=$iv_ruleNameConstant.current; }
	EOF;

// Rule NameConstant
ruleNameConstant returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getNameConstantAccess().getValueEStringParserRuleCall_0());
			}
			lv_value_0_0=ruleEString
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getNameConstantRule());
				}
				set(
					$current,
					"value",
					lv_value_0_0,
					"de.tudresden.inf.st.bigraphs.dsl.BDSL.EString");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleLinkNames
entryRuleLinkNames returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLinkNamesRule()); }
	iv_ruleLinkNames=ruleLinkNames
	{ $current=$iv_ruleLinkNames.current; }
	EOF;

// Rule LinkNames
ruleLinkNames returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getLinkNamesAccess().getNameConstantParserRuleCall_0());
		}
		this_NameConstant_0=ruleNameConstant
		{
			$current = $this_NameConstant_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			{
				newCompositeNode(grammarAccess.getLinkNamesAccess().getNameConstantParserRuleCall_1_0());
			}
			this_NameConstant_1=ruleNameConstant
			{
				$current = $this_NameConstant_1.current;
				afterParserOrEnumRuleCall();
			}
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getLinkNamesAccess().getCommaKeyword_1_1());
			}
		)
	)
;

// Entry rule entryRuleSiteVars
entryRuleSiteVars returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSiteVarsRule()); }
	iv_ruleSiteVars=ruleSiteVars
	{ $current=$iv_ruleSiteVars.current; }
	EOF;

// Rule SiteVars
ruleSiteVars returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_ID
			{
				newLeafNode(lv_name_0_0, grammarAccess.getSiteVarsAccess().getNameIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getSiteVarsRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"org.eclipse.xtext.common.Terminals.ID");
			}
		)
	)
;

// Entry rule entryRuleLVD2
entryRuleLVD2 returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLVD2Rule()); }
	iv_ruleLVD2=ruleLVD2
	{ $current=$iv_ruleLVD2.current; }
	EOF;

// Rule LVD2
ruleLVD2 returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getLVD2Access().getLocalVarDeclAction_0(),
					$current);
			}
		)
		otherlv_1='val'
		{
			newLeafNode(otherlv_1, grammarAccess.getLVD2Access().getValKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getLVD2Access().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLVD2Rule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3=':'
		{
			newLeafNode(otherlv_3, grammarAccess.getLVD2Access().getColonKeyword_3());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLVD2Rule());
					}
				}
				{
					newCompositeNode(grammarAccess.getLVD2Access().getTypeControlVariableCrossReference_4_0());
				}
				ruleFQN
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='='
		{
			newLeafNode(otherlv_5, grammarAccess.getLVD2Access().getEqualsSignKeyword_5());
		}
		otherlv_6='{'
		{
			newLeafNode(otherlv_6, grammarAccess.getLVD2Access().getLeftCurlyBracketKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLVD2Access().getDefinitionBigraphExpressionParserRuleCall_7_0());
				}
				lv_definition_7_0=ruleBigraphExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLVD2Rule());
					}
					add(
						$current,
						"definition",
						lv_definition_7_0,
						"de.tudresden.inf.st.bigraphs.dsl.BDSL.BigraphExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getLVD2Access().getRightCurlyBracketKeyword_8());
		}
	)
;

// Entry rule entryRuleLocalVarDecl
entryRuleLocalVarDecl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLocalVarDeclRule()); }
	iv_ruleLocalVarDecl=ruleLocalVarDecl
	{ $current=$iv_ruleLocalVarDecl.current; }
	EOF;

// Rule LocalVarDecl
ruleLocalVarDecl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='val'
		{
			newLeafNode(otherlv_0, grammarAccess.getLocalVarDeclAccess().getValKeyword_0());
		}
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getLocalVarDeclAccess().getLocalVarDeclAction_1(),
					$current);
			}
		)
		(
			(
				(
					lv_name_2_0=RULE_ID
					{
						newLeafNode(lv_name_2_0, grammarAccess.getLocalVarDeclAccess().getNameIDTerminalRuleCall_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getLocalVarDeclRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_2_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			(
				otherlv_3='('
				{
					newLeafNode(otherlv_3, grammarAccess.getLocalVarDeclAccess().getLeftParenthesisKeyword_2_1_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getLocalVarDeclRule());
							}
						}
						otherlv_4=RULE_ID
						{
							newLeafNode(otherlv_4, grammarAccess.getLocalVarDeclAccess().getSigSignatureCrossReference_2_1_1_0());
						}
					)
				)
				otherlv_5=')'
				{
					newLeafNode(otherlv_5, grammarAccess.getLocalVarDeclAccess().getRightParenthesisKeyword_2_1_2());
				}
			)?
			(
				(
					otherlv_6='['
					{
						newLeafNode(otherlv_6, grammarAccess.getLocalVarDeclAccess().getLeftSquareBracketKeyword_2_2_0_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getLocalVarDeclAccess().getSiteArgsSiteVarsParserRuleCall_2_2_0_1_0());
							}
							lv_siteArgs_7_0=ruleSiteVars
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getLocalVarDeclRule());
								}
								add(
									$current,
									"siteArgs",
									lv_siteArgs_7_0,
									"de.tudresden.inf.st.bigraphs.dsl.BDSL.SiteVars");
								afterParserOrEnumRuleCall();
							}
						)
					)
					(
						otherlv_8=','
						{
							newLeafNode(otherlv_8, grammarAccess.getLocalVarDeclAccess().getCommaKeyword_2_2_0_2_0());
						}
						(
							(
								{
									newCompositeNode(grammarAccess.getLocalVarDeclAccess().getSiteArgsSiteVarsParserRuleCall_2_2_0_2_1_0());
								}
								lv_siteArgs_9_0=ruleSiteVars
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getLocalVarDeclRule());
									}
									add(
										$current,
										"siteArgs",
										lv_siteArgs_9_0,
										"de.tudresden.inf.st.bigraphs.dsl.BDSL.SiteVars");
									afterParserOrEnumRuleCall();
								}
							)
						)
					)*
					otherlv_10=']'
					{
						newLeafNode(otherlv_10, grammarAccess.getLocalVarDeclAccess().getRightSquareBracketKeyword_2_2_0_3());
					}
				)?
				otherlv_11=':'
				{
					newLeafNode(otherlv_11, grammarAccess.getLocalVarDeclAccess().getColonKeyword_2_2_1());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getLocalVarDeclRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getLocalVarDeclAccess().getTypeControlVariableCrossReference_2_2_2_0());
						}
						ruleFQN
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)?
			(
				otherlv_13='='
				{
					newLeafNode(otherlv_13, grammarAccess.getLocalVarDeclAccess().getEqualsSignKeyword_2_3_0());
				}
				otherlv_14='{'
				{
					newLeafNode(otherlv_14, grammarAccess.getLocalVarDeclAccess().getLeftCurlyBracketKeyword_2_3_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getLocalVarDeclAccess().getDefinitionBigraphExpressionParserRuleCall_2_3_2_0());
						}
						lv_definition_15_0=ruleBigraphExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getLocalVarDeclRule());
							}
							add(
								$current,
								"definition",
								lv_definition_15_0,
								"de.tudresden.inf.st.bigraphs.dsl.BDSL.BigraphExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)*
				otherlv_16='}'
				{
					newLeafNode(otherlv_16, grammarAccess.getLocalVarDeclAccess().getRightCurlyBracketKeyword_2_3_3());
				}
			)
		)
	)
;

// Entry rule entryRuleBigraphVarReference
entryRuleBigraphVarReference returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBigraphVarReferenceRule()); }
	iv_ruleBigraphVarReference=ruleBigraphVarReference
	{ $current=$iv_ruleBigraphVarReference.current; }
	EOF;

// Rule BigraphVarReference
ruleBigraphVarReference returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getBigraphVarReferenceRule());
				}
			}
			{
				newCompositeNode(grammarAccess.getBigraphVarReferenceAccess().getValueLocalVarDeclCrossReference_0());
			}
			ruleBigraphVarReferenceID
			{
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleAbstractBigraphDeclaration
entryRuleAbstractBigraphDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAbstractBigraphDeclarationRule()); }
	iv_ruleAbstractBigraphDeclaration=ruleAbstractBigraphDeclaration
	{ $current=$iv_ruleAbstractBigraphDeclaration.current; }
	EOF;

// Rule AbstractBigraphDeclaration
ruleAbstractBigraphDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAbstractBigraphDeclarationAccess().getBigraphVarReferenceParserRuleCall_0());
		}
		this_BigraphVarReference_0=ruleBigraphVarReference
		{
			$current = $this_BigraphVarReference_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAbstractBigraphDeclarationAccess().getNodeExpressionCallParserRuleCall_1());
		}
		this_NodeExpressionCall_1=ruleNodeExpressionCall
		{
			$current = $this_NodeExpressionCall_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAbstractBigraphDeclarationAccess().getLVD2ParserRuleCall_2());
		}
		this_LVD2_2=ruleLVD2
		{
			$current = $this_LVD2_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleNodeExpressionCall
entryRuleNodeExpressionCall returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNodeExpressionCallRule()); }
	iv_ruleNodeExpressionCall=ruleNodeExpressionCall
	{ $current=$iv_ruleNodeExpressionCall.current; }
	EOF;

// Rule NodeExpressionCall
ruleNodeExpressionCall returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getNodeExpressionCallRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getNodeExpressionCallAccess().getValueControlVariableCrossReference_0_0());
				}
				ruleFQN
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1='['
			{
				newLeafNode(otherlv_1, grammarAccess.getNodeExpressionCallAccess().getLeftSquareBracketKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getNodeExpressionCallAccess().getLinksLinkNamesParserRuleCall_1_1_0());
					}
					lv_links_2_0=ruleLinkNames
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNodeExpressionCallRule());
						}
						add(
							$current,
							"links",
							lv_links_2_0,
							"de.tudresden.inf.st.bigraphs.dsl.BDSL.LinkNames");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_3=']'
			{
				newLeafNode(otherlv_3, grammarAccess.getNodeExpressionCallAccess().getRightSquareBracketKeyword_1_2());
			}
		)?
	)
;

// Entry rule entryRuleBigraphExpression
entryRuleBigraphExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBigraphExpressionRule()); }
	iv_ruleBigraphExpression=ruleBigraphExpression
	{ $current=$iv_ruleBigraphExpression.current; }
	EOF;

// Rule BigraphExpression
ruleBigraphExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getBigraphExpressionAccess().getAdditionParserRuleCall());
	}
	this_Addition_0=ruleAddition
	{
		$current = $this_Addition_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleAddition
entryRuleAddition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAdditionRule()); }
	iv_ruleAddition=ruleAddition
	{ $current=$iv_ruleAddition.current; }
	EOF;

// Rule Addition
ruleAddition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAdditionAccess().getMultiplicationParserRuleCall_0());
		}
		this_Multiplication_0=ruleMultiplication
		{
			$current = $this_Multiplication_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getAdditionAccess().getPlusLeftAction_1_0_0(),
							$current);
					}
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getAdditionAccess().getOperatorBinaryParallelOperatorEnumRuleCall_1_0_1_0());
						}
						lv_operator_2_0=ruleBinaryParallelOperator
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getAdditionRule());
							}
							set(
								$current,
								"operator",
								lv_operator_2_0,
								"de.tudresden.inf.st.bigraphs.dsl.BDSL.BinaryParallelOperator");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getAdditionAccess().getRightMultiplicationParserRuleCall_1_1_0());
					}
					lv_right_3_0=ruleMultiplication
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAdditionRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"de.tudresden.inf.st.bigraphs.dsl.BDSL.Multiplication");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleMultiplication
entryRuleMultiplication returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMultiplicationRule()); }
	iv_ruleMultiplication=ruleMultiplication
	{ $current=$iv_ruleMultiplication.current; }
	EOF;

// Rule Multiplication
ruleMultiplication returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getMultiplicationAccess().getPrimaryExpressionParserRuleCall_0());
		}
		this_PrimaryExpression_0=rulePrimaryExpression
		{
			$current = $this_PrimaryExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getMultiplicationAccess().getMultiLeftAction_1_0_0(),
							$current);
					}
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getMultiplicationAccess().getOperatorBinaryNestingOperatorEnumRuleCall_1_0_1_0());
						}
						lv_operator_2_0=ruleBinaryNestingOperator
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMultiplicationRule());
							}
							set(
								$current,
								"operator",
								lv_operator_2_0,
								"de.tudresden.inf.st.bigraphs.dsl.BDSL.BinaryNestingOperator");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getMultiplicationAccess().getRightPrimaryExpressionParserRuleCall_1_1_0());
					}
					lv_right_3_0=rulePrimaryExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMultiplicationRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"de.tudresden.inf.st.bigraphs.dsl.BDSL.PrimaryExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRulePrimaryExpression
entryRulePrimaryExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrimaryExpressionRule()); }
	iv_rulePrimaryExpression=rulePrimaryExpression
	{ $current=$iv_rulePrimaryExpression.current; }
	EOF;

// Rule PrimaryExpression
rulePrimaryExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='('
			{
				newLeafNode(otherlv_0, grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_0_0());
			}
			{
				newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getBigraphExpressionParserRuleCall_0_1());
			}
			this_BigraphExpression_1=ruleBigraphExpression
			{
				$current = $this_BigraphExpression_1.current;
				afterParserOrEnumRuleCall();
			}
			otherlv_2=')'
			{
				newLeafNode(otherlv_2, grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_0_2());
			}
		)
		    |
		{
			newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getAbstractBigraphDeclarationParserRuleCall_1());
		}
		this_AbstractBigraphDeclaration_3=ruleAbstractBigraphDeclaration
		{
			$current = $this_AbstractBigraphDeclaration_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleMainDeclaration
entryRuleMainDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMainDeclarationRule()); }
	iv_ruleMainDeclaration=ruleMainDeclaration
	{ $current=$iv_ruleMainDeclaration.current; }
	EOF;

// Rule MainDeclaration
ruleMainDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getMainDeclarationAccess().getMainDeclarationAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getMainDeclarationAccess().getDefinitionAbstractMainStatementsParserRuleCall_1_0());
				}
				lv_definition_1_0=ruleAbstractMainStatements
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMainDeclarationRule());
					}
					set(
						$current,
						"definition",
						lv_definition_1_0,
						"de.tudresden.inf.st.bigraphs.dsl.BDSL.AbstractMainStatements");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=';'
		{
			newLeafNode(otherlv_2, grammarAccess.getMainDeclarationAccess().getSemicolonKeyword_2());
		}
	)
;

// Entry rule entryRuleAbstractMainStatements
entryRuleAbstractMainStatements returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAbstractMainStatementsRule()); }
	iv_ruleAbstractMainStatements=ruleAbstractMainStatements
	{ $current=$iv_ruleAbstractMainStatements.current; }
	EOF;

// Rule AbstractMainStatements
ruleAbstractMainStatements returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAbstractMainStatementsAccess().getBigraphVarReferenceParserRuleCall_0());
		}
		this_BigraphVarReference_0=ruleBigraphVarReference
		{
			$current = $this_BigraphVarReference_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAbstractMainStatementsAccess().getPrintLnParserRuleCall_1());
		}
		this_PrintLn_1=rulePrintLn
		{
			$current = $this_PrintLn_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRulePrintLn
entryRulePrintLn returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrintLnRule()); }
	iv_rulePrintLn=rulePrintLn
	{ $current=$iv_rulePrintLn.current; }
	EOF;

// Rule PrintLn
rulePrintLn returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='println'
		{
			newLeafNode(otherlv_0, grammarAccess.getPrintLnAccess().getPrintlnKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getPrintLnAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPrintLnAccess().getTextPrintableExpressionParserRuleCall_2_0());
				}
				lv_text_2_0=rulePrintableExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPrintLnRule());
					}
					set(
						$current,
						"text",
						lv_text_2_0,
						"de.tudresden.inf.st.bigraphs.dsl.BDSL.PrintableExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getPrintLnAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRulePrintableExpression
entryRulePrintableExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrintableExpressionRule()); }
	iv_rulePrintableExpression=rulePrintableExpression
	{ $current=$iv_rulePrintableExpression.current; }
	EOF;

// Rule PrintableExpression
rulePrintableExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_STRING_0=RULE_STRING
		{
			newLeafNode(this_STRING_0, grammarAccess.getPrintableExpressionAccess().getSTRINGTerminalRuleCall_0());
		}
		    |
		{
			newCompositeNode(grammarAccess.getPrintableExpressionAccess().getBigraphVarReferenceParserRuleCall_1());
		}
		this_BigraphVarReference_1=ruleBigraphVarReference
		{
			$current = $this_BigraphVarReference_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Rule BinaryParallelOperator
ruleBinaryParallelOperator returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='UNSET'
			{
				$current = grammarAccess.getBinaryParallelOperatorAccess().getUNSETEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getBinaryParallelOperatorAccess().getUNSETEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='+'
			{
				$current = grammarAccess.getBinaryParallelOperatorAccess().getPLUSEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getBinaryParallelOperatorAccess().getPLUSEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='||'
			{
				$current = grammarAccess.getBinaryParallelOperatorAccess().getBARSEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getBinaryParallelOperatorAccess().getBARSEnumLiteralDeclaration_2());
			}
		)
	)
;

// Rule BinaryNestingOperator
ruleBinaryNestingOperator returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='UNSET2'
			{
				$current = grammarAccess.getBinaryNestingOperatorAccess().getUNSET2EnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getBinaryNestingOperatorAccess().getUNSET2EnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='-'
			{
				$current = grammarAccess.getBinaryNestingOperatorAccess().getDOTEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getBinaryNestingOperatorAccess().getDOTEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='*'
			{
				$current = grammarAccess.getBinaryNestingOperatorAccess().getMULEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getBinaryNestingOperatorAccess().getMULEnumLiteralDeclaration_2());
			}
		)
	)
;

// Rule ControlType
ruleControlType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='atomic'
			{
				$current = grammarAccess.getControlTypeAccess().getATOMICEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getControlTypeAccess().getATOMICEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='active'
			{
				$current = grammarAccess.getControlTypeAccess().getACTIVEEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getControlTypeAccess().getACTIVEEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='passive'
			{
				$current = grammarAccess.getControlTypeAccess().getPASSIVEEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getControlTypeAccess().getPASSIVEEnumLiteralDeclaration_2());
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
