/**
 * generated by Xtext 2.21.0
 */
package de.tudresden.inf.st.bigraphs.dsl.bDSL.util;

import de.tudresden.inf.st.bigraphs.dsl.bDSL.*;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.common.notify.impl.AdapterFactoryImpl;

import org.eclipse.emf.ecore.EObject;

/**
 * <!-- begin-user-doc -->
 * The <b>Adapter Factory</b> for the model.
 * It provides an adapter <code>createXXX</code> method for each class of the model.
 * <!-- end-user-doc -->
 * @see de.tudresden.inf.st.bigraphs.dsl.bDSL.BDSLPackage
 * @generated
 */
public class BDSLAdapterFactory extends AdapterFactoryImpl
{
  /**
   * The cached model package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static BDSLPackage modelPackage;

  /**
   * Creates an instance of the adapter factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public BDSLAdapterFactory()
  {
    if (modelPackage == null)
    {
      modelPackage = BDSLPackage.eINSTANCE;
    }
  }

  /**
   * Returns whether this factory is applicable for the type of the object.
   * <!-- begin-user-doc -->
   * This implementation returns <code>true</code> if the object is either the model's package or is an instance object of the model.
   * <!-- end-user-doc -->
   * @return whether this factory is applicable for the type of the object.
   * @generated
   */
  @Override
  public boolean isFactoryForType(Object object)
  {
    if (object == modelPackage)
    {
      return true;
    }
    if (object instanceof EObject)
    {
      return ((EObject)object).eClass().getEPackage() == modelPackage;
    }
    return false;
  }

  /**
   * The switch that delegates to the <code>createXXX</code> methods.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected BDSLSwitch<Adapter> modelSwitch =
    new BDSLSwitch<Adapter>()
    {
      @Override
      public Adapter caseBRSModel(BRSModel object)
      {
        return createBRSModelAdapter();
      }
      @Override
      public Adapter caseBRSModelImport(BRSModelImport object)
      {
        return createBRSModelImportAdapter();
      }
      @Override
      public Adapter caseAbstractElement(AbstractElement object)
      {
        return createAbstractElementAdapter();
      }
      @Override
      public Adapter caseMainElement(MainElement object)
      {
        return createMainElementAdapter();
      }
      @Override
      public Adapter caseSignature(Signature object)
      {
        return createSignatureAdapter();
      }
      @Override
      public Adapter caseControlVariable(ControlVariable object)
      {
        return createControlVariableAdapter();
      }
      @Override
      public Adapter caseNameConstant(NameConstant object)
      {
        return createNameConstantAdapter();
      }
      @Override
      public Adapter caseLinkNames(LinkNames object)
      {
        return createLinkNamesAdapter();
      }
      @Override
      public Adapter caseSiteVars(SiteVars object)
      {
        return createSiteVarsAdapter();
      }
      @Override
      public Adapter caseSite(Site object)
      {
        return createSiteAdapter();
      }
      @Override
      public Adapter caseLVD2(LVD2 object)
      {
        return createLVD2Adapter();
      }
      @Override
      public Adapter caseLocalVarDecl(LocalVarDecl object)
      {
        return createLocalVarDeclAdapter();
      }
      @Override
      public Adapter caseLocalRuleDecl(LocalRuleDecl object)
      {
        return createLocalRuleDeclAdapter();
      }
      @Override
      public Adapter caseBigraphVarReference(BigraphVarReference object)
      {
        return createBigraphVarReferenceAdapter();
      }
      @Override
      public Adapter caseRuleVarReference(RuleVarReference object)
      {
        return createRuleVarReferenceAdapter();
      }
      @Override
      public Adapter caseAbstractBigraphDeclaration(AbstractBigraphDeclaration object)
      {
        return createAbstractBigraphDeclarationAdapter();
      }
      @Override
      public Adapter caseNodeExpressionCall(NodeExpressionCall object)
      {
        return createNodeExpressionCallAdapter();
      }
      @Override
      public Adapter caseBigraphExpression(BigraphExpression object)
      {
        return createBigraphExpressionAdapter();
      }
      @Override
      public Adapter caseMainDeclaration(MainDeclaration object)
      {
        return createMainDeclarationAdapter();
      }
      @Override
      public Adapter caseAbstractMainStatements(AbstractMainStatements object)
      {
        return createAbstractMainStatementsAdapter();
      }
      @Override
      public Adapter caseBRSDefinition(BRSDefinition object)
      {
        return createBRSDefinitionAdapter();
      }
      @Override
      public Adapter casePrintLn(PrintLn object)
      {
        return createPrintLnAdapter();
      }
      @Override
      public Adapter casePrintableExpression(PrintableExpression object)
      {
        return createPrintableExpressionAdapter();
      }
      @Override
      public Adapter casePlus(Plus object)
      {
        return createPlusAdapter();
      }
      @Override
      public Adapter caseMulti(Multi object)
      {
        return createMultiAdapter();
      }
      @Override
      public Adapter caseStringLiteral(StringLiteral object)
      {
        return createStringLiteralAdapter();
      }
      @Override
      public Adapter defaultCase(EObject object)
      {
        return createEObjectAdapter();
      }
    };

  /**
   * Creates an adapter for the <code>target</code>.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param target the object to adapt.
   * @return the adapter for the <code>target</code>.
   * @generated
   */
  @Override
  public Adapter createAdapter(Notifier target)
  {
    return modelSwitch.doSwitch((EObject)target);
  }


  /**
   * Creates a new adapter for an object of class '{@link de.tudresden.inf.st.bigraphs.dsl.bDSL.BRSModel <em>BRS Model</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.tudresden.inf.st.bigraphs.dsl.bDSL.BRSModel
   * @generated
   */
  public Adapter createBRSModelAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.tudresden.inf.st.bigraphs.dsl.bDSL.BRSModelImport <em>BRS Model Import</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.tudresden.inf.st.bigraphs.dsl.bDSL.BRSModelImport
   * @generated
   */
  public Adapter createBRSModelImportAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.tudresden.inf.st.bigraphs.dsl.bDSL.AbstractElement <em>Abstract Element</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.tudresden.inf.st.bigraphs.dsl.bDSL.AbstractElement
   * @generated
   */
  public Adapter createAbstractElementAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.tudresden.inf.st.bigraphs.dsl.bDSL.MainElement <em>Main Element</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.tudresden.inf.st.bigraphs.dsl.bDSL.MainElement
   * @generated
   */
  public Adapter createMainElementAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.tudresden.inf.st.bigraphs.dsl.bDSL.Signature <em>Signature</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.tudresden.inf.st.bigraphs.dsl.bDSL.Signature
   * @generated
   */
  public Adapter createSignatureAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.tudresden.inf.st.bigraphs.dsl.bDSL.ControlVariable <em>Control Variable</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.tudresden.inf.st.bigraphs.dsl.bDSL.ControlVariable
   * @generated
   */
  public Adapter createControlVariableAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.tudresden.inf.st.bigraphs.dsl.bDSL.NameConstant <em>Name Constant</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.tudresden.inf.st.bigraphs.dsl.bDSL.NameConstant
   * @generated
   */
  public Adapter createNameConstantAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.tudresden.inf.st.bigraphs.dsl.bDSL.LinkNames <em>Link Names</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.tudresden.inf.st.bigraphs.dsl.bDSL.LinkNames
   * @generated
   */
  public Adapter createLinkNamesAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.tudresden.inf.st.bigraphs.dsl.bDSL.SiteVars <em>Site Vars</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.tudresden.inf.st.bigraphs.dsl.bDSL.SiteVars
   * @generated
   */
  public Adapter createSiteVarsAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.tudresden.inf.st.bigraphs.dsl.bDSL.Site <em>Site</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.tudresden.inf.st.bigraphs.dsl.bDSL.Site
   * @generated
   */
  public Adapter createSiteAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.tudresden.inf.st.bigraphs.dsl.bDSL.LVD2 <em>LVD2</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.tudresden.inf.st.bigraphs.dsl.bDSL.LVD2
   * @generated
   */
  public Adapter createLVD2Adapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.tudresden.inf.st.bigraphs.dsl.bDSL.LocalVarDecl <em>Local Var Decl</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.tudresden.inf.st.bigraphs.dsl.bDSL.LocalVarDecl
   * @generated
   */
  public Adapter createLocalVarDeclAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.tudresden.inf.st.bigraphs.dsl.bDSL.LocalRuleDecl <em>Local Rule Decl</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.tudresden.inf.st.bigraphs.dsl.bDSL.LocalRuleDecl
   * @generated
   */
  public Adapter createLocalRuleDeclAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.tudresden.inf.st.bigraphs.dsl.bDSL.BigraphVarReference <em>Bigraph Var Reference</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.tudresden.inf.st.bigraphs.dsl.bDSL.BigraphVarReference
   * @generated
   */
  public Adapter createBigraphVarReferenceAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.tudresden.inf.st.bigraphs.dsl.bDSL.RuleVarReference <em>Rule Var Reference</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.tudresden.inf.st.bigraphs.dsl.bDSL.RuleVarReference
   * @generated
   */
  public Adapter createRuleVarReferenceAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.tudresden.inf.st.bigraphs.dsl.bDSL.AbstractBigraphDeclaration <em>Abstract Bigraph Declaration</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.tudresden.inf.st.bigraphs.dsl.bDSL.AbstractBigraphDeclaration
   * @generated
   */
  public Adapter createAbstractBigraphDeclarationAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.tudresden.inf.st.bigraphs.dsl.bDSL.NodeExpressionCall <em>Node Expression Call</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.tudresden.inf.st.bigraphs.dsl.bDSL.NodeExpressionCall
   * @generated
   */
  public Adapter createNodeExpressionCallAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.tudresden.inf.st.bigraphs.dsl.bDSL.BigraphExpression <em>Bigraph Expression</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.tudresden.inf.st.bigraphs.dsl.bDSL.BigraphExpression
   * @generated
   */
  public Adapter createBigraphExpressionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.tudresden.inf.st.bigraphs.dsl.bDSL.MainDeclaration <em>Main Declaration</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.tudresden.inf.st.bigraphs.dsl.bDSL.MainDeclaration
   * @generated
   */
  public Adapter createMainDeclarationAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.tudresden.inf.st.bigraphs.dsl.bDSL.AbstractMainStatements <em>Abstract Main Statements</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.tudresden.inf.st.bigraphs.dsl.bDSL.AbstractMainStatements
   * @generated
   */
  public Adapter createAbstractMainStatementsAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.tudresden.inf.st.bigraphs.dsl.bDSL.BRSDefinition <em>BRS Definition</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.tudresden.inf.st.bigraphs.dsl.bDSL.BRSDefinition
   * @generated
   */
  public Adapter createBRSDefinitionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.tudresden.inf.st.bigraphs.dsl.bDSL.PrintLn <em>Print Ln</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.tudresden.inf.st.bigraphs.dsl.bDSL.PrintLn
   * @generated
   */
  public Adapter createPrintLnAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.tudresden.inf.st.bigraphs.dsl.bDSL.PrintableExpression <em>Printable Expression</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.tudresden.inf.st.bigraphs.dsl.bDSL.PrintableExpression
   * @generated
   */
  public Adapter createPrintableExpressionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.tudresden.inf.st.bigraphs.dsl.bDSL.Plus <em>Plus</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.tudresden.inf.st.bigraphs.dsl.bDSL.Plus
   * @generated
   */
  public Adapter createPlusAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.tudresden.inf.st.bigraphs.dsl.bDSL.Multi <em>Multi</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.tudresden.inf.st.bigraphs.dsl.bDSL.Multi
   * @generated
   */
  public Adapter createMultiAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.tudresden.inf.st.bigraphs.dsl.bDSL.StringLiteral <em>String Literal</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.tudresden.inf.st.bigraphs.dsl.bDSL.StringLiteral
   * @generated
   */
  public Adapter createStringLiteralAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for the default case.
   * <!-- begin-user-doc -->
   * This default implementation returns null.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @generated
   */
  public Adapter createEObjectAdapter()
  {
    return null;
  }

} //BDSLAdapterFactory
