/**
 * generated by Xtext 2.21.0
 */
package de.tudresden.inf.st.bigraphs.dsl.bDSL.impl;

import de.tudresden.inf.st.bigraphs.dsl.bDSL.AbstractBigraphDeclaration;
import de.tudresden.inf.st.bigraphs.dsl.bDSL.AbstractElement;
import de.tudresden.inf.st.bigraphs.dsl.bDSL.AbstractMainStatements;
import de.tudresden.inf.st.bigraphs.dsl.bDSL.BDSLFactory;
import de.tudresden.inf.st.bigraphs.dsl.bDSL.BDSLPackage;
import de.tudresden.inf.st.bigraphs.dsl.bDSL.BRSDefinition;
import de.tudresden.inf.st.bigraphs.dsl.bDSL.BRSModel;
import de.tudresden.inf.st.bigraphs.dsl.bDSL.BRSModelImport;
import de.tudresden.inf.st.bigraphs.dsl.bDSL.BigraphExpression;
import de.tudresden.inf.st.bigraphs.dsl.bDSL.BigraphVarReference;
import de.tudresden.inf.st.bigraphs.dsl.bDSL.BinaryNestingOperator;
import de.tudresden.inf.st.bigraphs.dsl.bDSL.BinaryParallelOperator;
import de.tudresden.inf.st.bigraphs.dsl.bDSL.ControlType;
import de.tudresden.inf.st.bigraphs.dsl.bDSL.ControlVariable;
import de.tudresden.inf.st.bigraphs.dsl.bDSL.LinkNames;
import de.tudresden.inf.st.bigraphs.dsl.bDSL.LocalRuleDecl;
import de.tudresden.inf.st.bigraphs.dsl.bDSL.LocalVarDecl;
import de.tudresden.inf.st.bigraphs.dsl.bDSL.MainDeclaration;
import de.tudresden.inf.st.bigraphs.dsl.bDSL.MainElement;
import de.tudresden.inf.st.bigraphs.dsl.bDSL.Multi;
import de.tudresden.inf.st.bigraphs.dsl.bDSL.NameConstant;
import de.tudresden.inf.st.bigraphs.dsl.bDSL.NodeExpressionCall;
import de.tudresden.inf.st.bigraphs.dsl.bDSL.OutputModeModel;
import de.tudresden.inf.st.bigraphs.dsl.bDSL.Plus;
import de.tudresden.inf.st.bigraphs.dsl.bDSL.PrintLn;
import de.tudresden.inf.st.bigraphs.dsl.bDSL.PrintableExpression;
import de.tudresden.inf.st.bigraphs.dsl.bDSL.RuleVarReference;
import de.tudresden.inf.st.bigraphs.dsl.bDSL.Signature;
import de.tudresden.inf.st.bigraphs.dsl.bDSL.Site;
import de.tudresden.inf.st.bigraphs.dsl.bDSL.SiteVars;
import de.tudresden.inf.st.bigraphs.dsl.bDSL.StringLiteral;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EEnum;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

import org.eclipse.emf.ecore.impl.EPackageImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Package</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class BDSLPackageImpl extends EPackageImpl implements BDSLPackage
{
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass brsModelEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass brsModelImportEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass abstractElementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass mainElementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass signatureEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass controlVariableEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass nameConstantEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass linkNamesEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass siteVarsEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass siteEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass lvd2EClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass localVarDeclEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass localRuleDeclEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass bigraphVarReferenceEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass ruleVarReferenceEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass abstractBigraphDeclarationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass nodeExpressionCallEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass bigraphExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass mainDeclarationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass abstractMainStatementsEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass brsDefinitionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass printLnEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass printableExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass plusEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass multiEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass stringLiteralEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum binaryParallelOperatorEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum binaryNestingOperatorEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum controlTypeEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum outputModeModelEEnum = null;

  /**
   * Creates an instance of the model <b>Package</b>, registered with
   * {@link org.eclipse.emf.ecore.EPackage.Registry EPackage.Registry} by the package
   * package URI value.
   * <p>Note: the correct way to create the package is via the static
   * factory method {@link #init init()}, which also performs
   * initialization of the package, or returns the registered package,
   * if one already exists.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.eclipse.emf.ecore.EPackage.Registry
   * @see de.tudresden.inf.st.bigraphs.dsl.bDSL.BDSLPackage#eNS_URI
   * @see #init()
   * @generated
   */
  private BDSLPackageImpl()
  {
    super(eNS_URI, BDSLFactory.eINSTANCE);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static boolean isInited = false;

  /**
   * Creates, registers, and initializes the <b>Package</b> for this model, and for any others upon which it depends.
   *
   * <p>This method is used to initialize {@link BDSLPackage#eINSTANCE} when that field is accessed.
   * Clients should not invoke it directly. Instead, they should simply access that field to obtain the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #eNS_URI
   * @see #createPackageContents()
   * @see #initializePackageContents()
   * @generated
   */
  public static BDSLPackage init()
  {
    if (isInited) return (BDSLPackage)EPackage.Registry.INSTANCE.getEPackage(BDSLPackage.eNS_URI);

    // Obtain or create and register package
    Object registeredBDSLPackage = EPackage.Registry.INSTANCE.get(eNS_URI);
    BDSLPackageImpl theBDSLPackage = registeredBDSLPackage instanceof BDSLPackageImpl ? (BDSLPackageImpl)registeredBDSLPackage : new BDSLPackageImpl();

    isInited = true;

    // Create package meta-data objects
    theBDSLPackage.createPackageContents();

    // Initialize created meta-data
    theBDSLPackage.initializePackageContents();

    // Mark meta-data to indicate it can't be changed
    theBDSLPackage.freeze();

    // Update the registry and return the package
    EPackage.Registry.INSTANCE.put(BDSLPackage.eNS_URI, theBDSLPackage);
    return theBDSLPackage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getBRSModel()
  {
    return brsModelEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getBRSModel_Signature()
  {
    return (EReference)brsModelEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getBRSModel_Statements()
  {
    return (EReference)brsModelEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getBRSModel_Main()
  {
    return (EReference)brsModelEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getBRSModelImport()
  {
    return brsModelImportEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getBRSModelImport_ImportedNamespace()
  {
    return (EAttribute)brsModelImportEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getAbstractElement()
  {
    return abstractElementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getAbstractElement_Name()
  {
    return (EAttribute)abstractElementEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getAbstractElement_Sig()
  {
    return (EReference)abstractElementEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getMainElement()
  {
    return mainElementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getMainElement_Value()
  {
    return (EReference)mainElementEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getSignature()
  {
    return signatureEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getSignature_Name()
  {
    return (EAttribute)signatureEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSignature_Controls()
  {
    return (EReference)signatureEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getControlVariable()
  {
    return controlVariableEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getControlVariable_Type()
  {
    return (EAttribute)controlVariableEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getControlVariable_Name()
  {
    return (EAttribute)controlVariableEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getControlVariable_Arity()
  {
    return (EAttribute)controlVariableEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getNameConstant()
  {
    return nameConstantEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getNameConstant_Value()
  {
    return (EAttribute)nameConstantEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getLinkNames()
  {
    return linkNamesEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getSiteVars()
  {
    return siteVarsEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getSiteVars_Name()
  {
    return (EAttribute)siteVarsEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getSite()
  {
    return siteEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getSite_Index()
  {
    return (EAttribute)siteEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getLVD2()
  {
    return lvd2EClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getLocalVarDecl()
  {
    return localVarDeclEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getLocalVarDecl_Type()
  {
    return (EReference)localVarDeclEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getLocalVarDecl_Definition()
  {
    return (EReference)localVarDeclEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getLocalVarDecl_SiteArgs()
  {
    return (EReference)localVarDeclEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getLocalRuleDecl()
  {
    return localRuleDeclEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getLocalRuleDecl_Redex()
  {
    return (EReference)localRuleDeclEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getLocalRuleDecl_Reactum()
  {
    return (EReference)localRuleDeclEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getBigraphVarReference()
  {
    return bigraphVarReferenceEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getBigraphVarReference_Value()
  {
    return (EReference)bigraphVarReferenceEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getRuleVarReference()
  {
    return ruleVarReferenceEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getRuleVarReference_Value()
  {
    return (EReference)ruleVarReferenceEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getAbstractBigraphDeclaration()
  {
    return abstractBigraphDeclarationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getNodeExpressionCall()
  {
    return nodeExpressionCallEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getNodeExpressionCall_Value()
  {
    return (EReference)nodeExpressionCallEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getNodeExpressionCall_Links()
  {
    return (EReference)nodeExpressionCallEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getBigraphExpression()
  {
    return bigraphExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getMainDeclaration()
  {
    return mainDeclarationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getMainDeclaration_Definition()
  {
    return (EReference)mainDeclarationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getAbstractMainStatements()
  {
    return abstractMainStatementsEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getBRSDefinition()
  {
    return brsDefinitionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getBRSDefinition_Agents()
  {
    return (EReference)brsDefinitionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getBRSDefinition_Rules()
  {
    return (EReference)brsDefinitionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPrintLn()
  {
    return printLnEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getPrintLn_Text()
  {
    return (EReference)printLnEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getPrintLn_Mode()
  {
    return (EAttribute)printLnEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPrintableExpression()
  {
    return printableExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPlus()
  {
    return plusEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getPlus_Left()
  {
    return (EReference)plusEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getPlus_Operator()
  {
    return (EAttribute)plusEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getPlus_Right()
  {
    return (EReference)plusEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getMulti()
  {
    return multiEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getMulti_Left()
  {
    return (EReference)multiEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getMulti_Operator()
  {
    return (EAttribute)multiEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getMulti_Right()
  {
    return (EReference)multiEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getStringLiteral()
  {
    return stringLiteralEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getStringLiteral_Value()
  {
    return (EAttribute)stringLiteralEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getBinaryParallelOperator()
  {
    return binaryParallelOperatorEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getBinaryNestingOperator()
  {
    return binaryNestingOperatorEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getControlType()
  {
    return controlTypeEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getOutputModeModel()
  {
    return outputModeModelEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public BDSLFactory getBDSLFactory()
  {
    return (BDSLFactory)getEFactoryInstance();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isCreated = false;

  /**
   * Creates the meta-model objects for the package.  This method is
   * guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void createPackageContents()
  {
    if (isCreated) return;
    isCreated = true;

    // Create classes and their features
    brsModelEClass = createEClass(BRS_MODEL);
    createEReference(brsModelEClass, BRS_MODEL__SIGNATURE);
    createEReference(brsModelEClass, BRS_MODEL__STATEMENTS);
    createEReference(brsModelEClass, BRS_MODEL__MAIN);

    brsModelImportEClass = createEClass(BRS_MODEL_IMPORT);
    createEAttribute(brsModelImportEClass, BRS_MODEL_IMPORT__IMPORTED_NAMESPACE);

    abstractElementEClass = createEClass(ABSTRACT_ELEMENT);
    createEAttribute(abstractElementEClass, ABSTRACT_ELEMENT__NAME);
    createEReference(abstractElementEClass, ABSTRACT_ELEMENT__SIG);

    mainElementEClass = createEClass(MAIN_ELEMENT);
    createEReference(mainElementEClass, MAIN_ELEMENT__VALUE);

    signatureEClass = createEClass(SIGNATURE);
    createEAttribute(signatureEClass, SIGNATURE__NAME);
    createEReference(signatureEClass, SIGNATURE__CONTROLS);

    controlVariableEClass = createEClass(CONTROL_VARIABLE);
    createEAttribute(controlVariableEClass, CONTROL_VARIABLE__TYPE);
    createEAttribute(controlVariableEClass, CONTROL_VARIABLE__NAME);
    createEAttribute(controlVariableEClass, CONTROL_VARIABLE__ARITY);

    nameConstantEClass = createEClass(NAME_CONSTANT);
    createEAttribute(nameConstantEClass, NAME_CONSTANT__VALUE);

    linkNamesEClass = createEClass(LINK_NAMES);

    siteVarsEClass = createEClass(SITE_VARS);
    createEAttribute(siteVarsEClass, SITE_VARS__NAME);

    siteEClass = createEClass(SITE);
    createEAttribute(siteEClass, SITE__INDEX);

    lvd2EClass = createEClass(LVD2);

    localVarDeclEClass = createEClass(LOCAL_VAR_DECL);
    createEReference(localVarDeclEClass, LOCAL_VAR_DECL__TYPE);
    createEReference(localVarDeclEClass, LOCAL_VAR_DECL__DEFINITION);
    createEReference(localVarDeclEClass, LOCAL_VAR_DECL__SITE_ARGS);

    localRuleDeclEClass = createEClass(LOCAL_RULE_DECL);
    createEReference(localRuleDeclEClass, LOCAL_RULE_DECL__REDEX);
    createEReference(localRuleDeclEClass, LOCAL_RULE_DECL__REACTUM);

    bigraphVarReferenceEClass = createEClass(BIGRAPH_VAR_REFERENCE);
    createEReference(bigraphVarReferenceEClass, BIGRAPH_VAR_REFERENCE__VALUE);

    ruleVarReferenceEClass = createEClass(RULE_VAR_REFERENCE);
    createEReference(ruleVarReferenceEClass, RULE_VAR_REFERENCE__VALUE);

    abstractBigraphDeclarationEClass = createEClass(ABSTRACT_BIGRAPH_DECLARATION);

    nodeExpressionCallEClass = createEClass(NODE_EXPRESSION_CALL);
    createEReference(nodeExpressionCallEClass, NODE_EXPRESSION_CALL__VALUE);
    createEReference(nodeExpressionCallEClass, NODE_EXPRESSION_CALL__LINKS);

    bigraphExpressionEClass = createEClass(BIGRAPH_EXPRESSION);

    mainDeclarationEClass = createEClass(MAIN_DECLARATION);
    createEReference(mainDeclarationEClass, MAIN_DECLARATION__DEFINITION);

    abstractMainStatementsEClass = createEClass(ABSTRACT_MAIN_STATEMENTS);

    brsDefinitionEClass = createEClass(BRS_DEFINITION);
    createEReference(brsDefinitionEClass, BRS_DEFINITION__AGENTS);
    createEReference(brsDefinitionEClass, BRS_DEFINITION__RULES);

    printLnEClass = createEClass(PRINT_LN);
    createEReference(printLnEClass, PRINT_LN__TEXT);
    createEAttribute(printLnEClass, PRINT_LN__MODE);

    printableExpressionEClass = createEClass(PRINTABLE_EXPRESSION);

    plusEClass = createEClass(PLUS);
    createEReference(plusEClass, PLUS__LEFT);
    createEAttribute(plusEClass, PLUS__OPERATOR);
    createEReference(plusEClass, PLUS__RIGHT);

    multiEClass = createEClass(MULTI);
    createEReference(multiEClass, MULTI__LEFT);
    createEAttribute(multiEClass, MULTI__OPERATOR);
    createEReference(multiEClass, MULTI__RIGHT);

    stringLiteralEClass = createEClass(STRING_LITERAL);
    createEAttribute(stringLiteralEClass, STRING_LITERAL__VALUE);

    // Create enums
    binaryParallelOperatorEEnum = createEEnum(BINARY_PARALLEL_OPERATOR);
    binaryNestingOperatorEEnum = createEEnum(BINARY_NESTING_OPERATOR);
    controlTypeEEnum = createEEnum(CONTROL_TYPE);
    outputModeModelEEnum = createEEnum(OUTPUT_MODE_MODEL);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isInitialized = false;

  /**
   * Complete the initialization of the package and its meta-model.  This
   * method is guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void initializePackageContents()
  {
    if (isInitialized) return;
    isInitialized = true;

    // Initialize package
    setName(eNAME);
    setNsPrefix(eNS_PREFIX);
    setNsURI(eNS_URI);

    // Create type parameters

    // Set bounds for type parameters

    // Add supertypes to classes
    nameConstantEClass.getESuperTypes().add(this.getLinkNames());
    siteEClass.getESuperTypes().add(this.getAbstractBigraphDeclaration());
    lvd2EClass.getESuperTypes().add(this.getAbstractBigraphDeclaration());
    localVarDeclEClass.getESuperTypes().add(this.getAbstractElement());
    localVarDeclEClass.getESuperTypes().add(this.getLVD2());
    localRuleDeclEClass.getESuperTypes().add(this.getAbstractElement());
    bigraphVarReferenceEClass.getESuperTypes().add(this.getAbstractBigraphDeclaration());
    bigraphVarReferenceEClass.getESuperTypes().add(this.getAbstractMainStatements());
    bigraphVarReferenceEClass.getESuperTypes().add(this.getPrintableExpression());
    abstractBigraphDeclarationEClass.getESuperTypes().add(this.getBigraphExpression());
    nodeExpressionCallEClass.getESuperTypes().add(this.getAbstractBigraphDeclaration());
    brsDefinitionEClass.getESuperTypes().add(this.getAbstractMainStatements());
    printLnEClass.getESuperTypes().add(this.getAbstractMainStatements());
    plusEClass.getESuperTypes().add(this.getBigraphExpression());
    multiEClass.getESuperTypes().add(this.getBigraphExpression());
    stringLiteralEClass.getESuperTypes().add(this.getPrintableExpression());

    // Initialize classes and features; add operations and parameters
    initEClass(brsModelEClass, BRSModel.class, "BRSModel", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getBRSModel_Signature(), this.getSignature(), null, "signature", null, 0, -1, BRSModel.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getBRSModel_Statements(), this.getAbstractElement(), null, "statements", null, 0, -1, BRSModel.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getBRSModel_Main(), this.getMainElement(), null, "main", null, 0, 1, BRSModel.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(brsModelImportEClass, BRSModelImport.class, "BRSModelImport", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getBRSModelImport_ImportedNamespace(), ecorePackage.getEString(), "importedNamespace", null, 0, 1, BRSModelImport.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(abstractElementEClass, AbstractElement.class, "AbstractElement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getAbstractElement_Name(), ecorePackage.getEString(), "name", null, 0, 1, AbstractElement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getAbstractElement_Sig(), this.getSignature(), null, "sig", null, 0, 1, AbstractElement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(mainElementEClass, MainElement.class, "MainElement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getMainElement_Value(), this.getMainDeclaration(), null, "value", null, 0, -1, MainElement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(signatureEClass, Signature.class, "Signature", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getSignature_Name(), ecorePackage.getEString(), "name", null, 0, 1, Signature.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getSignature_Controls(), this.getControlVariable(), null, "controls", null, 0, -1, Signature.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(controlVariableEClass, ControlVariable.class, "ControlVariable", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getControlVariable_Type(), this.getControlType(), "type", null, 0, 1, ControlVariable.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getControlVariable_Name(), ecorePackage.getEString(), "name", null, 0, 1, ControlVariable.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getControlVariable_Arity(), ecorePackage.getEInt(), "arity", null, 0, 1, ControlVariable.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(nameConstantEClass, NameConstant.class, "NameConstant", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getNameConstant_Value(), ecorePackage.getEString(), "value", null, 0, 1, NameConstant.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(linkNamesEClass, LinkNames.class, "LinkNames", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(siteVarsEClass, SiteVars.class, "SiteVars", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getSiteVars_Name(), ecorePackage.getEString(), "name", null, 0, 1, SiteVars.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(siteEClass, Site.class, "Site", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getSite_Index(), ecorePackage.getEInt(), "index", null, 0, 1, Site.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(lvd2EClass, de.tudresden.inf.st.bigraphs.dsl.bDSL.LVD2.class, "LVD2", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(localVarDeclEClass, LocalVarDecl.class, "LocalVarDecl", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getLocalVarDecl_Type(), this.getControlVariable(), null, "type", null, 0, 1, LocalVarDecl.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getLocalVarDecl_Definition(), this.getBigraphExpression(), null, "definition", null, 0, -1, LocalVarDecl.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getLocalVarDecl_SiteArgs(), this.getSiteVars(), null, "siteArgs", null, 0, -1, LocalVarDecl.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(localRuleDeclEClass, LocalRuleDecl.class, "LocalRuleDecl", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getLocalRuleDecl_Redex(), this.getBigraphExpression(), null, "redex", null, 0, 1, LocalRuleDecl.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getLocalRuleDecl_Reactum(), this.getBigraphExpression(), null, "reactum", null, 0, 1, LocalRuleDecl.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(bigraphVarReferenceEClass, BigraphVarReference.class, "BigraphVarReference", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getBigraphVarReference_Value(), this.getLocalVarDecl(), null, "value", null, 0, 1, BigraphVarReference.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(ruleVarReferenceEClass, RuleVarReference.class, "RuleVarReference", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getRuleVarReference_Value(), this.getLocalRuleDecl(), null, "value", null, 0, 1, RuleVarReference.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(abstractBigraphDeclarationEClass, AbstractBigraphDeclaration.class, "AbstractBigraphDeclaration", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(nodeExpressionCallEClass, NodeExpressionCall.class, "NodeExpressionCall", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getNodeExpressionCall_Value(), this.getControlVariable(), null, "value", null, 0, 1, NodeExpressionCall.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getNodeExpressionCall_Links(), this.getLinkNames(), null, "links", null, 0, -1, NodeExpressionCall.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(bigraphExpressionEClass, BigraphExpression.class, "BigraphExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(mainDeclarationEClass, MainDeclaration.class, "MainDeclaration", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getMainDeclaration_Definition(), this.getAbstractMainStatements(), null, "definition", null, 0, 1, MainDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(abstractMainStatementsEClass, AbstractMainStatements.class, "AbstractMainStatements", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(brsDefinitionEClass, BRSDefinition.class, "BRSDefinition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getBRSDefinition_Agents(), ecorePackage.getEObject(), null, "agents", null, 0, -1, BRSDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getBRSDefinition_Rules(), this.getRuleVarReference(), null, "rules", null, 0, -1, BRSDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(printLnEClass, PrintLn.class, "PrintLn", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getPrintLn_Text(), this.getPrintableExpression(), null, "text", null, 0, 1, PrintLn.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getPrintLn_Mode(), this.getOutputModeModel(), "mode", null, 0, 1, PrintLn.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(printableExpressionEClass, PrintableExpression.class, "PrintableExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(plusEClass, Plus.class, "Plus", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getPlus_Left(), this.getBigraphExpression(), null, "left", null, 0, 1, Plus.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getPlus_Operator(), this.getBinaryParallelOperator(), "operator", null, 0, 1, Plus.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getPlus_Right(), this.getBigraphExpression(), null, "right", null, 0, 1, Plus.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(multiEClass, Multi.class, "Multi", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getMulti_Left(), this.getBigraphExpression(), null, "left", null, 0, 1, Multi.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getMulti_Operator(), this.getBinaryNestingOperator(), "operator", null, 0, 1, Multi.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getMulti_Right(), this.getBigraphExpression(), null, "right", null, 0, 1, Multi.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(stringLiteralEClass, StringLiteral.class, "StringLiteral", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getStringLiteral_Value(), ecorePackage.getEString(), "value", null, 0, 1, StringLiteral.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    // Initialize enums and add enum literals
    initEEnum(binaryParallelOperatorEEnum, BinaryParallelOperator.class, "BinaryParallelOperator");
    addEEnumLiteral(binaryParallelOperatorEEnum, BinaryParallelOperator.UNSET);
    addEEnumLiteral(binaryParallelOperatorEEnum, BinaryParallelOperator.MERGE);
    addEEnumLiteral(binaryParallelOperatorEEnum, BinaryParallelOperator.PARALLEL);

    initEEnum(binaryNestingOperatorEEnum, BinaryNestingOperator.class, "BinaryNestingOperator");
    addEEnumLiteral(binaryNestingOperatorEEnum, BinaryNestingOperator.UNSET2);
    addEEnumLiteral(binaryNestingOperatorEEnum, BinaryNestingOperator.NESTING);
    addEEnumLiteral(binaryNestingOperatorEEnum, BinaryNestingOperator.COMPOSITION);

    initEEnum(controlTypeEEnum, ControlType.class, "ControlType");
    addEEnumLiteral(controlTypeEEnum, ControlType.ATOMIC);
    addEEnumLiteral(controlTypeEEnum, ControlType.ACTIVE);
    addEEnumLiteral(controlTypeEEnum, ControlType.PASSIVE);

    initEEnum(outputModeModelEEnum, OutputModeModel.class, "OutputModeModel");
    addEEnumLiteral(outputModeModelEEnum, OutputModeModel.INSTANCE_MODEL);
    addEEnumLiteral(outputModeModelEEnum, OutputModeModel.META_MODEL);

    // Create resource
    createResource(eNS_URI);
  }

} //BDSLPackageImpl
