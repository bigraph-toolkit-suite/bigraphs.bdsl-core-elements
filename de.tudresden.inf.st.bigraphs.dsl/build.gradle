plugins {
    id 'maven-publish'
}

// ext.title = 'Bigraphical Domain-specific Language (BDSL)'
// description = 'Language infrastructure for BDSL (Bigraphical DSL) based on Xtext'
// def artifactId = 'bdsl-grammar'

dependencies {	
	// TODO 2023
	implementation project(":bigraphs.bigraph-ecore-metamodel") // TODO 2023 changed to impl
	//compile 'de.tudresden.inf.st.bigraphs.model:bigraph-ecore-model:1.3.0-SNAPSHOT'
	api "org.eclipse.xtext:org.eclipse.xtext:${versions.xtext}"
	api "org.eclipse.xtext:org.eclipse.xtext.xbase:${versions.xtext}"
	implementation "org.eclipse.xtext:org.eclipse.xtext.xtext.generator:${versions.xtext}"
	implementation "jakarta.inject:jakarta.inject-api:2.0.1"  
	implementation "org.apache.commons:commons-lang3:${versions.commonslang3}"
	implementation "commons-io:commons-io:${versions.commonsio}"
	implementation "net.bytebuddy:byte-buddy-agent:1.11.2"
	//compile "org.hyperic:sigar:4.2.0"
}
configurations {
	mwe2 {
		extendsFrom compileClasspath
	}
}

// TODO 2023
// apply plugin: 'com.jfrog.artifactory'
//apply plugin: 'java'
//apply plugin: 'maven-publish'

archivesBaseName = 'de.tudresden.inf.st.bigraphs.dsl'


dependencies {
	mwe2 'org.eclipse.emf:org.eclipse.emf.mwe2.launch:${versions.mwe2}'
	mwe2 "org.eclipse.xtext:org.eclipse.xtext.common.types:${versions.xtext}"
	mwe2 "org.eclipse.xtext:org.eclipse.xtext.xtext.generator:${versions.xtext}"
	mwe2 'org.eclipse.xtext:xtext-antlr-generator' //${versions.antlrgen}
}

// TODO
task generateXtextLanguage(type: JavaExec) {
	mainClass = 'org.eclipse.emf.mwe2.launch.runtime.Mwe2Launcher'
	classpath = configurations.mwe2
	inputs.file "src/de/tudresden/inf/st/bigraphs/dsl/GenerateBDSL.mwe2"
	inputs.file "src/de/tudresden/inf/st/bigraphs/dsl/BDSL.xtext"
	outputs.dir "src-gen"
	args += "src/de/tudresden/inf/st/bigraphs/dsl/GenerateBDSL.mwe2"
	args += "-p"
	args += "rootPath=/${projectDir}/.."
}

processResources.dependsOn(generateXtextLanguage)
generateXtext.dependsOn(generateXtextLanguage)
clean.dependsOn(cleanGenerateXtextLanguage)
eclipse.classpath.plusConfigurations += [configurations.mwe2]

// https://docs.gradle.org/current/userguide/publishing_maven.html
publishing {
    publications {
        maven(MavenPublication) {
            groupId = 'de.tudresden.inf.st.bigraphs.dsl'
            artifactId = 'bdsl-grammar'
            version = '1.0.1-SNAPSHOT'
            from components.java
        }
    }
}

/*
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

javadoc.failOnError = false
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}
*/

//jar {
	// TODO 2023 commented out
    //into("META-INF/maven/$project.group/${artifactId}") {
    //    from { generatePomFileForMavenJavaPublication }
    //    rename ".*", "pom.xml"
    //}
    
    
//    manifest {
//    	attributes(
//            'Launcher-Agent-Class': 'de.tudresden.inf.st.bigraphs.dsl.ClassPathAgent',
//            'Agent-Class': 'de.tudresden.inf.st.bigraphs.dsl.ClassPathAgent',
//            'Premain-Class' : 'de.tudresden.inf.st.bigraphs.dsl.ClassPathAgent'
//        )
//    }
//}

//artifacts {
//    archives sourcesJar
//    archives javadocJar
//}

// TODO 2023
// Deployment configuration for stgroup.jfrog.io/
//apply from: "${rootDir}/gradle/artifactory.data.gradle"

/*
project(':BigraphBaseModel') {
	compileJava {
		onlyIf {
            project.hasProperty("generateBigraphBaseModel")
        }
	}
}
*/

