plugins {
  id "maven-publish"
}

ext.title = 'Bigraph Language (BDSL)'
description = 'Language infrastructure for Bigraph DSL (BDSL) based on Xtext'
def artifactId = 'bdsl-grammar'

configurations {
	mwe2 {
		extendsFrom compile
	}
}

apply plugin: 'com.jfrog.artifactory'
apply plugin: 'java'
apply plugin: 'maven-publish'

archivesBaseName = 'de.tudresden.inf.st.bigraphs.dsl'


dependencies {
	compile project(":BigraphBaseModel")
	//compile 'de.tudresden.inf.st.bigraphs.model:bigraph-ecore-model:1.3.0-SNAPSHOT'
	compile "org.eclipse.xtext:org.eclipse.xtext:${versions.xtext}"
	compile "org.eclipse.xtext:org.eclipse.xtext.xbase:${versions.xtext}"
	compile "org.eclipse.xtext:org.eclipse.xtext.xtext.generator:${versions.xtext}"
	compile "org.apache.commons:commons-lang3:${versions.commonslang3}"
	compile "commons-io:commons-io:${versions.commonsio}"
	compile "net.bytebuddy:byte-buddy-agent:1.11.2"
	//compile "org.hyperic:sigar:4.2.0"

	mwe2 'org.eclipse.emf:org.eclipse.emf.mwe2.launch:${versions.mwe2}'
	mwe2 "org.eclipse.xtext:org.eclipse.xtext.common.types:${versions.xtext}"
	mwe2 "org.eclipse.xtext:org.eclipse.xtext.xtext.generator:${versions.xtext}"
	mwe2 'org.eclipse.xtext:xtext-antlr-generator' //${versions.antlrgen}
}

task generateXtextLanguage(type: JavaExec) {
	main = 'org.eclipse.emf.mwe2.launch.runtime.Mwe2Launcher'
	classpath = configurations.mwe2
	inputs.file "src/de/tudresden/inf/st/bigraphs/dsl/GenerateBDSL.mwe2"
	inputs.file "src/de/tudresden/inf/st/bigraphs/dsl/BDSL.xtext"
	outputs.dir "src-gen"
	args += "src/de/tudresden/inf/st/bigraphs/dsl/GenerateBDSL.mwe2"
	args += "-p"
	args += "rootPath=/${projectDir}/.."
}

generateXtext.dependsOn(generateXtextLanguage)
clean.dependsOn(cleanGenerateXtextLanguage)
eclipse.classpath.plusConfigurations += [configurations.mwe2]

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

javadoc.failOnError = false
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}


jar {
    into("META-INF/maven/$project.group/${artifactId}") {
        from { generatePomFileForMavenJavaPublication }
        rename ".*", "pom.xml"
    }
//    manifest {
//    	attributes(
//            'Launcher-Agent-Class': 'de.tudresden.inf.st.bigraphs.dsl.ClassPathAgent',
//            'Agent-Class': 'de.tudresden.inf.st.bigraphs.dsl.ClassPathAgent',
//            'Premain-Class' : 'de.tudresden.inf.st.bigraphs.dsl.ClassPathAgent'
//        )
//    }
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

// Deployment configuration for stgroup.jfrog.io/
apply from: "${rootDir}/gradle/artifactory.data.gradle"

/*
project(':BigraphBaseModel') {
	compileJava {
		onlyIf {
            project.hasProperty("generateBigraphBaseModel")
        }
	}
}
*/

