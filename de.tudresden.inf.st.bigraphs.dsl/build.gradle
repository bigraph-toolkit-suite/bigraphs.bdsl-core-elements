ext.title = 'Bigraph Language (BDSL)'
description = 'Language infrastructure for Bigraph DSL (BDSL) based on Xtext'

configurations {
	mwe2 {
		extendsFrom compile
	}
}

apply plugin: 'java'
apply plugin: 'maven'

archivesBaseName = 'de.tudresden.inf.st.bigraphs.dsl'

dependencies {
	compile project(":BigraphBaseModel")
	compile "org.eclipse.xtext:org.eclipse.xtext:${versions.xtext}"
	compile "org.eclipse.xtext:org.eclipse.xtext.xbase:${versions.xtext}"
	compile "org.apache.commons:commons-lang3:${versions.commonslang3}"
	//compile 'de.tudresden.inf.st.bigraphs.model:bigraph-ecore-model:1.1.0'

	mwe2 'org.eclipse.emf:org.eclipse.emf.mwe2.launch:${versions.mwe2}'
	mwe2 "org.eclipse.xtext:org.eclipse.xtext.common.types:${versions.xtext}"
	mwe2 "org.eclipse.xtext:org.eclipse.xtext.xtext.generator:${versions.xtext}"
	mwe2 'org.eclipse.xtext:xtext-antlr-generator' //${versions.antlrgen}
}

task generateXtextLanguage(type: JavaExec) {
	main = 'org.eclipse.emf.mwe2.launch.runtime.Mwe2Launcher'
	classpath = configurations.mwe2
	inputs.file "src/de/tudresden/inf/st/bigraphs/dsl/GenerateBDSL.mwe2"
	inputs.file "src/de/tudresden/inf/st/bigraphs/dsl/BDSL.xtext"
	outputs.dir "src-gen"
	args += "src/de/tudresden/inf/st/bigraphs/dsl/GenerateBDSL.mwe2"
	args += "-p"
	args += "rootPath=/${projectDir}/.."
}

generateXtext.dependsOn(generateXtextLanguage)
clean.dependsOn(cleanGenerateXtextLanguage)
eclipse.classpath.plusConfigurations += [configurations.mwe2]

/*
project(':BigraphBaseModel') {
	compileJava {
		onlyIf {
            project.hasProperty("generateBigraphBaseModel")
        }
	}
}
*/

