/**
 * generated by Xtext 2.21.0
 */
package de.tudresden.inf.st.bigraphs.dsl;

import com.google.inject.Binder;
import com.google.inject.name.Names;
import de.tudresden.inf.st.bigraphs.dsl.AbstractBDSLRuntimeModule;
import de.tudresden.inf.st.bigraphs.dsl.DefaultTerminalConverters;
import de.tudresden.inf.st.bigraphs.dsl.scoping.BDSLImportedNamespaceAwareLocalScopeProvider;
import de.tudresden.inf.st.bigraphs.dsl.scoping.BDSLScopeProvider;
import org.eclipse.xtext.conversion.IValueConverterService;
import org.eclipse.xtext.scoping.IScopeProvider;
import org.eclipse.xtext.scoping.impl.AbstractDeclarativeScopeProvider;

/**
 * Use this class to register components to be used at runtime / without the Equinox extension registry.
 * 
 * Validation is bound in the super class. Override method to change this behavior.
 * 
 * @author Dominik Grzelak
 */
@SuppressWarnings("all")
public class BDSLRuntimeModule extends AbstractBDSLRuntimeModule {
  @Override
  public void configureIScopeProviderDelegate(final Binder binder) {
    binder.<IScopeProvider>bind(IScopeProvider.class).annotatedWith(Names.named(AbstractDeclarativeScopeProvider.NAMED_DELEGATE)).to(
      BDSLImportedNamespaceAwareLocalScopeProvider.class);
  }
  
  @Override
  public Class<? extends IScopeProvider> bindIScopeProvider() {
    return BDSLScopeProvider.class;
  }
  
  @Override
  public Class<? extends IValueConverterService> bindIValueConverterService() {
    return DefaultTerminalConverters.class;
  }
}
